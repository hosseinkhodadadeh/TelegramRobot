<?php
/**
 * Lang module
 *
 * This file is part of MadelineProto.
 * MadelineProto is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 * MadelineProto is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU General Public License along with MadelineProto.
 * If not, see <http://www.gnu.org/licenses/>.
 *
 * @author    Daniil Gentili <daniil@daniil.it>
 * @copyright 2016-2018 Daniil Gentili <daniil@daniil.it>
 * @license   https://opensource.org/licenses/AGPL-3.0 AGPLv3
 * @link      https://docs.madelineproto.xyz MadelineProto documentation
 */

namespace danog\MadelineProto;

class Lang
{
    public static $lang = array (
  'it' => 
  array (
    'phpseclib_fork' => 'Per favore installa questo fork di phpseclib: https://github.com/danog/phpseclib',
    'inst_dc' => 'Istanziamento dei DataCenter...',
    'load_rsa' => 'Caricamento delle chiavi RSA...',
    'TL_translation' => 'Translazione degli schemi TL...',
    'dh_prime_check_0' => 'Esecuzione dei check dh_prime (0/3)...',
    'nearest_dc' => 'Siamo in %s, il DC più vicino è %d.',
    'serialization_ofd' => 'La serializzazione non è aggiornata, reistanziamento dell\'oggetto in corso!',
    'getupdates_deserialization' => 'Ottenimento aggiornamenti dopo deserializzazione...',
    'shutdown_reader_pool' => 'Chiusura pool di lettura, %d thread rimasti',
    'threading_on' => 'IL THREADING È ABILITATO',
    'socket_reader' => 'Lettore socket su DC %s: ',
    'socket_status_1' => 'CREAZIONE',
    'socket_status_2' => 'INVIO',
    'socket_status_3' => 'ATTESA',
    'socket_status_4' => 'PRONTO',
    'socket_status_5' => 'AVVIATO',
    'api_not_set' => 'Devi specificare una chiave ed un ID API, ottienili su https://my.telegram.org',
    'session_corrupted' => 'La sessione si è corrotta!',
    'reset_session_seqno' => 'Resettando ID sessione e numero di sequenza sul DC %s...',
    'gen_perm_auth_key' => 'Generando chiave di autorizzazione permanente per il DC %s...',
    'gen_temp_auth_key' => 'Generando chiave di autorizzazione temporanea per il DC %s...',
    'copy_auth_dcs' => 'Copiando autorizzazione dal DC %s al DC %s...',
    'write_client_info' => 'Scrittura info sul client (eseguendo nel contempo il metodo %s)...',
    'config_updated' => 'La configurazione è stata aggiornata!',
    'length_not_4' => 'La lunghezza non è uguale a 4',
    'length_not_8' => 'La lunghezza non è uguale a 8',
    'value_bigger_than_2147483647' => 'Il valore fornito (%s) è maggiore di 2147483647',
    'value_smaller_than_2147483648' => 'Il valore fornito (%s) è minore di -2147483648',
    'value_bigger_than_9223372036854775807' => 'Il valore fornito (%s) è maggiore di 9223372036854775807',
    'value_smaller_than_9223372036854775808' => 'Il valore fornito (%s) è minore di -9223372036854775808',
    'value_bigger_than_4294967296' => 'Il valore fornito (%s) è maggiore di 4294967296',
    'value_smaller_than_0' => 'Il valore fornito (%s) è minore di 0',
    'encode_double_error' => 'Non sono riuscito a codificare il numero a virgola mobile fornito',
    'file_not_exist' => 'Il file specificato non esiste',
    'deserialization_error' => 'C\'è stato un errore durante la deserializzazione',
    'rsa_init' => 'Istanziamento di \\phpseclib\\Crypt\\RSA in corso...',
    'loading_key' => 'Caricamento della chiave in corso...',
    'computing_fingerprint' => 'Calcolo del fingerprint in corso...',
    'rsa_encrypting' => 'Criptando con chiave RSA...',
    'rpc_tg_error' => 'Telegram ha ritornato un errore RPC: %s (%s), causato da %s:%sTL trace:',
    'v_error' => '506572206661766f726520616767696f726e612071756573746120696e7374616c6c617a696f6e65206469204d6164656c696e6550726f746f20636f6e206769742070756c6c206520636f6d706f73657220757064617465',
    'v_tgerror' => '506572206661766f726520616767696f726e61207068702d6c69627467766f6970',
    'no_mode_specified' => 'Nessuna modalità di logging è stata specificata!',
    'constructor_function_uncalled' => 'Il metodo costruttore non è stato ancora chiamato! Per favore chiama il metodo costruttore prima di usare questo metodo.',
    'proxy_class_invalid' => 'È stata specificata una classe proxy errata!',
    'socket_con_error' => 'Connessione fallita.',
    'protocol_not_implemented' => 'Questo protocollo non è stato ancora implementato.',
    'protocol_invalid' => 'È stato fornito un protocollo non valido',
    'nothing_in_socket' => 'Non c\'è niente nel socket!',
    'wrong_length_read' => 'ATTENZIONE: Non sono stati letti abbastanza byte (dovevo leggere %s, ho letto %s)!',
    'no_data_in_socket' => 'Non ci sono dati nel socket!',
    'dc_con_start' => 'Connessione al DC %s in corso...',
    'dc_con_stop' => 'Disconnessione dal DC %s in corso...',
    'dc_con_test_start' => 'Connessione al DC %s (server %s, %s, %s)...',
    'script_not_exist' => 'Lo script fornito non esiste',
    'apifactory_start' => 'Sto avviando la fabbrica di API...',
    'madelineproto_ready' => 'MadelineProto è pronto!',
    'logout_error' => 'C\'è stato un errore durante il logout!',
    'logout_ok' => 'Il logout è stato eseguito correttamente!',
    'already_logged_in' => 'Questa istanza di MadelineProto è già loggata, prima faccio il logout...',
    'login_ok' => 'Il login è stato eseguito correttamente!',
    'login_user' => 'Sto eseguendo il login come utente normale...',
    'login_bot' => 'Sto eseguendo il login come bot...',
    'login_code_sending' => 'Sto inviando il codice...',
    'login_code_sent' => 'Il codice è stato inviato correttamente! Una volta ricevuto il codice dovrai usare la funzione complete_phone_login.',
    'login_code_uncalled' => 'Non sto aspettando il codice! Usa la funzione phone_login.',
    'login_2fa_enabled' => 'L\'autenticazione a due fattori è abilitata, dovrai chiamare il metodo complete_2fa_login...',
    'login_need_signup' => 'Questo numero non è registrato su telegram, dovrai chiamare la funzione complete_signup...',
    'login_auth_key' => 'Sto facendo il login con la chiave di autorizzazione...',
    'not_logged_in' => 'Non ho ancora fatto il login!',
    'signup_uncalled' => 'Chiama prima le funzioni phone_login e complete_phone_login.',
    'signing_up' => 'Mi sto registrando su telegram come utente normale...',
    'signup_ok' => 'Mi sono registrato su Telegram!',
    '2fa_uncalled' => 'Non sto aspettando la password, chiama prima le funzioni phone_login e complete_phone_login!',
    'getting_dialogs' => 'Sto ottenendo la lista delle chat...',
    'libtgvoip_required' => 'È necessario installare l\'estensione php-libtgvoip per accettare e gestire chiamate vocali, vistate https://docs.madelineproto.xyz per più info.',
    'peer_not_in_db' => 'Questo utente/gruppo/canale non è presente nel database interno MadelineProto',
    'calling_user' => 'Sto chiamando %s...',
    'generating_a' => 'Sto generando a...',
    'generating_g_a' => 'Sto generando g_a...',
    'call_error_1' => 'Impossibile trovare ed accettare la chiamata %s',
    'accepting_call' => 'Sto accettando una chiamata da %s...',
    'generating_b' => 'Sto generando b...',
    'call_already_accepted' => 'La chiamata %s è già stata accettata.',
    'call_already_declined' => 'La chiamata %s è già stata annullata.',
    'call_error_2' => 'Impossibile trovare e confermare la chiamata %s',
    'call_confirming' => 'Sto confermando una chiamata da %s',
    'call_error_3' => 'Impossibile trovare e completare la chiamata %s',
    'call_completing' => 'Sto completando una chiamata da %s...',
    'invalid_g_a' => 'g_a non valido!',
    'fingerprint_invalid' => 'fingerprint della chiave non valido!',
    'call_discarding' => 'Sto rifiutando la chiamata %s...',
    'call_set_rating' => 'Sto inviando la recensione della chiamata %s...',
    'call_debug_saving' => 'Sto inviando i dati di debug della chiamata %s...',
    'TL_loading' => 'Sto caricando gli schemi TL...',
    'file_parsing' => 'Leggendo %s...',
    'crc32_mismatch' => 'CRC32 non valido (%s diverso da %s) per %s',
    'src_file_invalid' => 'È stato fornito un file sorgente non valido: ',
    'translating_obj' => 'Traducendo gli oggetti...',
    'translating_methods' => 'Traducendo i metodi...',
    'bool_error' => 'Non sono riuscito ad estrarre un booleano',
    'not_numeric' => 'Il valore fornito non è numerico',
    'long_not_16' => 'Il valore fornito non è lungo 16 byte',
    'long_not_32' => 'Il valore fornito non è lungo 32 byte',
    'long_not_64' => 'Il valore fornito non è lungo 64 byte',
    'array_invalid' => 'Il valore fornito non è un array',
    'predicate_not_set' => 'Il predicato (valore sotto chiave _, esempio [\'_\' => \'inputPeer\']) non è impostato!',
    'type_extract_error' => 'Impossibile estrarre il tipo "%s"',
    'method_not_found' => 'Impossibile trovare il seguente metodo: ',
    'params_missing' => 'Non hai fornito un parametro obbligatorio, rileggi la documentazione API',
    'sec_peer_not_in_db' => 'La chat segreta non è presente nel database interno MadelineProto',
    'stream_handle_invalid' => 'Il valore fornito non è uno stream',
    'length_too_big' => 'Il valore fornito è troppo lungo',
    'deserialize_not_str' => 'Il valore generato non è una stringa',
    'type_extract_error_id' => 'Non sono riuscito ad estrarre il tipo %s con ID %s',
    'vector_invalid' => 'ID vettore non valido: ',
    'constructor_not_found' => 'Costruttore non trovato per tipo: ',
    'rand_bytes_too_small' => 'random_bytes è troppo corto!',
    'botapi_conversion_error' => 'NOn sono risucito a convertire %s in un oggetto bot API',
    'non_text_conversion' => 'Non posso ancora convertire messaggi media',
    'last_byte_invalid' => 'L\'ultimo byte non è valido',
    'file_type_invalid' => 'È stato fornito un tipo file errato',
    'recreate_temp_auth_key' => 'Sono stato costretto a rigenerare la chiave di autorizzazione temporanea',
    'resetting_auth_key' => 'ATTENZIONE: Sto resettando la chiave temporanea...',
    'shutting_down_reader_pool' => 'Chisura pool di lettura',
    'shutting_down_handler_pool' => 'Chiusura pool di gestione per DC %s, %d thread rimasti',
    'secret_chat_skipping' => 'Non ho la chat segreta %s nel database, ignorando messaggio',
    'fingerprint_mismatch' => 'Fingerprint della chiave non valido',
    'msg_data_length_too_big' => 'message_data_length è troppo grande',
    'length_not_divisible_16' => 'La lunghezza dei dati decifrati non è divisibile per 16',
    'msg_key_mismatch' => 'msg_key non valido',
    'rand_bytes_too_short' => 'random_bytes è troppo corto!',
    'resending_unsupported' => 'IL riinvio di messaggi non è ancora supportato',
    'unrecognized_dec_msg' => 'È stato ricevuto un messaggio decifrato sconosciuto: ',
    'serializing_madelineproto' => 'Sto serializzando MadelineProto...',
    'req_pq' => 'Sto richiedendo pq...',
    'done' => 'Fatto!',
    'cdn_reupload' => 'Il file non è disponibile sul nostro CDN, richiedo la copia!',
    'stored_on_cdn' => 'Il file è scaricabile tramite CDN!',
  ),
  'en' => 
  array (
    'req_pq' => 'Requesting pq...',
    'done' => 'Done!',
    'cdn_reupload' => 'File is not stored on CDN, requesting reupload!',
    'stored_on_cdn' => 'File is stored on CDN!',
    'serializing_madelineproto' => 'Serializing MadelineProto...',
    'phpseclib_fork' => 'Please install this fork of phpseclib: https://github.com/danog/phpseclib',
    'inst_dc' => 'Istantiating DataCenter...',
    'load_rsa' => 'Loading RSA keys...',
    'TL_translation' => 'Translating TL schemas...',
    'dh_prime_check_0' => 'Executing dh_prime checks (0/3)...',
    'nearest_dc' => 'We\'re in %s, nearest DC is %d.',
    'serialization_ofd' => 'Serialization is out of date, reconstructing object!',
    'getupdates_deserialization' => 'Getting updates after deserialization...',
    'shutdown_reader_pool' => 'Shutting down reader pool, %d jobs left',
    'threading_on' => 'THREADING IS ENABLED',
    'socket_reader' => 'Socket reader on DC %s: ',
    'socket_status_1' => 'CREATING',
    'socket_status_2' => 'SUBMITTING',
    'socket_status_3' => 'WAITING',
    'socket_status_4' => 'READY',
    'socket_status_5' => 'WORKING',
    'api_not_set' => 'You must provide an api key and an api id, get your own @ my.telegram.org',
    'session_corrupted' => 'The session is corrupted!',
    'reset_session_seqno' => 'Resetting session id and seq_no in DC %s...',
    'gen_perm_auth_key' => 'Generating permanent authorization key for DC %s...',
    'gen_temp_auth_key' => 'Generating temporary authorization key for DC %s...',
    'copy_auth_dcs' => 'Copying authorization from DC %s to DC %s...',
    'write_client_info' => 'Writing client info (also executing %s)...',
    'config_updated' => 'Updated config!',
    'length_not_4' => 'Length is not equal to 4',
    'length_not_8' => 'Length is not equal to 8',
    'value_bigger_than_2147483647' => 'Provided value %s is bigger than 2147483647',
    'value_smaller_than_2147483648' => 'Provided value %s is smaller than -2147483648',
    'value_bigger_than_9223372036854775807' => 'Provided value %s is bigger than 9223372036854775807',
    'value_smaller_than_9223372036854775808' => 'Provided value %s is smaller than -9223372036854775808',
    'value_bigger_than_4294967296' => 'Provided value %s is bigger than 4294967296',
    'value_smaller_than_0' => 'Provided value %s is smaller than 0',
    'encode_double_error' => 'Could not properly encode double',
    'file_not_exist' => 'File does not exist',
    'deserialization_error' => 'An error occurred on deserialization',
    'rsa_init' => 'Istantiating \\phpseclib\\Crypt\\RSA...',
    'loading_key' => 'Loading key...',
    'computing_fingerprint' => 'Computing fingerprint...',
    'rsa_encrypting' => 'Encrypting with rsa key...',
    'rpc_tg_error' => 'Telegram returned an RPC error: %s (%s), caused by %s:%sTL trace:',
    'v_error' => '506c656173652075706461746520746f20746865206c61746573742076657273696f6e206f66204d6164656c696e6550726f746f2e',
    'v_tgerror' => '506c6561736520757064617465207068702d6c69627467766f6970',
    'no_mode_specified' => 'No mode was specified!',
    'constructor_function_uncalled' => 'The constructor function wasn\'t called! Please call the constructor function before using this method.',
    'proxy_class_invalid' => 'Invalid proxy class provided!',
    'socket_con_error' => 'Connection: couldn\'t connect to socket.',
    'protocol_not_implemented' => 'Connection: This protocol isn\'t implemented yet.',
    'protocol_invalid' => 'Connection: invalid protocol specified.',
    'nothing_in_socket' => 'Nothing in the socket!',
    'wrong_length_read' => 'WARNING: Wrong length was read (should\'ve read %s, read %s)!',
    'no_data_in_socket' => 'No data in the socket!',
    'dc_con_start' => 'Connecting to DC %s...',
    'dc_con_stop' => 'Disconnecting from DC %s...',
    'dc_con_test_start' => 'Connecting to DC %s (%s server, %s, %s)...',
    'script_not_exist' => 'Provided script does not exist',
    'apifactory_start' => 'Running APIFactory...',
    'madelineproto_ready' => 'MadelineProto is ready!',
    'logout_error' => 'An error occurred while logging out!',
    'logout_ok' => 'Logged out successfully!',
    'already_logged_in' => 'This instance of MadelineProto is already logged in. Logging out first...',
    'login_ok' => 'Logged in successfully!',
    'login_user' => 'Logging in as a normal user...',
    'login_bot' => 'Logging in as a bot...',
    'login_code_sending' => 'Sending code...',
    'login_code_sent' => 'Code sent successfully! Once you receive the code you should use the complete_phone_login function.',
    'login_code_uncalled' => 'I\'m not waiting for the code! Please call the phone_login method first',
    'login_2fa_enabled' => '2FA enabled, you will have to call the complete_2fa_login function...',
    'login_need_signup' => 'An account has not been created for this number, you will have to call the complete_signup function...',
    'login_auth_key' => 'Logging in using auth key...',
    'not_logged_in' => 'I\'m not logged in!',
    'signup_uncalled' => 'I\'m not waiting to signup! Please call the phone_login and the complete_phone_login methods first!',
    'signing_up' => 'Signing up as a normal user...',
    'signup_ok' => 'Signed up in successfully!',
    '2fa_uncalled' => 'I\'m not waiting for the password! Please call the phone_login and the complete_phone_login methods first!',
    'getting_dialogs' => 'Getting dialogs...',
    'libtgvoip_required' => 'The php-libtgvoip extension is required to accept and manage calls. See daniil.it/MadelineProto for more info.',
    'peer_not_in_db' => 'This peer is not present in the internal peer database',
    'calling_user' => 'Calling %s...',
    'generating_a' => 'Generating a...',
    'generating_g_a' => 'Generating g_a...',
    'call_error_1' => 'Could not find and accept call %s',
    'accepting_call' => 'Accepting call from %s...',
    'generating_b' => 'Generating b...',
    'call_already_accepted' => 'Call %s already accepted',
    'call_already_declined' => 'Call %s already declined',
    'call_error_2' => 'Could not find and confirm call %s',
    'call_confirming' => 'Confirming call from %s...',
    'call_error_3' => 'Could not find and complete call %s',
    'call_completing' => 'Completing call from %s...',
    'invalid_g_a' => 'Invalid g_a!',
    'fingerprint_invalid' => 'Invalid key fingerprint!',
    'call_discarding' => 'Discarding call %s...',
    'call_set_rating' => 'Setting rating for call %s...',
    'call_debug_saving' => 'Saving debug data for call %s...',
    'TL_loading' => 'Loading TL schemes...',
    'file_parsing' => 'Parsing %s...',
    'crc32_mismatch' => 'CRC32 mismatch (%s, %s) for %s',
    'src_file_invalid' => 'Invalid source file was provided: ',
    'translating_obj' => 'Translating objects...',
    'translating_methods' => 'Translating methods...',
    'bool_error' => 'Could not extract boolean',
    'not_numeric' => 'Given value isn\'t numeric',
    'long_not_16' => 'Given value is not 16 bytes long',
    'long_not_32' => 'Given value is not 32 bytes long',
    'long_not_64' => 'Given value is not 64 bytes long',
    'array_invalid' => 'You didn\'t provide a valid array',
    'predicate_not_set' => 'Predicate (value under _) was not set!',
    'type_extract_error' => 'Could not extract type "%s"',
    'method_not_found' => 'Could not find method: ',
    'params_missing' => 'Missing required parameter',
    'sec_peer_not_in_db' => 'This secret peer is not present in the internal peer database',
    'stream_handle_invalid' => 'An invalid stream handle was provided.',
    'length_too_big' => 'Length is too big',
    'deserialize_not_str' => 'Deserialize: Generated value isn\'t a string',
    'type_extract_error_id' => 'Could not extract type: %s with id %s',
    'vector_invalid' => 'Invalid vector constructor: ',
    'constructor_not_found' => 'Constructor not found for type: ',
    'rand_bytes_too_small' => 'Random_bytes is too small!',
    'botapi_conversion_error' => 'Can\'t convert %s to a bot API object',
    'non_text_conversion' => 'Can\'t convert non text messages yet!',
    'last_byte_invalid' => 'Invalid last byte',
    'file_type_invalid' => 'Invalid file type detected (%s)',
    'recreate_temp_auth_key' => 'I had to recreate the temporary authorization key',
    'resetting_auth_key' => 'WARNING: Resetting auth key...',
    'shutting_down_reader_pool' => 'Shutting down reader pool ',
    'shutting_down_handler_pool' => 'Shutting down handler pool for dc %s, %d jobs left',
    'secret_chat_skipping' => 'I do not have the secret chat %s in the database, skipping message...',
    'fingerprint_mismatch' => 'Key fingerprint mismatch',
    'msg_data_length_too_big' => 'Message_data_length is too big',
    'length_not_divisible_16' => 'Length of decrypted data is not divisible by 16',
    'msg_key_mismatch' => 'Msg_key mismatch',
    'rand_bytes_too_short' => 'Random_bytes is too short!',
    'resending_unsupported' => 'Resending of messages is not yet supported',
    'unrecognized_dec_msg' => 'Unrecognized decrypted message received: ',
    'method_req_pq' => 'Requests PQ for factorization',
    'method_req_pq_param_nonce_type_int128' => 'Random number for cryptographic security',
    'method_req_pq_multi' => 'Requests PQ for factorization (new version)',
    'method_req_pq_multi_param_nonce_type_int128' => 'Random number for cryptographic security',
    'method_req_DH_params' => 'Requests Diffie-hellman parameters for key exchange',
    'method_req_DH_params_param_nonce_type_int128' => 'Random number for cryptographic security',
    'method_req_DH_params_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'method_req_DH_params_param_p_type_bytes' => 'Factorized p from pq',
    'method_req_DH_params_param_q_type_bytes' => 'Factorized q from pq',
    'method_req_DH_params_param_public_key_fingerprint_type_long' => 'Server RSA fingerprint',
    'method_req_DH_params_param_encrypted_data_type_bytes' => 'Encrypted key exchange message',
    'method_set_client_DH_params' => 'Sets client diffie-hellman parameters',
    'method_set_client_DH_params_param_nonce_type_int128' => 'Random number for cryptographic security',
    'method_set_client_DH_params_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'method_set_client_DH_params_param_encrypted_data_type_bytes' => 'Encrypted key exchange message',
    'method_rpc_drop_answer' => 'Do not send answer to provided request',
    'method_rpc_drop_answer_param_req_msg_id_type_long' => 'The message ID of the request',
    'method_get_future_salts' => 'Get future salts',
    'method_get_future_salts_param_num_type_int' => 'How many salts should be fetched',
    'method_ping' => 'Pings the server',
    'method_ping_param_ping_id_type_long' => 'Ping ID',
    'method_ping_delay_disconnect' => 'Pings the server and causes disconection if the same method is not called within ping_disconnect_delay',
    'method_ping_delay_disconnect_param_ping_id_type_long' => 'Ping ID',
    'method_ping_delay_disconnect_param_disconnect_delay_type_int' => 'Disconection delay',
    'method_destroy_session' => 'Destroy the current MTProto session',
    'method_destroy_session_param_session_id_type_long' => 'The session to destroy',
    'method_http_wait' => 'Makes the server send messages waiting in the buffer',
    'method_http_wait_param_max_delay_type_int' => 'Denotes the maximum number of milliseconds that has elapsed between the first message for this session and the transmission of an HTTP response',
    'method_http_wait_param_wait_after_type_int' => 'After the receipt of the latest message for a particular session, the server waits another wait_after milliseconds in case there are more messages. If there are no additional messages, the result is transmitted (a container with all the messages).',
    'method_http_wait_param_max_wait_type_int' => 'If more messages appear, the wait_after timer is reset.',
    'method_invokeAfterMsg' => 'Invokes a query after successfull completion of one of the previous queries.',
    'method_invokeAfterMsg_param_msg_id_type_long' => 'Message identifier on which a current query depends',
    'method_invokeAfterMsg_param_query_type_!X' => 'The query itself',
    'method_invokeAfterMsgs' => 'Result type returned by a current query.',
    'method_invokeAfterMsgs_param_msg_ids_type_Vector t' => 'List of messages on which a current query depends',
    'method_invokeAfterMsgs_param_query_type_!X' => 'The query itself',
    'method_initConnection' => 'Initializes connection and save information on the user\'s device and application.',
    'method_initConnection_param_api_id_type_int' => 'Application identifier',
    'method_initConnection_param_device_model_type_string' => 'Device model',
    'method_initConnection_param_system_version_type_string' => 'System version',
    'method_initConnection_param_app_version_type_string' => 'App version',
    'method_initConnection_param_system_lang_code_type_string' => 'Language code',
    'method_initConnection_param_lang_pack_type_string' => 'Language pack to use',
    'method_initConnection_param_lang_code_type_string' => 'Language code to set',
    'method_initConnection_param_query_type_!X' => 'Nested query',
    'method_invokeWithLayer' => 'Invoke this method with layer X',
    'method_invokeWithLayer_param_layer_type_int' => 'The layer version',
    'method_invokeWithLayer_param_query_type_!X' => 'The query',
    'method_invokeWithoutUpdates' => 'Invoke with method without returning updates in the socket',
    'method_invokeWithoutUpdates_param_query_type_!X' => 'The query',
    'method_auth.checkPhone' => 'Check if this phone number is registered on telegram',
    'method_auth.checkPhone_param_phone_number_type_string' => 'The phone number to check',
    'method_auth.sendCode' => 'Use phone_login instead',
    'method_auth.sendCode_param_allow_flashcall_type_true' => 'Use phone_login instead',
    'method_auth.sendCode_param_phone_number_type_string' => 'Use phone_login instead',
    'method_auth.sendCode_param_current_number_type_Bool' => 'Use phone_login instead',
    'method_auth.sendCode_param_api_id_type_int' => 'Use phone_login instead',
    'method_auth.sendCode_param_api_hash_type_string' => 'Use phone_login instead',
    'method_auth.signUp' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signUp_param_phone_number_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signUp_param_phone_code_hash_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signUp_param_phone_code_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signUp_param_first_name_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signUp_param_last_name_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signIn' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signIn_param_phone_number_type_string' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signIn_param_phone_code_hash_type_string' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.signIn_param_phone_code_type_string' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.logOut' => 'You cannot use this method directly, use the logout method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.resetAuthorizations' => 'Delete all logged-in sessions.',
    'method_auth.sendInvites' => 'Invite friends to telegram!',
    'method_auth.sendInvites_param_phone_numbers_type_Vector t' => 'Phone numbers to invite',
    'method_auth.sendInvites_param_message_type_string' => 'The message to send',
    'method_auth.exportAuthorization' => 'You cannot use this method directly, use $MadelineProto->export_authorization() instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
    'method_auth.exportAuthorization_param_dc_id_type_int' => 'You cannot use this method directly, use $MadelineProto->export_authorization() instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
    'method_auth.importAuthorization' => 'You cannot use this method directly, use $MadelineProto->import_authorization($authorization) instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
    'method_auth.importAuthorization_param_id_type_int' => 'You cannot use this method directly, use $MadelineProto->import_authorization($authorization) instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
    'method_auth.importAuthorization_param_bytes_type_bytes' => 'You cannot use this method directly, use $MadelineProto->import_authorization($authorization) instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
    'method_auth.bindTempAuthKey' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
    'method_auth.bindTempAuthKey_param_perm_auth_key_id_type_long' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
    'method_auth.bindTempAuthKey_param_nonce_type_long' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
    'method_auth.bindTempAuthKey_param_expires_at_type_int' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
    'method_auth.bindTempAuthKey_param_encrypted_message_type_bytes' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
    'method_auth.importBotAuthorization' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.importBotAuthorization_param_api_id_type_int' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.importBotAuthorization_param_api_hash_type_string' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.importBotAuthorization_param_bot_auth_token_type_string' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.checkPassword' => 'You cannot use this method directly, use the complete_2fa_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.checkPassword_param_password_hash_type_bytes' => 'You cannot use this method directly, use the complete_2fa_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.requestPasswordRecovery' => 'Send an email to recover the 2FA password',
    'method_auth.recoverPassword' => 'Use the code that was emailed to you after running $MadelineProto->auth->requestPasswordRecovery to login to your account',
    'method_auth.recoverPassword_param_code_type_string' => 'The code that was emailed to you',
    'method_auth.resendCode' => 'Resend the SMS verification code',
    'method_auth.resendCode_param_phone_number_type_string' => 'The phone number',
    'method_auth.resendCode_param_phone_code_hash_type_string' => 'The phone code hash',
    'method_auth.cancelCode' => 'Invalidate sent phone code',
    'method_auth.cancelCode_param_phone_number_type_string' => 'Phone number',
    'method_auth.cancelCode_param_phone_code_hash_type_string' => 'Phone code hash',
    'method_auth.dropTempAuthKeys' => 'Delete all temporary authorization keys except the ones provided',
    'method_auth.dropTempAuthKeys_param_except_auth_keys_type_Vector t' => 'The temporary authorization keys to keep',
    'method_account.registerDevice' => 'Register device for push notifications',
    'method_account.registerDevice_param_token_type_type_int' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone, 6 - Blackberry, and other, see source code of official apps for more info',
    'method_account.registerDevice_param_token_type_string' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone,6 - Blackberry, and other, see source code of official apps for more info',
    'method_account.registerDevice_param_app_sandbox_type_Bool' => 'Should the app run in a sandbox?',
    'method_account.registerDevice_param_other_uids_type_Vector t' => 'Other UIDs',
    'method_account.unregisterDevice' => 'Stop sending PUSH notifications to app',
    'method_account.unregisterDevice_param_token_type_type_int' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone,6 - Blackberry, and other, see source code of official apps for more info',
    'method_account.unregisterDevice_param_token_type_string' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone,6 - Blackberry, and other, see source code of official apps for more info',
    'method_account.unregisterDevice_param_other_uids_type_Vector t' => 'Other UIDs',
    'method_account.updateNotifySettings' => 'Change notification settings',
    'method_account.updateNotifySettings_param_peer_type_InputNotifyPeer' => 'The peers to which the notification settings should be applied',
    'method_account.updateNotifySettings_param_settings_type_InputPeerNotifySettings' => 'Notification settings',
    'method_account.getNotifySettings' => 'Get notification settings',
    'method_account.getNotifySettings_param_peer_type_InputNotifyPeer' => 'Notification source ',
    'method_account.resetNotifySettings' => 'Reset all notification settings',
    'method_account.updateProfile' => 'Update profile info',
    'method_account.updateProfile_param_first_name_type_string' => 'The first name',
    'method_account.updateProfile_param_last_name_type_string' => 'The last name',
    'method_account.updateProfile_param_about_type_string' => 'The bio/about field',
    'method_account.updateStatus' => 'Update online status',
    'method_account.updateStatus_param_offline_type_Bool' => 'True to set the status to offline',
    'method_account.getWallPapers' => 'Returns a list of available wallpapers.',
    'method_account.reportPeer' => 'Report for spam',
    'method_account.reportPeer_param_peer_type_InputPeer' => 'The peer to report',
    'method_account.reportPeer_param_reason_type_ReportReason' => 'Why are you reporting this peer',
    'method_account.checkUsername' => 'Check if this username is available',
    'method_account.checkUsername_param_username_type_string' => 'The username to check',
    'method_account.updateUsername' => 'Update this user\'s username',
    'method_account.updateUsername_param_username_type_string' => 'The new username',
    'method_account.getPrivacy' => 'Get privacy settings',
    'method_account.getPrivacy_param_key_type_InputPrivacyKey' => 'Privacy setting key',
    'method_account.setPrivacy' => 'Set privacy settings',
    'method_account.setPrivacy_param_key_type_InputPrivacyKey' => 'Privacy setting',
    'method_account.setPrivacy_param_rules_type_Vector t' => 'Privacy settings',
    'method_account.deleteAccount' => 'Delete this account',
    'method_account.deleteAccount_param_reason_type_string' => 'Why are you going away? :(',
    'method_account.getAccountTTL' => 'Get account TTL',
    'method_account.setAccountTTL' => 'Set account TTL',
    'method_account.setAccountTTL_param_ttl_type_AccountDaysTTL' => 'Time To Live of account',
    'method_account.sendChangePhoneCode' => 'Change the phone number',
    'method_account.sendChangePhoneCode_param_allow_flashcall_type_true' => 'Can the code be sent using a flash call instead of an SMS?',
    'method_account.sendChangePhoneCode_param_phone_number_type_string' => 'New phone number',
    'method_account.sendChangePhoneCode_param_current_number_type_Bool' => 'Current phone number',
    'method_account.changePhone' => 'Change the phone number associated to this account',
    'method_account.changePhone_param_phone_number_type_string' => 'Phone number',
    'method_account.changePhone_param_phone_code_hash_type_string' => 'Phone code hash returned by account.sendChangePhoneCode',
    'method_account.changePhone_param_phone_code_type_string' => 'The phone code sent by account.sendChangePhoneCode',
    'method_account.updateDeviceLocked' => 'Disable all notifications for a certain period',
    'method_account.updateDeviceLocked_param_period_type_int' => 'For how long should notifications be disabled',
    'method_account.getAuthorizations' => 'Get all logged-in authorizations',
    'method_account.resetAuthorization' => 'Delete a certain session',
    'method_account.resetAuthorization_param_hash_type_long' => 'The session hash, obtained from $MadelineProto->account->getAuthorizations',
    'method_account.getPassword' => 'Get the current password',
    'method_account.getPasswordSettings' => 'Get the current 2FA settings',
    'method_account.getPasswordSettings_param_current_password_hash_type_bytes' => 'Use only if you have set a 2FA password: `$current_salt = $MadelineProto->account->getPassword()[\'current_salt\']; $current_password_hash = hash(\'sha256\', $current_salt.$password.$current_salt, true);`',
    'method_account.updatePasswordSettings' => 'You cannot use this method directly; use $MadelineProto->update_2fa($params), instead (see https://docs.madelineproto.xyz for more info)',
    'method_account.updatePasswordSettings_param_current_password_hash_type_bytes' => 'Use only if you have set a 2FA password: `$current_salt = $MadelineProto->account->getPassword()[\'current_salt\']; $current_password_hash = hash(\'sha256\', $current_salt.$password.$current_salt, true);`',
    'method_account.updatePasswordSettings_param_new_settings_type_account.PasswordInputSettings' => 'New 2FA settings',
    'method_account.sendConfirmPhoneCode' => 'Send confirmation phone code',
    'method_account.sendConfirmPhoneCode_param_allow_flashcall_type_true' => 'Can telegram call you instead of sending an SMS?',
    'method_account.sendConfirmPhoneCode_param_hash_type_string' => 'The hash',
    'method_account.sendConfirmPhoneCode_param_current_number_type_Bool' => 'The current phone number',
    'method_account.confirmPhone' => 'Confirm this phone number is associated to this account, obtain phone_code_hash from sendConfirmPhoneCode',
    'method_account.confirmPhone_param_phone_code_hash_type_string' => 'Obtain phone_code_hash from sendConfirmPhoneCode',
    'method_account.confirmPhone_param_phone_code_type_string' => 'The code sent by sendConfirmPhoneCode',
    'method_account.getTmpPassword' => 'Get temporary password for buying products through bots',
    'method_account.getTmpPassword_param_password_hash_type_bytes' => 'The password hash',
    'method_account.getTmpPassword_param_period_type_int' => 'The validity period',
    'method_account.getWebAuthorizations' => 'Get telegram web login authorizations',
    'method_account.resetWebAuthorization' => 'Delete a certain telegram web login authorization',
    'method_account.resetWebAuthorization_param_hash_type_long' => 'The authorization\'s hash',
    'method_account.resetWebAuthorizations' => 'Reset all telegram web login authorizations',
    'method_users.getUsers' => 'Get info about users',
    'method_users.getUsers_param_id_type_Vector t' => 'The ids of the users',
    'method_users.getFullUser' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_users.getFullUser_param_id_type_InputUser' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_contacts.getStatuses' => 'Get online status of all users',
    'method_contacts.getContacts' => 'Get all contacts',
    'method_contacts.getContacts_param_hash_type_int' => 'User ids of contacts previously fetched with this method',
    'method_contacts.importContacts' => 'Add phone number as contact',
    'method_contacts.importContacts_param_contacts_type_Vector t' => 'The numbers to import',
    'method_contacts.deleteContact' => 'Delete a contact',
    'method_contacts.deleteContact_param_id_type_InputUser' => 'The contact to delete',
    'method_contacts.deleteContacts' => 'Delete multiple contacts',
    'method_contacts.deleteContacts_param_id_type_Vector t' => 'The contacts to delete',
    'method_contacts.block' => 'Block a user',
    'method_contacts.block_param_id_type_InputUser' => 'The user to block',
    'method_contacts.unblock' => 'Unblock a user',
    'method_contacts.unblock_param_id_type_InputUser' => 'The user to unblock',
    'method_contacts.getBlocked' => 'Get blocked users',
    'method_contacts.getBlocked_param_offset_type_int' => 'Initially 0, then set to the number of blocked contacts previously fetched',
    'method_contacts.getBlocked_param_limit_type_int' => 'How many blocked contacts to fetch',
    'method_contacts.exportCard' => 'Export contact as card',
    'method_contacts.importCard' => 'Import card as contact',
    'method_contacts.importCard_param_export_card_type_Vector t' => 'The card',
    'method_contacts.search' => 'Search contacts',
    'method_contacts.search_param_q_type_string' => 'The search query',
    'method_contacts.search_param_limit_type_int' => 'How many results should be returned',
    'method_contacts.resolveUsername' => 'You cannot use this method directly, use the resolve_username, get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_contacts.resolveUsername_param_username_type_string' => 'You cannot use this method directly, use the resolve_username, get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_contacts.getTopPeers' => 'Get most used chats',
    'method_contacts.getTopPeers_param_correspondents_type_true' => 'Fetch users?',
    'method_contacts.getTopPeers_param_bots_pm_type_true' => 'Fetch bots?',
    'method_contacts.getTopPeers_param_bots_inline_type_true' => 'Fetch inline bots?',
    'method_contacts.getTopPeers_param_phone_calls_type_true' => 'Fetch phone calls?',
    'method_contacts.getTopPeers_param_groups_type_true' => 'Fetch groups?',
    'method_contacts.getTopPeers_param_channels_type_true' => 'Fetch channels and supergroups?',
    'method_contacts.getTopPeers_param_offset_type_int' => 'Initially 0, then `$offset += $contacts_TopPeers[\'categories\'][\'count\'];`',
    'method_contacts.getTopPeers_param_limit_type_int' => 'How many results to fetch',
    'method_contacts.getTopPeers_param_hash_type_int' => 'Peer ids previously fetched with this method',
    'method_contacts.resetTopPeerRating' => 'Reset top peer rating for a certain category/peer',
    'method_contacts.resetTopPeerRating_param_category_type_TopPeerCategory' => 'The category ',
    'method_contacts.resetTopPeerRating_param_peer_type_InputPeer' => 'The peer',
    'method_contacts.resetSaved' => 'Reset saved contacts',
    'method_messages.getMessages' => 'Get messages',
    'method_messages.getMessages_param_id_type_Vector t' => 'The IDs of messages to fetch (only for users and normal groups)',
    'method_messages.getDialogs' => 'Gets list of chats: you should use $MadelineProto->get_dialogs() instead: https://docs.madelineproto.xyz/docs/DIALOGS.html',
    'method_messages.getDialogs_param_exclude_pinned_type_true' => 'Do not fetch pinned chats',
    'method_messages.getDialogs_param_offset_date_type_int' => 'End($res[\'messages\'])[\'date\'];',
    'method_messages.getDialogs_param_offset_id_type_int' => 'End($res[\'messages\'])[\'id\'];',
    'method_messages.getDialogs_param_offset_peer_type_InputPeer' => 'End($res[\'dialogs\'])[\'peer\'];',
    'method_messages.getDialogs_param_limit_type_int' => 'Number of dialogs to fetch',
    'method_messages.getHistory' => 'Get previous messages of a group',
    'method_messages.getHistory_param_peer_type_InputPeer' => 'The chat',
    'method_messages.getHistory_param_offset_id_type_int' => 'The last fetched message ID, initially 0',
    'method_messages.getHistory_param_offset_date_type_int' => 'The date of the last previously fetched message, initially 0',
    'method_messages.getHistory_param_add_offset_type_int' => 'Additional offset, can be 0',
    'method_messages.getHistory_param_limit_type_int' => 'Number of messages to fetch',
    'method_messages.getHistory_param_max_id_type_int' => 'Maximum message ID to fetch',
    'method_messages.getHistory_param_min_id_type_int' => 'Minumum message ID to fetch',
    'method_messages.getHistory_param_hash_type_int' => 'List of IDs of already parsed messages',
    'method_messages.search' => 'Search peers or messages',
    'method_messages.search_param_peer_type_InputPeer' => 'Where to search',
    'method_messages.search_param_q_type_string' => 'What to search',
    'method_messages.search_param_from_id_type_InputUser' => 'Show only messages from a certain user?',
    'method_messages.search_param_filter_type_MessagesFilter' => 'Message filter',
    'method_messages.search_param_min_date_type_int' => 'Minumum date of results to fetch',
    'method_messages.search_param_max_date_type_int' => 'Maximum date of results to fetch',
    'method_messages.search_param_offset_id_type_int' => 'Message ID offset',
    'method_messages.search_param_add_offset_type_int' => 'Additional offset, can be 0',
    'method_messages.search_param_limit_type_int' => 'Number of results to return',
    'method_messages.search_param_max_id_type_int' => 'Maximum message id to return',
    'method_messages.search_param_min_id_type_int' => 'Minumum message id to return',
    'method_messages.readHistory' => 'Mark messages as read',
    'method_messages.readHistory_param_peer_type_InputPeer' => 'Where to mark messages as read',
    'method_messages.readHistory_param_max_id_type_int' => 'Maximum message ID to mark as read',
    'method_messages.deleteHistory' => 'Delete chat history',
    'method_messages.deleteHistory_param_just_clear_type_true' => 'Only clear it from your side',
    'method_messages.deleteHistory_param_peer_type_InputPeer' => 'Where to clear it',
    'method_messages.deleteHistory_param_max_id_type_int' => 'Maximum message id of messages to delete',
    'method_messages.deleteMessages' => 'Delete messages',
    'method_messages.deleteMessages_param_revoke_type_true' => 'Delete the messages for everyone?',
    'method_messages.deleteMessages_param_id_type_Vector t' => 'IDs of messages to delete, use channels->deleteMessages for supergroups',
    'method_messages.receivedMessages' => 'Mark messages as read',
    'method_messages.receivedMessages_param_max_id_type_int' => 'Maximum message id of messages to mark as read',
    'method_messages.setTyping' => 'Change typing status',
    'method_messages.setTyping_param_peer_type_InputPeer' => 'Where to change typing status',
    'method_messages.setTyping_param_action_type_SendMessageAction' => 'Typing status',
    'method_messages.sendMessage' => 'Send a message',
    'method_messages.sendMessage_param_no_webpage_type_true' => 'Disable webpage preview?',
    'method_messages.sendMessage_param_silent_type_true' => 'Disable notifications?',
    'method_messages.sendMessage_param_background_type_true' => 'Disable background notifications?',
    'method_messages.sendMessage_param_clear_draft_type_true' => 'Clear the message draft of this chat?',
    'method_messages.sendMessage_param_peer_type_InputPeer' => 'The chat where to send this message',
    'method_messages.sendMessage_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
    'method_messages.sendMessage_param_message_type_string' => 'The message to send',
    'method_messages.sendMessage_param_reply_markup_type_ReplyMarkup' => 'Keyboards to send',
    'method_messages.sendMessage_param_entities_type_Vector t' => 'Entities to send (for styled text)',
    'method_messages.sendMedia' => 'Send a media',
    'method_messages.sendMedia_param_silent_type_true' => 'Disable notifications?',
    'method_messages.sendMedia_param_background_type_true' => 'Disable background notifications?',
    'method_messages.sendMedia_param_clear_draft_type_true' => 'Clear the message draft of this chat?',
    'method_messages.sendMedia_param_peer_type_InputPeer' => 'Where to send the media',
    'method_messages.sendMedia_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
    'method_messages.sendMedia_param_media_type_InputMedia' => 'The media to send',
    'method_messages.sendMedia_param_message_type_string' => 'The caption',
    'method_messages.sendMedia_param_reply_markup_type_ReplyMarkup' => 'Keyboards to send',
    'method_messages.sendMedia_param_entities_type_Vector t' => 'Entities for styled text',
    'method_messages.forwardMessages' => 'Forward messages',
    'method_messages.forwardMessages_param_silent_type_true' => 'Disable notifications',
    'method_messages.forwardMessages_param_background_type_true' => 'Disable background notifications',
    'method_messages.forwardMessages_param_with_my_score_type_true' => 'If forwarding a game, forward your score, too',
    'method_messages.forwardMessages_param_grouped_type_true' => 'Set to true if forwarding albums',
    'method_messages.forwardMessages_param_from_peer_type_InputPeer' => 'From where to forward the messages',
    'method_messages.forwardMessages_param_id_type_Vector t' => 'The message IDs',
    'method_messages.forwardMessages_param_to_peer_type_InputPeer' => 'Where to forward the messages',
    'method_messages.reportSpam' => 'Report a peer for spam',
    'method_messages.reportSpam_param_peer_type_InputPeer' => 'The peer to report',
    'method_messages.hideReportSpam' => 'Hide report spam popup',
    'method_messages.hideReportSpam_param_peer_type_InputPeer' => 'Where to hide the popup',
    'method_messages.getPeerSettings' => 'Get the settings of  apeer',
    'method_messages.getPeerSettings_param_peer_type_InputPeer' => 'The peer',
    'method_messages.getChats' => 'Get info about chats',
    'method_messages.getChats_param_id_type_Vector t' => 'The MTProto IDs of chats to fetch info about',
    'method_messages.getFullChat' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_messages.getFullChat_param_chat_id_type_InputPeer' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_messages.editChatTitle' => 'Edit the title of a normal chat (not supergroup)',
    'method_messages.editChatTitle_param_chat_id_type_InputPeer' => 'The ID of the chat',
    'method_messages.editChatTitle_param_title_type_string' => 'The new title',
    'method_messages.editChatPhoto' => 'Edit the photo of a normal chat (not supergroup)',
    'method_messages.editChatPhoto_param_chat_id_type_InputPeer' => 'The ID of the chat',
    'method_messages.editChatPhoto_param_photo_type_InputChatPhoto' => 'The new phto',
    'method_messages.addChatUser' => 'Add a user to a normal chat (use channels->inviteToChannel for supergroups)',
    'method_messages.addChatUser_param_chat_id_type_InputPeer' => 'The chat where to invite users',
    'method_messages.addChatUser_param_user_id_type_InputUser' => 'The user to invite',
    'method_messages.addChatUser_param_fwd_limit_type_int' => 'Number of old messages the user will see',
    'method_messages.deleteChatUser' => 'Delete a user from a chat (not supergroup)',
    'method_messages.deleteChatUser_param_chat_id_type_InputPeer' => 'The ID of the chat',
    'method_messages.deleteChatUser_param_user_id_type_InputUser' => 'The user to delete (pass @me to leave the chat)',
    'method_messages.createChat' => 'Create a chat (not supergroup)',
    'method_messages.createChat_param_users_type_Vector t' => 'The users to add to the chat',
    'method_messages.createChat_param_title_type_string' => 'The new chat\'s title',
    'method_messages.getDhConfig' => 'You cannot use this method directly, instead use $MadelineProto->get_dh_config();',
    'method_messages.getDhConfig_param_version_type_int' => 'You cannot use this method directly, instead use $MadelineProto->get_dh_config();',
    'method_messages.getDhConfig_param_random_length_type_int' => 'You cannot use this method directly, instead use $MadelineProto->get_dh_config();',
    'method_messages.requestEncryption' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.requestEncryption_param_user_id_type_InputUser' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.requestEncryption_param_g_a_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.acceptEncryption' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.acceptEncryption_param_peer_type_InputEncryptedChat' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.acceptEncryption_param_g_b_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.acceptEncryption_param_key_fingerprint_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.discardEncryption' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.discardEncryption_param_chat_id_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
    'method_messages.setEncryptedTyping' => 'Send typing notification to secret chat',
    'method_messages.setEncryptedTyping_param_peer_type_InputEncryptedChat' => 'The secret chat where to send the notification',
    'method_messages.setEncryptedTyping_param_typing_type_Bool' => 'Set to true to enable the notification, false to disable it',
    'method_messages.readEncryptedHistory' => 'Mark messages as read in secret chats',
    'method_messages.readEncryptedHistory_param_peer_type_InputEncryptedChat' => 'The secret chat where to mark messages as read',
    'method_messages.readEncryptedHistory_param_max_date_type_int' => 'Maximum date of messages to mark',
    'method_messages.sendEncrypted' => 'Send message to secret chat',
    'method_messages.sendEncrypted_param_peer_type_InputEncryptedChat' => 'The chat where to send the message',
    'method_messages.sendEncrypted_param_message_type_DecryptedMessage' => 'The message to send',
    'method_messages.sendEncryptedFile' => 'Send a file to a secret chat',
    'method_messages.sendEncryptedFile_param_peer_type_InputEncryptedChat' => 'The chat where to send the file',
    'method_messages.sendEncryptedFile_param_message_type_DecryptedMessage' => 'The message with the file',
    'method_messages.sendEncryptedFile_param_file_type_InputEncryptedFile' => 'The file (optional)',
    'method_messages.sendEncryptedService' => 'Send a service message to a secret chat',
    'method_messages.sendEncryptedService_param_peer_type_InputEncryptedChat' => 'The chat where to send the service message',
    'method_messages.sendEncryptedService_param_message_type_DecryptedMessage' => 'The service message',
    'method_messages.receivedQueue' => 'You cannot use this method directly',
    'method_messages.receivedQueue_param_max_qts_type_int' => 'You cannot use this method directly',
    'method_messages.reportEncryptedSpam' => 'Report for spam a secret chat',
    'method_messages.reportEncryptedSpam_param_peer_type_InputEncryptedChat' => 'The chat to report',
    'method_messages.readMessageContents' => 'Mark message as read',
    'method_messages.readMessageContents_param_id_type_Vector t' => 'The messages to mark as read (only users and normal chats, not supergroups)',
    'method_messages.getStickers' => 'Get stickers',
    'method_messages.getStickers_param_emoticon_type_string' => 'Search by emoji',
    'method_messages.getStickers_param_hash_type_string' => 'Previously fetched sticker IDs',
    'method_messages.getAllStickers' => 'Get all stickerpacks',
    'method_messages.getAllStickers_param_hash_type_int' => '0 or $result[\'hash\']',
    'method_messages.getWebPagePreview' => 'Get webpage preview',
    'method_messages.getWebPagePreview_param_message_type_string' => 'Extract preview from this message',
    'method_messages.getWebPagePreview_param_entities_type_Vector t' => 'Entities for styled text',
    'method_messages.exportChatInvite' => 'Export chat invite ',
    'method_messages.exportChatInvite_param_chat_id_type_InputPeer' => 'The chat id ',
    'method_messages.checkChatInvite' => 'Check if an invitation link is valid',
    'method_messages.checkChatInvite_param_hash_type_string' => 'The invite link in t.me/joinchat/aflakf format',
    'method_messages.importChatInvite' => 'Import chat invite',
    'method_messages.importChatInvite_param_hash_type_string' => 'The invite link in t.me/joinchat/aflakf format',
    'method_messages.getStickerSet' => 'Get a stickerset',
    'method_messages.getStickerSet_param_stickerset_type_InputStickerSet' => 'The stickerset to get',
    'method_messages.installStickerSet' => 'Add a sticker set',
    'method_messages.installStickerSet_param_stickerset_type_InputStickerSet' => 'The sticker set to add',
    'method_messages.installStickerSet_param_archived_type_Bool' => 'Archive this set?',
    'method_messages.uninstallStickerSet' => 'Remove a sticker set',
    'method_messages.uninstallStickerSet_param_stickerset_type_InputStickerSet' => 'The sticker set to remove',
    'method_messages.startBot' => 'Start a bot',
    'method_messages.startBot_param_bot_type_InputUser' => 'The bot\'s ID or username',
    'method_messages.startBot_param_peer_type_InputPeer' => 'Where to start the bot (@me or group ID/username)',
    'method_messages.startBot_param_start_param_type_string' => 'The bot\'s start parameter',
    'method_messages.getMessagesViews' => 'Get and increase message views',
    'method_messages.getMessagesViews_param_peer_type_InputPeer' => 'The chat where the message is located',
    'method_messages.getMessagesViews_param_id_type_Vector t' => 'The IDs messages to get',
    'method_messages.getMessagesViews_param_increment_type_Bool' => 'Increase message views?',
    'method_messages.toggleChatAdmins' => 'Enable all users are admins in normal groups (not supergroups)',
    'method_messages.toggleChatAdmins_param_chat_id_type_InputPeer' => 'Group ID',
    'method_messages.toggleChatAdmins_param_enabled_type_Bool' => 'Enable all users are admins',
    'method_messages.editChatAdmin' => 'Edit admin permissions',
    'method_messages.editChatAdmin_param_chat_id_type_InputPeer' => 'The chat ID (no supergroups)',
    'method_messages.editChatAdmin_param_user_id_type_InputUser' => 'The user ID',
    'method_messages.editChatAdmin_param_is_admin_type_Bool' => 'Should the user be admin?',
    'method_messages.migrateChat' => 'Convert chat to supergroup',
    'method_messages.migrateChat_param_chat_id_type_InputPeer' => 'The chat to convert',
    'method_messages.searchGlobal' => 'Global message search',
    'method_messages.searchGlobal_param_q_type_string' => 'The query',
    'method_messages.searchGlobal_param_offset_date_type_int' => '0 or the date offset',
    'method_messages.searchGlobal_param_offset_peer_type_InputPeer' => '0 or the peer offset',
    'method_messages.searchGlobal_param_offset_id_type_int' => '0 or the message ID offset',
    'method_messages.searchGlobal_param_limit_type_int' => 'The number of results to return',
    'method_messages.reorderStickerSets' => 'Reorder sticker sets',
    'method_messages.reorderStickerSets_param_masks_type_true' => 'Reorder masks?',
    'method_messages.reorderStickerSets_param_order_type_Vector t' => 'The order',
    'method_messages.getDocumentByHash' => 'Get document by SHA256 hash',
    'method_messages.getDocumentByHash_param_sha256_type_bytes' => '`hash(\'sha256\', $filename, true);`',
    'method_messages.getDocumentByHash_param_size_type_int' => 'The file size',
    'method_messages.getDocumentByHash_param_mime_type_type_string' => 'The mime type of the file',
    'method_messages.searchGifs' => 'Search gifs',
    'method_messages.searchGifs_param_q_type_string' => 'The search query',
    'method_messages.searchGifs_param_offset_type_int' => 'The offset ',
    'method_messages.getSavedGifs' => 'Get saved gifs',
    'method_messages.getSavedGifs_param_hash_type_int' => '0 or $result[\'hash\']',
    'method_messages.saveGif' => 'Save a GIF',
    'method_messages.saveGif_param_id_type_InputDocument' => 'The GIF to save',
    'method_messages.saveGif_param_unsave_type_Bool' => 'Remove the gif?',
    'method_messages.getInlineBotResults' => 'Call inline bot',
    'method_messages.getInlineBotResults_param_bot_type_InputUser' => 'The bot to call',
    'method_messages.getInlineBotResults_param_peer_type_InputPeer' => 'The chat where to call the bot',
    'method_messages.getInlineBotResults_param_geo_point_type_InputGeoPoint' => 'The current location',
    'method_messages.getInlineBotResults_param_query_type_string' => 'The query to send to the bot',
    'method_messages.getInlineBotResults_param_offset_type_string' => 'The offset to send to the bot',
    'method_messages.setInlineBotResults' => 'Bots only: set the results of an inline query',
    'method_messages.setInlineBotResults_param_gallery_type_true' => 'Is this a gallery?',
    'method_messages.setInlineBotResults_param_private_type_true' => 'Is this result private (not cached)?',
    'method_messages.setInlineBotResults_param_query_id_type_long' => 'Query ID',
    'method_messages.setInlineBotResults_param_results_type_Vector t' => 'Results',
    'method_messages.setInlineBotResults_param_cache_time_type_int' => 'Cache time',
    'method_messages.setInlineBotResults_param_next_offset_type_string' => 'The next offset',
    'method_messages.setInlineBotResults_param_switch_pm_type_InlineBotSwitchPM' => 'Switch to PM?',
    'method_messages.sendInlineBotResult' => 'Send inline bot result obtained with messages.getInlineBotResults to the chat',
    'method_messages.sendInlineBotResult_param_silent_type_true' => 'Disable notifications?',
    'method_messages.sendInlineBotResult_param_background_type_true' => 'Disable background notifications?',
    'method_messages.sendInlineBotResult_param_clear_draft_type_true' => 'Clear the message draft?',
    'method_messages.sendInlineBotResult_param_peer_type_InputPeer' => 'Where to send the message',
    'method_messages.sendInlineBotResult_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
    'method_messages.sendInlineBotResult_param_query_id_type_long' => 'The inline query ID',
    'method_messages.sendInlineBotResult_param_id_type_string' => 'The ID of one of the inline results',
    'method_messages.getMessageEditData' => 'Check if about to edit a message or a media caption',
    'method_messages.getMessageEditData_param_peer_type_InputPeer' => 'The chat',
    'method_messages.getMessageEditData_param_id_type_int' => 'The message ID',
    'method_messages.editMessage' => 'Edit a message',
    'method_messages.editMessage_param_no_webpage_type_true' => 'Disable webpage preview',
    'method_messages.editMessage_param_stop_geo_live_type_true' => 'Stop live location',
    'method_messages.editMessage_param_peer_type_InputPeer' => 'The chat',
    'method_messages.editMessage_param_id_type_int' => 'The message ID',
    'method_messages.editMessage_param_message_type_string' => 'The new message',
    'method_messages.editMessage_param_reply_markup_type_ReplyMarkup' => 'The new keyboard',
    'method_messages.editMessage_param_entities_type_Vector t' => 'The new entities (for styled text)',
    'method_messages.editMessage_param_geo_point_type_InputGeoPoint' => 'The new location',
    'method_messages.editInlineBotMessage' => 'Edit a sent inline message',
    'method_messages.editInlineBotMessage_param_no_webpage_type_true' => 'Disable webpage preview',
    'method_messages.editInlineBotMessage_param_stop_geo_live_type_true' => 'Stop live location',
    'method_messages.editInlineBotMessage_param_id_type_InputBotInlineMessageID' => 'The message ID',
    'method_messages.editInlineBotMessage_param_message_type_string' => 'The new message',
    'method_messages.editInlineBotMessage_param_reply_markup_type_ReplyMarkup' => 'The new keyboard',
    'method_messages.editInlineBotMessage_param_entities_type_Vector t' => 'The new entities (for styled text)',
    'method_messages.editInlineBotMessage_param_geo_point_type_InputGeoPoint' => 'The new location',
    'method_messages.getBotCallbackAnswer' => 'Get the callback answer of a bot (after clicking a button)',
    'method_messages.getBotCallbackAnswer_param_game_type_true' => 'Is this a game?',
    'method_messages.getBotCallbackAnswer_param_peer_type_InputPeer' => 'The chat',
    'method_messages.getBotCallbackAnswer_param_msg_id_type_int' => 'The message ID',
    'method_messages.getBotCallbackAnswer_param_data_type_bytes' => 'The data to send to the bot',
    'method_messages.setBotCallbackAnswer' => 'Bots only: set the callback answer (after a button was clicked)',
    'method_messages.setBotCallbackAnswer_param_alert_type_true' => 'Is this an alert?',
    'method_messages.setBotCallbackAnswer_param_query_id_type_long' => 'The query ID',
    'method_messages.setBotCallbackAnswer_param_message_type_string' => 'The message',
    'method_messages.setBotCallbackAnswer_param_url_type_string' => 'The URL',
    'method_messages.setBotCallbackAnswer_param_cache_time_type_int' => 'Cache time',
    'method_messages.getPeerDialogs' => 'Get dialog info of peers',
    'method_messages.getPeerDialogs_param_peers_type_Vector t' => 'The peers',
    'method_messages.saveDraft' => 'Save a message draft',
    'method_messages.saveDraft_param_no_webpage_type_true' => 'Disable webpage preview',
    'method_messages.saveDraft_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
    'method_messages.saveDraft_param_peer_type_InputPeer' => 'The chat',
    'method_messages.saveDraft_param_message_type_string' => 'The message',
    'method_messages.saveDraft_param_entities_type_Vector t' => 'The entities (for styled text)',
    'method_messages.getAllDrafts' => 'Get all message drafts',
    'method_messages.getFeaturedStickers' => 'Get featured stickers',
    'method_messages.getFeaturedStickers_param_hash_type_int' => '0 or $result[\'hash\']',
    'method_messages.readFeaturedStickers' => 'Mark new featured stickers as read',
    'method_messages.readFeaturedStickers_param_id_type_Vector t' => 'The stickers to mark as read',
    'method_messages.getRecentStickers' => 'Get recent stickers',
    'method_messages.getRecentStickers_param_attached_type_true' => 'Get stickers attached to image?',
    'method_messages.getRecentStickers_param_hash_type_int' => '0 or $result[\'hash\']',
    'method_messages.saveRecentSticker' => 'Add a sticker to recent stickers',
    'method_messages.saveRecentSticker_param_attached_type_true' => 'Get stickers attached to image?',
    'method_messages.saveRecentSticker_param_id_type_InputDocument' => 'The sticker',
    'method_messages.saveRecentSticker_param_unsave_type_Bool' => 'Remove the sticker from recent stickers?',
    'method_messages.clearRecentStickers' => 'Clear all recent stickers',
    'method_messages.clearRecentStickers_param_attached_type_true' => 'Clear recent stickers attached to images?',
    'method_messages.getArchivedStickers' => 'Get all archived stickers',
    'method_messages.getArchivedStickers_param_masks_type_true' => 'Get masks?',
    'method_messages.getArchivedStickers_param_offset_id_type_long' => 'Sticker ID offset',
    'method_messages.getArchivedStickers_param_limit_type_int' => 'Number of stickers to fetch',
    'method_messages.getMaskStickers' => 'Get masks',
    'method_messages.getMaskStickers_param_hash_type_int' => '0 or $result[\'hash\']',
    'method_messages.getAttachedStickers' => 'Get stickers attachable to images',
    'method_messages.getAttachedStickers_param_media_type_InputStickeredMedia' => 'The stickered media',
    'method_messages.setGameScore' => 'Set the game score',
    'method_messages.setGameScore_param_edit_message_type_true' => 'Should the message with the game be edited?',
    'method_messages.setGameScore_param_force_type_true' => 'Force setting the game score',
    'method_messages.setGameScore_param_peer_type_InputPeer' => 'The chat where the game was sent',
    'method_messages.setGameScore_param_id_type_int' => 'The message ID',
    'method_messages.setGameScore_param_user_id_type_InputUser' => 'The user that set the score',
    'method_messages.setGameScore_param_score_type_int' => 'The score',
    'method_messages.setInlineGameScore' => 'Set the game score of an inline message',
    'method_messages.setInlineGameScore_param_edit_message_type_true' => 'Should the message with the game be edited?',
    'method_messages.setInlineGameScore_param_force_type_true' => 'Force setting the game score',
    'method_messages.setInlineGameScore_param_id_type_InputBotInlineMessageID' => 'The ID of the inline message',
    'method_messages.setInlineGameScore_param_user_id_type_InputUser' => 'The user that set the score',
    'method_messages.setInlineGameScore_param_score_type_int' => 'The score',
    'method_messages.getGameHighScores' => 'Get high scores of a game',
    'method_messages.getGameHighScores_param_peer_type_InputPeer' => 'The chat',
    'method_messages.getGameHighScores_param_id_type_int' => 'The message ID',
    'method_messages.getGameHighScores_param_user_id_type_InputUser' => 'The user that set the high scores',
    'method_messages.getInlineGameHighScores' => 'Get high scores of a game sent in an inline message',
    'method_messages.getInlineGameHighScores_param_id_type_InputBotInlineMessageID' => 'The inline message',
    'method_messages.getInlineGameHighScores_param_user_id_type_InputUser' => 'The user that set the high scores',
    'method_messages.getCommonChats' => 'Get chats in common with a user',
    'method_messages.getCommonChats_param_user_id_type_InputUser' => 'The user',
    'method_messages.getCommonChats_param_max_id_type_int' => 'The maximum chat ID to fetch',
    'method_messages.getCommonChats_param_limit_type_int' => 'Number of results to fetch',
    'method_messages.getAllChats' => 'Get all chats (not supergroups or channels)',
    'method_messages.getAllChats_param_except_ids_type_Vector t' => 'Do not fetch these chats (MTProto id)',
    'method_messages.getWebPage' => 'Get webpage preview',
    'method_messages.getWebPage_param_url_type_string' => 'URL',
    'method_messages.getWebPage_param_hash_type_int' => '0 or $result[\'hash\']',
    'method_messages.toggleDialogPin' => 'Pin or unpin dialog',
    'method_messages.toggleDialogPin_param_pinned_type_true' => 'Pin or unpin the dialog?',
    'method_messages.toggleDialogPin_param_peer_type_InputPeer' => 'The peer to pin',
    'method_messages.reorderPinnedDialogs' => 'Reorder pinned dialogs',
    'method_messages.reorderPinnedDialogs_param_force_type_true' => 'Force reordering',
    'method_messages.reorderPinnedDialogs_param_order_type_Vector t' => 'New order',
    'method_messages.getPinnedDialogs' => 'Get pinned dialogs',
    'method_messages.setBotShippingResults' => 'Bots only: set shipping results',
    'method_messages.setBotShippingResults_param_query_id_type_long' => 'Query ID',
    'method_messages.setBotShippingResults_param_error_type_string' => 'Error',
    'method_messages.setBotShippingResults_param_shipping_options_type_Vector t' => 'Shipping options',
    'method_messages.setBotPrecheckoutResults' => 'Bots only: set precheckout results',
    'method_messages.setBotPrecheckoutResults_param_success_type_true' => 'Success?',
    'method_messages.setBotPrecheckoutResults_param_query_id_type_long' => 'Query ID',
    'method_messages.setBotPrecheckoutResults_param_error_type_string' => 'Error',
    'method_messages.uploadMedia' => 'Upload a file without sending it to anyone',
    'method_messages.uploadMedia_param_peer_type_InputPeer' => 'Nothing',
    'method_messages.uploadMedia_param_media_type_InputMedia' => 'The media to upload',
    'method_messages.sendScreenshotNotification' => 'Send screenshot notification',
    'method_messages.sendScreenshotNotification_param_peer_type_InputPeer' => 'Where to send the notification',
    'method_messages.sendScreenshotNotification_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
    'method_messages.getFavedStickers' => 'Get favorite stickers',
    'method_messages.getFavedStickers_param_hash_type_int' => '0 or $result[\'hash\']',
    'method_messages.faveSticker' => 'Add a sticker to favorites',
    'method_messages.faveSticker_param_id_type_InputDocument' => 'The sticker to add to favorites',
    'method_messages.faveSticker_param_unfave_type_Bool' => 'Remove it from favorites?',
    'method_messages.getUnreadMentions' => 'Get unread mentions',
    'method_messages.getUnreadMentions_param_peer_type_InputPeer' => 'The chat where to get unread mentions',
    'method_messages.getUnreadMentions_param_offset_id_type_int' => 'The offset',
    'method_messages.getUnreadMentions_param_add_offset_type_int' => 'The additional offset',
    'method_messages.getUnreadMentions_param_limit_type_int' => 'The number of results to fetch',
    'method_messages.getUnreadMentions_param_max_id_type_int' => 'The maximum message ID to fetch',
    'method_messages.getUnreadMentions_param_min_id_type_int' => 'The minumum message ID to fetch',
    'method_messages.readMentions' => 'Mark mentions as read',
    'method_messages.readMentions_param_peer_type_InputPeer' => 'The chat',
    'method_messages.getRecentLocations' => 'Get recent locations',
    'method_messages.getRecentLocations_param_peer_type_InputPeer' => 'The chat where to search locations',
    'method_messages.getRecentLocations_param_limit_type_int' => 'Number of results to return',
    'method_messages.sendMultiMedia' => 'Send an album',
    'method_messages.sendMultiMedia_param_silent_type_true' => 'Disable notifications?',
    'method_messages.sendMultiMedia_param_background_type_true' => 'Disable background notification?',
    'method_messages.sendMultiMedia_param_clear_draft_type_true' => 'Clear draft?',
    'method_messages.sendMultiMedia_param_peer_type_InputPeer' => 'Where to send the album',
    'method_messages.sendMultiMedia_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
    'method_messages.sendMultiMedia_param_multi_media_type_Vector t' => 'The album',
    'method_messages.uploadEncryptedFile' => 'Upload a secret chat file without sending it to anyone',
    'method_messages.uploadEncryptedFile_param_peer_type_InputEncryptedChat' => 'The chat where to upload the media',
    'method_messages.uploadEncryptedFile_param_file_type_InputEncryptedFile' => 'The file',
    'method_updates.getState' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getDifference' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getDifference_param_pts_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getDifference_param_pts_total_limit_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getDifference_param_date_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getDifference_param_qts_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getChannelDifference' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getChannelDifference_param_force_type_true' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getChannelDifference_param_channel_type_InputChannel' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getChannelDifference_param_filter_type_ChannelMessagesFilter' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getChannelDifference_param_pts_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_updates.getChannelDifference_param_limit_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_photos.updateProfilePhoto' => 'Change the profile photo',
    'method_photos.updateProfilePhoto_param_id_type_InputPhoto' => 'The photo to use',
    'method_photos.uploadProfilePhoto' => 'Upload profile photo',
    'method_photos.uploadProfilePhoto_param_file_type_InputFile' => 'The photo',
    'method_photos.deletePhotos' => 'Delete profile photos',
    'method_photos.deletePhotos_param_id_type_Vector t' => 'The profile photos to delete',
    'method_photos.getUserPhotos' => 'Get the profile photos of a user',
    'method_photos.getUserPhotos_param_user_id_type_InputUser' => 'The user',
    'method_photos.getUserPhotos_param_offset_type_int' => 'Offset',
    'method_photos.getUserPhotos_param_max_id_type_long' => 'Maximum ID of photo to return',
    'method_photos.getUserPhotos_param_limit_type_int' => 'Number of photos to return',
    'method_upload.saveFilePart' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveFilePart_param_file_id_type_long' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveFilePart_param_file_part_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveFilePart_param_bytes_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getFile' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getFile_param_location_type_InputFileLocation' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getFile_param_offset_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getFile_param_limit_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveBigFilePart' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveBigFilePart_param_file_id_type_long' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveBigFilePart_param_file_part_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveBigFilePart_param_file_total_parts_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.saveBigFilePart_param_bytes_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getWebFile' => 'Download a file through telegram',
    'method_upload.getWebFile_param_location_type_InputWebFileLocation' => 'The file',
    'method_upload.getWebFile_param_offset_type_int' => 'The offset in bytes',
    'method_upload.getWebFile_param_limit_type_int' => 'The number of bytes to fetch',
    'method_upload.getCdnFile' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getCdnFile_param_file_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getCdnFile_param_offset_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getCdnFile_param_limit_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.reuploadCdnFile' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.reuploadCdnFile_param_file_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.reuploadCdnFile_param_request_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getCdnFileHashes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getCdnFileHashes_param_file_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_upload.getCdnFileHashes_param_offset_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
    'method_help.getConfig' => 'Get server configuration',
    'method_help.getNearestDc' => 'Get nearest datacenter',
    'method_help.getAppUpdate' => 'Get info about app updates',
    'method_help.saveAppLog' => 'Log data for developer of this app',
    'method_help.saveAppLog_param_events_type_Vector t' => 'Event list',
    'method_help.getInviteText' => 'Get invitation text',
    'method_help.getSupport' => 'Get info of support user',
    'method_help.getAppChangelog' => 'Get the changelog of this app',
    'method_help.getAppChangelog_param_prev_app_version_type_string' => 'Previous app version',
    'method_help.getTermsOfService' => 'Get terms of service',
    'method_help.setBotUpdatesStatus' => 'Set the update status of webhook',
    'method_help.setBotUpdatesStatus_param_pending_updates_count_type_int' => 'Pending update count',
    'method_help.setBotUpdatesStatus_param_message_type_string' => 'Message',
    'method_help.getCdnConfig' => 'Get CDN configuration',
    'method_help.getRecentMeUrls' => 'Get recent t.me URLs',
    'method_help.getRecentMeUrls_param_referer_type_string' => 'Referrer',
    'method_channels.readHistory' => 'Mark channel/supergroup history as read',
    'method_channels.readHistory_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.readHistory_param_max_id_type_int' => 'Maximum message ID to mark as read',
    'method_channels.deleteMessages' => 'Delete channel/supergroup messages',
    'method_channels.deleteMessages_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.deleteMessages_param_id_type_Vector t' => 'The IDs of messages to delete',
    'method_channels.deleteUserHistory' => 'Delete all messages of a user in a channel/supergroup',
    'method_channels.deleteUserHistory_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.deleteUserHistory_param_user_id_type_InputUser' => 'The user',
    'method_channels.reportSpam' => 'Report a message in a supergroup/channel for spam',
    'method_channels.reportSpam_param_channel_type_InputChannel' => 'The channel',
    'method_channels.reportSpam_param_user_id_type_InputUser' => 'The user that sent the messages',
    'method_channels.reportSpam_param_id_type_Vector t' => 'The IDs of messages to report',
    'method_channels.getMessages' => 'Get channel/supergroup messages',
    'method_channels.getMessages_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.getMessages_param_id_type_Vector t' => 'The message IDs',
    'method_channels.getParticipants' => 'Get channel/supergroup participants (you should use `$MadelineProto->get_pwr_chat($id)` instead)',
    'method_channels.getParticipants_param_channel_type_InputChannel' => 'The channel',
    'method_channels.getParticipants_param_filter_type_ChannelParticipantsFilter' => 'Member filter',
    'method_channels.getParticipants_param_offset_type_int' => 'Offset',
    'method_channels.getParticipants_param_limit_type_int' => 'Limit',
    'method_channels.getParticipants_param_hash_type_int' => 'Sorted list of IDs of participants you already fetched',
    'method_channels.getParticipant' => 'Get info about a certain channel/supergroup participant',
    'method_channels.getParticipant_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.getParticipant_param_user_id_type_InputUser' => 'The user to fetch info about',
    'method_channels.getChannels' => 'Get info about multiple channels/supergroups',
    'method_channels.getChannels_param_id_type_Vector t' => 'The channel/supergroup MTProto IDs',
    'method_channels.getFullChannel' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_channels.getFullChannel_param_channel_type_InputChannel' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
    'method_channels.createChannel' => 'Create channel/supergroup',
    'method_channels.createChannel_param_broadcast_type_true' => 'Set this to true to create a channel',
    'method_channels.createChannel_param_megagroup_type_true' => 'Set this to true to create a supergroup',
    'method_channels.createChannel_param_title_type_string' => 'Supergroup/channel title',
    'method_channels.createChannel_param_about_type_string' => 'About text',
    'method_channels.editAbout' => 'Edit the about text of a channel/supergroup',
    'method_channels.editAbout_param_channel_type_InputChannel' => 'The channel',
    'method_channels.editAbout_param_about_type_string' => 'The new about text',
    'method_channels.editAdmin' => 'Edit admin permissions of a user in a channel/supergroup',
    'method_channels.editAdmin_param_channel_type_InputChannel' => 'The channel',
    'method_channels.editAdmin_param_user_id_type_InputUser' => 'The user',
    'method_channels.editAdmin_param_admin_rights_type_ChannelAdminRights' => 'The new admin rights',
    'method_channels.editTitle' => 'Edit the title of a supergroup/channel',
    'method_channels.editTitle_param_channel_type_InputChannel' => 'The channel',
    'method_channels.editTitle_param_title_type_string' => 'The new channel/supergroup title',
    'method_channels.editPhoto' => 'Edit the photo of a supergroup/channel',
    'method_channels.editPhoto_param_channel_type_InputChannel' => 'The channel',
    'method_channels.editPhoto_param_photo_type_InputChatPhoto' => 'The new photo',
    'method_channels.checkUsername' => 'Check if this username is free and can be assigned to a channel/supergroup',
    'method_channels.checkUsername_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.checkUsername_param_username_type_string' => 'The new username for this channel/supergroup',
    'method_channels.updateUsername' => 'Update the username of a supergroup/channel',
    'method_channels.updateUsername_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.updateUsername_param_username_type_string' => 'The new username',
    'method_channels.joinChannel' => 'Join a channel/supergroup',
    'method_channels.joinChannel_param_channel_type_InputChannel' => 'The channel/supergroup to join',
    'method_channels.leaveChannel' => 'Leave a channel/supergroup',
    'method_channels.leaveChannel_param_channel_type_InputChannel' => 'The channel/supergroup to leave',
    'method_channels.inviteToChannel' => 'Add users to channel/supergroup',
    'method_channels.inviteToChannel_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.inviteToChannel_param_users_type_Vector t' => 'The users to add',
    'method_channels.exportInvite' => 'Export the invite link of a channel',
    'method_channels.exportInvite_param_channel_type_InputChannel' => 'The channel',
    'method_channels.deleteChannel' => 'Delete a channel/supergroup',
    'method_channels.deleteChannel_param_channel_type_InputChannel' => 'The channel/supergroup to delete',
    'method_channels.toggleInvites' => 'Allow or disallow any user to invite users to this channel/supergroup',
    'method_channels.toggleInvites_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.toggleInvites_param_enabled_type_Bool' => 'Allow or disallow',
    'method_channels.exportMessageLink' => 'Get the link of a message in a channel',
    'method_channels.exportMessageLink_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.exportMessageLink_param_id_type_int' => 'The ID of the message',
    'method_channels.exportMessageLink_param_grouped_type_Bool' => 'Is this an album?',
    'method_channels.toggleSignatures' => 'Toggle channel signatures',
    'method_channels.toggleSignatures_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.toggleSignatures_param_enabled_type_Bool' => 'Enable or disable channel signatures?',
    'method_channels.updatePinnedMessage' => 'Set the pinned message of a channel/supergroup',
    'method_channels.updatePinnedMessage_param_silent_type_true' => 'Pin silently',
    'method_channels.updatePinnedMessage_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.updatePinnedMessage_param_id_type_int' => 'The ID of the message to pin',
    'method_channels.getAdminedPublicChannels' => 'Get all supergroups/channels where you\'re admin',
    'method_channels.editBanned' => 'Kick or ban a user from a channel/supergroup',
    'method_channels.editBanned_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.editBanned_param_user_id_type_InputUser' => 'The user to kick/ban',
    'method_channels.editBanned_param_banned_rights_type_ChannelBannedRights' => 'Banned/kicked permissions',
    'method_channels.getAdminLog' => 'Get admin log of a channel/supergroup',
    'method_channels.getAdminLog_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.getAdminLog_param_q_type_string' => 'Search query',
    'method_channels.getAdminLog_param_events_filter_type_ChannelAdminLogEventsFilter' => 'Event filter',
    'method_channels.getAdminLog_param_admins_type_Vector t' => 'Fetch only actions from these admins',
    'method_channels.getAdminLog_param_max_id_type_long' => 'Maximum message ID to fetch',
    'method_channels.getAdminLog_param_min_id_type_long' => 'Minimum message ID to fetch',
    'method_channels.getAdminLog_param_limit_type_int' => 'Number of results to fetch',
    'method_channels.setStickers' => 'Set the supergroup/channel stickerpack',
    'method_channels.setStickers_param_channel_type_InputChannel' => 'The channel/supergoup',
    'method_channels.setStickers_param_stickerset_type_InputStickerSet' => 'The stickerset',
    'method_channels.readMessageContents' => 'Mark channel/supergroup messages as read',
    'method_channels.readMessageContents_param_channel_type_InputChannel' => 'The channel',
    'method_channels.readMessageContents_param_id_type_Vector t' => 'List of message IDs',
    'method_channels.deleteHistory' => 'Delete the history of a supergroup/channel',
    'method_channels.deleteHistory_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.deleteHistory_param_max_id_type_int' => 'Maximum message ID to delete',
    'method_channels.togglePreHistoryHidden' => 'Enable or disable hidden history for new channel/supergroup users',
    'method_channels.togglePreHistoryHidden_param_channel_type_InputChannel' => 'The channel/supergroup',
    'method_channels.togglePreHistoryHidden_param_enabled_type_Bool' => 'Enable or disable hidden history for new channel/supergroup users',
    'method_bots.sendCustomRequest' => 'Send a custom request to the bot API',
    'method_bots.sendCustomRequest_param_custom_method_type_string' => 'The method to call',
    'method_bots.sendCustomRequest_param_params_type_DataJSON' => 'Method parameters',
    'method_bots.answerWebhookJSONQuery' => 'Send webhook request via bot API',
    'method_bots.answerWebhookJSONQuery_param_query_id_type_long' => 'The query ID',
    'method_bots.answerWebhookJSONQuery_param_data_type_DataJSON' => 'The parameters',
    'method_payments.getPaymentForm' => 'Get payment form',
    'method_payments.getPaymentForm_param_msg_id_type_int' => 'Message ID',
    'method_payments.getPaymentReceipt' => 'Get payment receipt',
    'method_payments.getPaymentReceipt_param_msg_id_type_int' => 'The message ID',
    'method_payments.validateRequestedInfo' => 'Validate requested payment info',
    'method_payments.validateRequestedInfo_param_save_type_true' => 'Save payment info?',
    'method_payments.validateRequestedInfo_param_msg_id_type_int' => 'The message ID',
    'method_payments.validateRequestedInfo_param_info_type_PaymentRequestedInfo' => 'The requested payment info',
    'method_payments.sendPaymentForm' => 'Bots only: send payment form',
    'method_payments.sendPaymentForm_param_msg_id_type_int' => 'Message ID',
    'method_payments.sendPaymentForm_param_requested_info_id_type_string' => 'ID of requested info',
    'method_payments.sendPaymentForm_param_shipping_option_id_type_string' => 'Shipping option ID',
    'method_payments.sendPaymentForm_param_credentials_type_InputPaymentCredentials' => 'Payment credentials',
    'method_payments.getSavedInfo' => 'Get saved payments info',
    'method_payments.clearSavedInfo' => 'Clear saved payments info',
    'method_payments.clearSavedInfo_param_credentials_type_true' => 'Clear credentials?',
    'method_payments.clearSavedInfo_param_info_type_true' => 'Clear payment info?',
    'method_stickers.createStickerSet' => 'Create stickerset',
    'method_stickers.createStickerSet_param_masks_type_true' => 'Masks?',
    'method_stickers.createStickerSet_param_user_id_type_InputUser' => 'The user ID associated to this stickerset',
    'method_stickers.createStickerSet_param_title_type_string' => 'The stickerset title',
    'method_stickers.createStickerSet_param_short_name_type_string' => 'The stickerset short name',
    'method_stickers.createStickerSet_param_stickers_type_Vector t' => 'The stickers to add',
    'method_stickers.removeStickerFromSet' => 'Remove sticker from stickerset',
    'method_stickers.removeStickerFromSet_param_sticker_type_InputDocument' => 'The sticker to remove',
    'method_stickers.changeStickerPosition' => 'Change sticker position in photo',
    'method_stickers.changeStickerPosition_param_sticker_type_InputDocument' => 'The sticker',
    'method_stickers.changeStickerPosition_param_position_type_int' => 'New position',
    'method_stickers.addStickerToSet' => 'Add sticker to stickerset',
    'method_stickers.addStickerToSet_param_stickerset_type_InputStickerSet' => 'The stickerset',
    'method_stickers.addStickerToSet_param_sticker_type_InputStickerSetItem' => 'The sticker',
    'method_phone.getCallConfig' => 'Get call configuration',
    'method_phone.requestCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.requestCall_param_user_id_type_InputUser' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.requestCall_param_g_a_hash_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.requestCall_param_protocol_type_PhoneCallProtocol' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.acceptCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.acceptCall_param_peer_type_InputPhoneCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.acceptCall_param_g_b_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.acceptCall_param_protocol_type_PhoneCallProtocol' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.confirmCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.confirmCall_param_peer_type_InputPhoneCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.confirmCall_param_g_a_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.confirmCall_param_key_fingerprint_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.confirmCall_param_protocol_type_PhoneCallProtocol' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.receivedCall' => 'Notify server that you received a call (server will refuse all incoming calls until the current call is over)',
    'method_phone.receivedCall_param_peer_type_InputPhoneCall' => 'The phone call you received',
    'method_phone.discardCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.discardCall_param_peer_type_InputPhoneCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.discardCall_param_duration_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.discardCall_param_reason_type_PhoneCallDiscardReason' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.discardCall_param_connection_id_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.setCallRating' => 'Set phone call rating',
    'method_phone.setCallRating_param_peer_type_InputPhoneCall' => 'The phone call',
    'method_phone.setCallRating_param_rating_type_int' => 'Rating (1-5 stars)',
    'method_phone.setCallRating_param_comment_type_string' => 'An optional comment',
    'method_phone.saveCallDebug' => 'Save call debugging info',
    'method_phone.saveCallDebug_param_peer_type_InputPhoneCall' => 'The call',
    'method_phone.saveCallDebug_param_debug_type_DataJSON' => 'Debugging info',
    'method_langpack.getLangPack' => 'Get language pack',
    'method_langpack.getLangPack_param_lang_code_type_string' => 'Language code',
    'method_langpack.getStrings' => 'Get language pack strings',
    'method_langpack.getStrings_param_lang_code_type_string' => 'Language code',
    'method_langpack.getStrings_param_keys_type_Vector t' => 'Keys',
    'method_langpack.getDifference' => 'Get language pack updates',
    'method_langpack.getDifference_param_from_version_type_int' => 'Previous version',
    'method_langpack.getLanguages' => 'Get available languages',
    'method_auth.sendCode_param_sms_type_type_int' => 'You cannot use this method directly, use the phone_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.sendCode_param_lang_code_type_string' => 'You cannot use this method directly, use the phone_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.sendCall' => 'Send verification phone call',
    'method_auth.sendCall_param_phone_number_type_string' => 'The phone number',
    'method_auth.sendCall_param_phone_code_hash_type_string' => 'The phone code hash',
    'method_account.registerDevice_param_device_model_type_string' => 'Device model',
    'method_account.registerDevice_param_system_version_type_string' => 'System version',
    'method_account.registerDevice_param_app_version_type_string' => 'App version',
    'method_account.registerDevice_param_lang_code_type_string' => 'Language code',
    'method_contacts.getContacts_param_hash_type_string' => 'List of contact user IDs you already cached',
    'method_contacts.importContacts_param_replace_type_Bool' => 'Replace contacts?',
    'method_contacts.getSuggested' => 'Get suggested contacts',
    'method_contacts.getSuggested_param_limit_type_int' => 'Number of results to return',
    'method_messages.getDialogs_param_offset_type_int' => 'Offset',
    'method_messages.getDialogs_param_max_id_type_int' => 'Maximum ID of result to return',
    'method_messages.getHistory_param_offset_type_int' => 'Message ID offset',
    'method_messages.search_param_offset_type_int' => 'Offset ',
    'method_messages.readHistory_param_offset_type_int' => 'Offset',
    'method_messages.readHistory_param_read_contents_type_Bool' => 'Mark messages as read?',
    'method_messages.deleteHistory_param_offset_type_int' => 'Offset',
    'method_messages.forwardMessages_param_peer_type_InputPeer' => 'Peer',
    'method_photos.updateProfilePhoto_param_crop_type_InputPhotoCrop' => 'Cropping info',
    'method_photos.uploadProfilePhoto_param_caption_type_string' => 'Caption type',
    'method_photos.uploadProfilePhoto_param_geo_point_type_InputGeoPoint' => 'Location',
    'method_photos.uploadProfilePhoto_param_crop_type_InputPhotoCrop' => 'Cropping info',
    'method_help.getAppUpdate_param_device_model_type_string' => 'Device model',
    'method_help.getAppUpdate_param_system_version_type_string' => 'System version',
    'method_help.getAppUpdate_param_app_version_type_string' => 'App version',
    'method_help.getAppUpdate_param_lang_code_type_string' => 'Langauge code',
    'method_help.getInviteText_param_lang_code_type_string' => 'Language',
    'method_photos.getUserPhotos_param_max_id_type_int' => 'Maximum ID of photo to return',
    'method_messages.forwardMessage' => 'Forward message',
    'method_messages.forwardMessage_param_peer_type_InputPeer' => 'From where to forward the message',
    'method_messages.forwardMessage_param_id_type_int' => 'The message ID',
    'method_messages.sendBroadcast' => 'Send a message to all users in the chat list',
    'method_messages.sendBroadcast_param_contacts_type_Vector t' => 'The users to which send the message',
    'method_messages.sendBroadcast_param_message_type_string' => 'The message',
    'method_messages.sendBroadcast_param_media_type_InputMedia' => 'The media',
    'method_auth.sendSms' => 'Send SMS verification code',
    'method_auth.sendSms_param_phone_number_type_string' => 'Phone number',
    'method_auth.sendSms_param_phone_code_hash_type_string' => 'Phone code ash',
    'method_invokeWithLayer18' => 'Invoke this method with layer 18',
    'method_invokeWithLayer18_param_query_type_!X' => 'The method call',
    'method_messages.getAllStickers_param_hash_type_string' => 'Previously fetched stickers',
    'method_geochats.getLocated' => 'Get nearby geochats',
    'method_geochats.getLocated_param_geo_point_type_InputGeoPoint' => 'Current location',
    'method_geochats.getLocated_param_radius_type_int' => 'Radius',
    'method_geochats.getLocated_param_limit_type_int' => 'Number of results to return',
    'method_geochats.getRecents' => 'Get recent geochats',
    'method_geochats.getRecents_param_offset_type_int' => 'Offset',
    'method_geochats.getRecents_param_limit_type_int' => 'Number of results to return',
    'method_geochats.checkin' => 'Join a geochat',
    'method_geochats.checkin_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.getFullChat' => 'Get full info about a geochat',
    'method_geochats.getFullChat_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.editChatTitle' => 'Edit geochat title',
    'method_geochats.editChatTitle_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.editChatTitle_param_title_type_string' => 'The new title',
    'method_geochats.editChatTitle_param_address_type_string' => 'The new address',
    'method_geochats.editChatPhoto' => 'Edit geochat photo',
    'method_geochats.editChatPhoto_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.editChatPhoto_param_photo_type_InputChatPhoto' => 'The new photo',
    'method_geochats.search' => 'Search messages in geocha',
    'method_geochats.search_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.search_param_q_type_string' => 'The search query',
    'method_geochats.search_param_filter_type_MessagesFilter' => 'Search filter',
    'method_geochats.search_param_min_date_type_int' => 'Minumum date',
    'method_geochats.search_param_max_date_type_int' => 'Maximum date',
    'method_geochats.search_param_offset_type_int' => 'Offset',
    'method_geochats.search_param_max_id_type_int' => 'Maximum message ID',
    'method_geochats.search_param_limit_type_int' => 'Number of results to return',
    'method_geochats.getHistory' => 'Get geochat history',
    'method_geochats.getHistory_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.getHistory_param_offset_type_int' => 'Offset',
    'method_geochats.getHistory_param_max_id_type_int' => 'Maximum message ID',
    'method_geochats.getHistory_param_limit_type_int' => 'Number of results to return',
    'method_geochats.setTyping' => 'Send typing notification to geochat',
    'method_geochats.setTyping_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.setTyping_param_typing_type_Bool' => 'Typing or not typing',
    'method_geochats.sendMessage' => 'Send message to geochat',
    'method_geochats.sendMessage_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.sendMessage_param_message_type_string' => 'The message',
    'method_geochats.sendMedia' => 'Send media to geochat',
    'method_geochats.sendMedia_param_peer_type_InputGeoChat' => 'The geochat',
    'method_geochats.sendMedia_param_media_type_InputMedia' => 'The media',
    'method_geochats.createGeoChat' => 'Create geochat',
    'method_geochats.createGeoChat_param_title_type_string' => 'Geochat title',
    'method_geochats.createGeoChat_param_geo_point_type_InputGeoPoint' => 'Geochat location',
    'method_geochats.createGeoChat_param_address_type_string' => 'Geochat address',
    'method_geochats.createGeoChat_param_venue_type_string' => 'Geochat venue ',
    'method_account.setPassword' => 'Set 2FA password',
    'method_account.setPassword_param_current_password_hash_type_bytes' => 'Use only if you have set a 2FA password: `$current_salt = $MadelineProto->account->getPassword()[\'current_salt\']; $current_password_hash = hash(\'sha256\', $current_salt.$password.$current_salt, true);`',
    'method_account.setPassword_param_new_salt_type_bytes' => 'New salt',
    'method_account.setPassword_param_new_password_hash_type_bytes' => '`hash(\'sha256\', $new_salt.$new_password.$new_salt, true)`',
    'method_account.setPassword_param_hint_type_string' => 'Hint',
    'method_messages.installStickerSet_param_disabled_type_Bool' => 'Disable stickerset?',
    'method_messages.startBot_param_chat_id_type_InputPeer' => 'Chat ID',
    'method_help.getAppChangelog_param_device_model_type_string' => 'Device model',
    'method_help.getAppChangelog_param_system_version_type_string' => 'System version',
    'method_help.getAppChangelog_param_app_version_type_string' => 'App version',
    'method_help.getAppChangelog_param_lang_code_type_string' => 'Language code',
    'method_channels.getDialogs' => 'Get channel dialogs',
    'method_channels.getDialogs_param_offset_type_int' => 'Offset',
    'method_channels.getDialogs_param_limit_type_int' => 'Number of results to return',
    'method_channels.getImportantHistory' => 'Get important channel/supergroup history',
    'method_channels.getImportantHistory_param_channel_type_InputChannel' => 'The supergroup/channel',
    'method_channels.getImportantHistory_param_offset_id_type_int' => 'Message ID offset',
    'method_channels.getImportantHistory_param_add_offset_type_int' => 'Additional offset',
    'method_channels.getImportantHistory_param_limit_type_int' => 'Number of results to return',
    'method_channels.getImportantHistory_param_max_id_type_int' => 'Maximum message ID',
    'method_channels.getImportantHistory_param_min_id_type_int' => 'Minumum message ID',
    'method_channels.createChannel_param_users_type_Vector t' => 'Users to add to channel',
    'method_channels.editAdmin_param_role_type_ChannelParticipantRole' => 'User role',
    'method_channels.toggleComments' => 'Enable channel comments',
    'method_channels.toggleComments_param_channel_type_InputChannel' => 'The channel ',
    'method_channels.toggleComments_param_enabled_type_Bool' => 'Enable or disable comments',
    'method_channels.kickFromChannel' => 'Kick user from channel',
    'method_channels.kickFromChannel_param_channel_type_InputChannel' => 'The channel',
    'method_channels.kickFromChannel_param_user_id_type_InputUser' => 'The user to kick',
    'method_channels.kickFromChannel_param_kicked_type_Bool' => 'Kick or unkick?',
    'method_messages.getChannelDialogs' => 'Get channel/supergruop dialogs',
    'method_messages.getChannelDialogs_param_offset_type_int' => 'Offset',
    'method_messages.getChannelDialogs_param_limit_type_int' => 'Number of results to return',
    'method_messages.getImportantHistory' => 'Get important message history',
    'method_messages.getImportantHistory_param_peer_type_InputPeer' => 'Peer',
    'method_messages.getImportantHistory_param_max_id_type_int' => 'Maximum message ID to fetch',
    'method_messages.getImportantHistory_param_min_id_type_int' => 'Minumum message ID to fetch',
    'method_messages.getImportantHistory_param_limit_type_int' => 'Number of results to fetch',
    'method_messages.readChannelHistory' => 'Mark channel/supergroup history as read',
    'method_messages.readChannelHistory_param_peer_type_InputPeer' => 'The channel/supergruop',
    'method_messages.readChannelHistory_param_max_id_type_int' => 'Maximum message ID to mark as read',
    'method_messages.createChannel' => 'Create channel',
    'method_messages.createChannel_param_title_type_string' => 'Channel/supergroup title',
    'method_messages.deleteChannelMessages' => 'Delete channel messages',
    'method_messages.deleteChannelMessages_param_peer_type_InputPeer' => 'The channel/supergroup',
    'method_messages.deleteChannelMessages_param_id_type_Vector t' => 'The IDs of messages to delete',
    'method_updates.getChannelDifference_param_peer_type_InputPeer' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
    'method_messages.search_param_important_only_type_true' => 'Show only important messages',
    'method_messages.sendMessage_param_broadcast_type_true' => 'Broadcast this message',
    'method_messages.sendMedia_param_broadcast_type_true' => 'Broadcast this message',
    'method_messages.forwardMessages_param_broadcast_type_true' => 'Broadcast this message',
    'method_messages.deactivateChat' => 'Deactivate chat',
    'method_messages.deactivateChat_param_chat_id_type_InputPeer' => 'The chat to deactivate',
    'method_messages.deactivateChat_param_enabled_type_Bool' => 'Activate or deactivate?',
    'method_help.getTermsOfService_param_lang_code_type_string' => 'Language code',
    'method_messages.sendInlineBotResult_param_broadcast_type_true' => 'Broadcast this message?',
    'method_channels.getImportantHistory_param_offset_date_type_int' => 'Date offset',
    'method_messages.getUnusedStickers' => 'Get unused stickers',
    'method_messages.getUnusedStickers_param_limit_type_int' => 'Number of results to return',
    'method_destroy_auth_key' => 'Destroy current authorization key',
    'method_phone.requestCall_param_g_a_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_phone.acceptCall_param_key_fingerprint_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
    'method_req_DH_params_param_p_type_string' => 'Factorized p from pq',
    'method_req_DH_params_param_q_type_string' => 'Factorized q from pq',
    'method_req_DH_params_param_encrypted_data_type_string' => 'Encrypted message',
    'method_set_client_DH_params_param_encrypted_data_type_string' => 'Encrypted message',
    'method_contest.saveDeveloperInfo' => 'Save developer info for telegram contest',
    'method_contest.saveDeveloperInfo_param_vk_id_type_int' => 'VK user ID',
    'method_contest.saveDeveloperInfo_param_name_type_string' => 'Name',
    'method_contest.saveDeveloperInfo_param_phone_number_type_string' => 'Phone number',
    'method_contest.saveDeveloperInfo_param_age_type_int' => 'Age',
    'method_contest.saveDeveloperInfo_param_city_type_string' => 'City',
    'method_auth.importBotAuthorization_param_a_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.importBotAuthorization_param_b_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.importBotAuthorization_param_c_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_auth.importBotAuthorization_param_d_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
    'object_vector' => 'Array',
    'object_resPQ' => 'Contains pq to factorize',
    'object_resPQ_param_nonce_type_int128' => 'Nonce',
    'object_resPQ_param_server_nonce_type_int128' => 'Server nonce',
    'object_resPQ_param_pq_type_bytes' => 'PQ ',
    'object_resPQ_param_server_public_key_fingerprints_type_Vector t' => 'RSA key fingerprints',
    'object_p_q_inner_data' => 'PQ inner data',
    'object_p_q_inner_data_param_pq_type_bytes' => 'PQ',
    'object_p_q_inner_data_param_p_type_bytes' => 'P',
    'object_p_q_inner_data_param_q_type_bytes' => 'Q',
    'object_p_q_inner_data_param_nonce_type_int128' => 'Nonce',
    'object_p_q_inner_data_param_server_nonce_type_int128' => 'Nonce',
    'object_p_q_inner_data_param_new_nonce_type_int256' => 'Nonce',
    'object_p_q_inner_data_temp' => 'Inner data temp',
    'object_p_q_inner_data_temp_param_pq_type_bytes' => 'Pq',
    'object_p_q_inner_data_temp_param_p_type_bytes' => 'P',
    'object_p_q_inner_data_temp_param_q_type_bytes' => 'Q',
    'object_p_q_inner_data_temp_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_p_q_inner_data_temp_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_p_q_inner_data_temp_param_new_nonce_type_int256' => 'New nonce',
    'object_p_q_inner_data_temp_param_expires_in_type_int' => 'Expires in',
    'object_server_DH_params_fail' => 'Server params fail',
    'object_server_DH_params_fail_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_server_DH_params_fail_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_server_DH_params_fail_param_new_nonce_hash_type_int128' => 'New nonce hash',
    'object_server_DH_params_ok' => 'Server params ok',
    'object_server_DH_params_ok_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_server_DH_params_ok_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_server_DH_params_ok_param_encrypted_answer_type_bytes' => 'Encrypted answer',
    'object_server_DH_inner_data' => 'Server inner data',
    'object_server_DH_inner_data_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_server_DH_inner_data_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_server_DH_inner_data_param_g_type_int' => 'G',
    'object_server_DH_inner_data_param_dh_prime_type_bytes' => 'Dh prime',
    'object_server_DH_inner_data_param_g_a_type_bytes' => 'G a',
    'object_server_DH_inner_data_param_server_time_type_int' => 'Server time',
    'object_client_DH_inner_data' => 'Client inner data',
    'object_client_DH_inner_data_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_client_DH_inner_data_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_client_DH_inner_data_param_retry_id_type_long' => 'Retry ID',
    'object_client_DH_inner_data_param_g_b_type_bytes' => 'G b',
    'object_dh_gen_ok' => 'Dh gen ok',
    'object_dh_gen_ok_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_dh_gen_ok_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_dh_gen_ok_param_new_nonce_hash1_type_int128' => 'New nonce hash1',
    'object_dh_gen_retry' => 'Dh gen retry',
    'object_dh_gen_retry_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_dh_gen_retry_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_dh_gen_retry_param_new_nonce_hash2_type_int128' => 'New nonce hash2',
    'object_dh_gen_fail' => 'Dh gen fail',
    'object_dh_gen_fail_param_nonce_type_int128' => 'Random number for cryptographic security',
    'object_dh_gen_fail_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
    'object_dh_gen_fail_param_new_nonce_hash3_type_int128' => 'New nonce hash3',
    'object_rpc_result' => 'Rpc result',
    'object_rpc_result_param_req_msg_id_type_long' => 'Req msg ID',
    'object_rpc_result_param_result_type_Object' => 'Result',
    'object_rpc_error' => 'Rpc error',
    'object_rpc_error_param_error_code_type_int' => 'Error code',
    'object_rpc_error_param_error_message_type_string' => 'Error message',
    'object_rpc_answer_unknown' => 'Rpc answer unknown',
    'object_rpc_answer_dropped_running' => 'Rpc answer dropped running',
    'object_rpc_answer_dropped' => 'Rpc answer dropped',
    'object_rpc_answer_dropped_param_msg_id_type_long' => 'Msg ID',
    'object_rpc_answer_dropped_param_seq_no_type_int' => 'Seq no',
    'object_rpc_answer_dropped_param_bytes_type_int' => 'Bytes',
    'object_future_salt' => 'Future salt',
    'object_future_salt_param_valid_since_type_int' => 'Valid since',
    'object_future_salt_param_valid_until_type_int' => 'Valid until',
    'object_future_salt_param_salt_type_long' => 'Salt',
    'object_future_salts' => 'Future salts',
    'object_future_salts_param_req_msg_id_type_long' => 'Req msg ID',
    'object_future_salts_param_now_type_int' => 'Now',
    'object_future_salts_param_salts_type_vector' => 'Salts',
    'object_pong' => 'Pong',
    'object_pong_param_msg_id_type_long' => 'Msg ID',
    'object_pong_param_ping_id_type_long' => 'Ping ID',
    'object_destroy_session_ok' => 'Destroy session ok',
    'object_destroy_session_ok_param_session_id_type_long' => 'Session ID',
    'object_destroy_session_none' => 'Destroy session none',
    'object_destroy_session_none_param_session_id_type_long' => 'Session ID',
    'object_new_session_created' => 'New session created',
    'object_new_session_created_param_first_msg_id_type_long' => 'First msg ID',
    'object_new_session_created_param_unique_id_type_long' => 'Unique ID',
    'object_new_session_created_param_server_salt_type_long' => 'Server salt',
    'object_msg_container' => 'Msg container',
    'object_msg_container_param_messages_type_vector' => 'Messages',
    'object_MTmessage' => 'MTProto message',
    'object_MTmessage_param_msg_id_type_long' => 'Message ID',
    'object_MTmessage_param_seqno_type_int' => 'Seqno',
    'object_MTmessage_param_bytes_type_int' => 'Message body',
    'object_MTmessage_param_body_type_Object' => 'Message body',
    'object_msg_copy' => 'Msg copy',
    'object_msg_copy_param_orig_message_type_MTMessage' => 'Orig message',
    'object_gzip_packed' => 'Gzip packed',
    'object_gzip_packed_param_packed_data_type_bytes' => 'Packed data',
    'object_msgs_ack' => 'Msgs ack',
    'object_msgs_ack_param_msg_ids_type_Vector t' => 'Msg IDs',
    'object_bad_msg_notification' => 'Bad msg notification',
    'object_bad_msg_notification_param_bad_msg_id_type_long' => 'Bad msg ID',
    'object_bad_msg_notification_param_bad_msg_seqno_type_int' => 'Bad msg seqno',
    'object_bad_msg_notification_param_error_code_type_int' => 'Error code',
    'object_bad_server_salt' => 'Bad server salt',
    'object_bad_server_salt_param_bad_msg_id_type_long' => 'Bad msg ID',
    'object_bad_server_salt_param_bad_msg_seqno_type_int' => 'Bad msg seqno',
    'object_bad_server_salt_param_error_code_type_int' => 'Error code',
    'object_bad_server_salt_param_new_server_salt_type_long' => 'New server salt',
    'object_msg_resend_req' => 'Msg resend req',
    'object_msg_resend_req_param_msg_ids_type_Vector t' => 'Msg IDs',
    'object_msgs_state_req' => 'Msgs state req',
    'object_msgs_state_req_param_msg_ids_type_Vector t' => 'Msg IDs',
    'object_msgs_state_info' => 'Msgs state info',
    'object_msgs_state_info_param_req_msg_id_type_long' => 'Req msg ID',
    'object_msgs_state_info_param_info_type_bytes' => 'Info',
    'object_msgs_all_info' => 'Msgs all info',
    'object_msgs_all_info_param_msg_ids_type_Vector t' => 'Msg IDs',
    'object_msgs_all_info_param_info_type_bytes' => 'Info',
    'object_msg_detailed_info' => 'Msg detailed info',
    'object_msg_detailed_info_param_msg_id_type_long' => 'Msg ID',
    'object_msg_detailed_info_param_answer_msg_id_type_long' => 'Answer msg ID',
    'object_msg_detailed_info_param_bytes_type_int' => 'Bytes',
    'object_msg_detailed_info_param_status_type_int' => 'Status',
    'object_msg_new_detailed_info' => 'Msg new detailed info',
    'object_msg_new_detailed_info_param_answer_msg_id_type_long' => 'Answer msg ID',
    'object_msg_new_detailed_info_param_bytes_type_int' => 'Bytes',
    'object_msg_new_detailed_info_param_status_type_int' => 'Status',
    'object_bind_auth_key_inner' => 'Bind auth key inner',
    'object_bind_auth_key_inner_param_nonce_type_long' => 'Nonce',
    'object_bind_auth_key_inner_param_temp_auth_key_id_type_long' => 'Temp auth key ID',
    'object_bind_auth_key_inner_param_perm_auth_key_id_type_long' => 'Perm auth key ID',
    'object_bind_auth_key_inner_param_temp_session_id_type_long' => 'Temp session ID',
    'object_bind_auth_key_inner_param_expires_at_type_int' => 'Expires at',
    'object_boolFalse' => 'Bool false',
    'object_boolTrue' => 'Bool true',
    'object_true' => 'True',
    'object_error' => 'Error',
    'object_error_param_code_type_int' => 'Code',
    'object_error_param_text_type_string' => 'Text',
    'object_null' => 'Null',
    'object_inputPeerEmpty' => 'Empty input peer',
    'object_inputPeerSelf' => 'Peer self',
    'object_inputPeerChat' => 'Peer chat',
    'object_inputPeerChat_param_chat_id_type_int' => 'Chat ID',
    'object_inputPeerUser' => 'Peer user',
    'object_inputPeerUser_param_user_id_type_int' => 'User ID',
    'object_inputPeerUser_param_access_hash_type_long' => 'Access hash',
    'object_inputPeerChannel' => 'Peer channel',
    'object_inputPeerChannel_param_channel_id_type_int' => 'Channel ID',
    'object_inputPeerChannel_param_access_hash_type_long' => 'Access hash',
    'object_inputUserEmpty' => 'Empty input user',
    'object_inputUserSelf' => 'User self',
    'object_inputUser' => 'User',
    'object_inputUser_param_user_id_type_int' => 'User ID',
    'object_inputUser_param_access_hash_type_long' => 'Access hash',
    'object_inputPhoneContact' => 'Phone contact',
    'object_inputPhoneContact_param_client_id_type_long' => 'Client ID',
    'object_inputPhoneContact_param_phone_type_string' => 'Phone',
    'object_inputPhoneContact_param_first_name_type_string' => 'First name',
    'object_inputPhoneContact_param_last_name_type_string' => 'Last name',
    'object_inputFile' => 'File',
    'object_inputFile_param_id_type_long' => 'ID',
    'object_inputFile_param_parts_type_int' => 'Parts',
    'object_inputFile_param_name_type_string' => 'Name',
    'object_inputFile_param_md5_checksum_type_string' => 'Md5 checksum',
    'object_inputFileBig' => 'File big',
    'object_inputFileBig_param_id_type_long' => 'ID',
    'object_inputFileBig_param_parts_type_int' => 'Parts',
    'object_inputFileBig_param_name_type_string' => 'Name',
    'object_inputMediaEmpty' => 'Empty input media',
    'object_inputMediaUploadedPhoto' => 'Media uploaded photo',
    'object_inputMediaUploadedPhoto_param_file_type_InputFile' => 'File',
    'object_inputMediaUploadedPhoto_param_stickers_type_Vector t' => 'Stickers',
    'object_inputMediaUploadedPhoto_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_inputMediaPhoto' => 'Media photo',
    'object_inputMediaPhoto_param_id_type_InputPhoto' => 'ID',
    'object_inputMediaPhoto_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_inputMediaGeoPoint' => 'Media geo point',
    'object_inputMediaGeoPoint_param_geo_point_type_InputGeoPoint' => 'Geo point',
    'object_inputMediaContact' => 'Media contact',
    'object_inputMediaContact_param_phone_number_type_string' => 'Phone number',
    'object_inputMediaContact_param_first_name_type_string' => 'First name',
    'object_inputMediaContact_param_last_name_type_string' => 'Last name',
    'object_inputMediaUploadedDocument' => 'Media uploaded document',
    'object_inputMediaUploadedDocument_param_nosound_video_type_true' => 'Nosound video?',
    'object_inputMediaUploadedDocument_param_file_type_InputFile' => 'File',
    'object_inputMediaUploadedDocument_param_thumb_type_InputFile' => 'Thumbnail',
    'object_inputMediaUploadedDocument_param_mime_type_type_string' => 'Mime type',
    'object_inputMediaUploadedDocument_param_attributes_type_Vector t' => 'Attributes',
    'object_inputMediaUploadedDocument_param_stickers_type_Vector t' => 'Stickers',
    'object_inputMediaUploadedDocument_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_inputMediaDocument' => 'Media document',
    'object_inputMediaDocument_param_id_type_InputDocument' => 'ID',
    'object_inputMediaDocument_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_inputMediaVenue' => 'Media venue',
    'object_inputMediaVenue_param_geo_point_type_InputGeoPoint' => 'Geo point',
    'object_inputMediaVenue_param_title_type_string' => 'Title',
    'object_inputMediaVenue_param_address_type_string' => 'Address',
    'object_inputMediaVenue_param_provider_type_string' => 'Provider',
    'object_inputMediaVenue_param_venue_id_type_string' => 'Venue ID',
    'object_inputMediaVenue_param_venue_type_type_string' => 'Venue type',
    'object_inputMediaGifExternal' => 'Media gif external',
    'object_inputMediaGifExternal_param_url_type_string' => 'URL',
    'object_inputMediaGifExternal_param_q_type_string' => 'Q',
    'object_inputMediaPhotoExternal' => 'Media photo external',
    'object_inputMediaPhotoExternal_param_url_type_string' => 'URL',
    'object_inputMediaPhotoExternal_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_inputMediaDocumentExternal' => 'Media document external',
    'object_inputMediaDocumentExternal_param_url_type_string' => 'URL',
    'object_inputMediaDocumentExternal_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_inputMediaGame' => 'Media game',
    'object_inputMediaGame_param_id_type_InputGame' => 'ID',
    'object_inputMediaInvoice' => 'Media invoice',
    'object_inputMediaInvoice_param_title_type_string' => 'Title',
    'object_inputMediaInvoice_param_description_type_string' => 'Description',
    'object_inputMediaInvoice_param_photo_type_InputWebDocument' => 'Photo',
    'object_inputMediaInvoice_param_invoice_type_Invoice' => 'Invoice',
    'object_inputMediaInvoice_param_payload_type_bytes' => 'Payload',
    'object_inputMediaInvoice_param_provider_type_string' => 'Provider',
    'object_inputMediaInvoice_param_provider_data_type_DataJSON' => 'Provider data',
    'object_inputMediaInvoice_param_start_param_type_string' => 'Start param',
    'object_inputMediaGeoLive' => 'Media geo live',
    'object_inputMediaGeoLive_param_geo_point_type_InputGeoPoint' => 'Geo point',
    'object_inputMediaGeoLive_param_period_type_int' => 'Period',
    'object_inputChatPhotoEmpty' => 'Empty input chat photo',
    'object_inputChatUploadedPhoto' => 'Chat uploaded photo',
    'object_inputChatUploadedPhoto_param_file_type_InputFile' => 'File',
    'object_inputChatPhoto' => 'Chat photo',
    'object_inputChatPhoto_param_id_type_InputPhoto' => 'ID',
    'object_inputGeoPointEmpty' => 'Empty input geo point',
    'object_inputGeoPoint' => 'Geo point',
    'object_inputGeoPoint_param_lat_type_double' => 'Lat',
    'object_inputGeoPoint_param_long_type_double' => 'Long',
    'object_inputPhotoEmpty' => 'Empty input photo',
    'object_inputPhoto' => 'Photo',
    'object_inputPhoto_param_id_type_long' => 'ID',
    'object_inputPhoto_param_access_hash_type_long' => 'Access hash',
    'object_inputFileLocation' => 'File location',
    'object_inputFileLocation_param_volume_id_type_long' => 'Volume ID',
    'object_inputFileLocation_param_local_id_type_int' => 'Local ID',
    'object_inputFileLocation_param_secret_type_long' => 'Secret',
    'object_inputEncryptedFileLocation' => 'Encrypted file location',
    'object_inputEncryptedFileLocation_param_id_type_long' => 'ID',
    'object_inputEncryptedFileLocation_param_access_hash_type_long' => 'Access hash',
    'object_inputDocumentFileLocation' => 'Document file location',
    'object_inputDocumentFileLocation_param_id_type_long' => 'ID',
    'object_inputDocumentFileLocation_param_access_hash_type_long' => 'Access hash',
    'object_inputDocumentFileLocation_param_version_type_int' => 'Version',
    'object_inputAppEvent' => 'App event',
    'object_inputAppEvent_param_time_type_double' => 'Time',
    'object_inputAppEvent_param_type_type_string' => 'Type',
    'object_inputAppEvent_param_peer_type_long' => 'Peer',
    'object_inputAppEvent_param_data_type_string' => 'Data',
    'object_peerUser' => 'Peer user',
    'object_peerUser_param_user_id_type_int' => 'User ID',
    'object_peerChat' => 'Peer chat',
    'object_peerChat_param_chat_id_type_int' => 'Chat ID',
    'object_peerChannel' => 'Peer channel',
    'object_peerChannel_param_channel_id_type_int' => 'Channel ID',
    'object_storage.fileUnknown' => 'File unknown',
    'object_storage.filePartial' => 'File partial',
    'object_storage.fileJpeg' => 'File jpeg',
    'object_storage.fileGif' => 'File gif',
    'object_storage.filePng' => 'File png',
    'object_storage.filePdf' => 'File pdf',
    'object_storage.fileMp3' => 'File mp3',
    'object_storage.fileMov' => 'File mov',
    'object_storage.fileMp4' => 'File mp4',
    'object_storage.fileWebp' => 'File webp',
    'object_fileLocationUnavailable' => 'File location unavailable',
    'object_fileLocationUnavailable_param_volume_id_type_long' => 'Volume ID',
    'object_fileLocationUnavailable_param_local_id_type_int' => 'Local ID',
    'object_fileLocationUnavailable_param_secret_type_long' => 'Secret',
    'object_fileLocation' => 'File location',
    'object_fileLocation_param_dc_id_type_int' => 'DC ID',
    'object_fileLocation_param_volume_id_type_long' => 'Volume ID',
    'object_fileLocation_param_local_id_type_int' => 'Local ID',
    'object_fileLocation_param_secret_type_long' => 'Secret',
    'object_userEmpty' => 'Empty user',
    'object_userEmpty_param_id_type_int' => 'ID',
    'object_user' => 'User',
    'object_user_param_self_type_true' => 'Self?',
    'object_user_param_contact_type_true' => 'Contact?',
    'object_user_param_mutual_contact_type_true' => 'Mutual contact?',
    'object_user_param_deleted_type_true' => 'Deleted?',
    'object_user_param_bot_type_true' => 'Bot?',
    'object_user_param_bot_chat_history_type_true' => 'Bot chat history?',
    'object_user_param_bot_nochats_type_true' => 'Bot nochats?',
    'object_user_param_verified_type_true' => 'Verified?',
    'object_user_param_restricted_type_true' => 'Restricted?',
    'object_user_param_min_type_true' => 'Min?',
    'object_user_param_bot_inline_geo_type_true' => 'Bot inline geo?',
    'object_user_param_id_type_int' => 'ID',
    'object_user_param_access_hash_type_long' => 'Access hash',
    'object_user_param_first_name_type_string' => 'First name',
    'object_user_param_last_name_type_string' => 'Last name',
    'object_user_param_username_type_string' => 'Username',
    'object_user_param_phone_type_string' => 'Phone',
    'object_user_param_photo_type_UserProfilePhoto' => 'Photo',
    'object_user_param_status_type_UserStatus' => 'Status',
    'object_user_param_bot_info_version_type_int' => 'Bot info version',
    'object_user_param_restriction_reason_type_string' => 'Restriction reason',
    'object_user_param_bot_inline_placeholder_type_string' => 'Bot inline placeholder',
    'object_user_param_lang_code_type_string' => 'Lang code',
    'object_userProfilePhotoEmpty' => 'Empty user profile photo',
    'object_userProfilePhoto' => 'User profile photo',
    'object_userProfilePhoto_param_photo_id_type_long' => 'Photo ID',
    'object_userProfilePhoto_param_photo_small_type_FileLocation' => 'Photo small',
    'object_userProfilePhoto_param_photo_big_type_FileLocation' => 'Photo big',
    'object_chatEmpty' => 'Empty chat',
    'object_chatEmpty_param_id_type_int' => 'ID',
    'object_chat' => 'Chat',
    'object_chat_param_creator_type_true' => 'Creator?',
    'object_chat_param_kicked_type_true' => 'Kicked?',
    'object_chat_param_left_type_true' => 'Left?',
    'object_chat_param_admins_enabled_type_true' => 'Admins enabled?',
    'object_chat_param_admin_type_true' => 'Admin?',
    'object_chat_param_deactivated_type_true' => 'Deactivated?',
    'object_chat_param_id_type_int' => 'ID',
    'object_chat_param_title_type_string' => 'Title',
    'object_chat_param_photo_type_ChatPhoto' => 'Photo',
    'object_chat_param_participants_count_type_int' => 'Participants count',
    'object_chat_param_date_type_int' => 'Date',
    'object_chat_param_version_type_int' => 'Version',
    'object_chat_param_migrated_to_type_InputChannel' => 'Migrated to',
    'object_chatForbidden' => 'Chat forbidden',
    'object_chatForbidden_param_id_type_int' => 'ID',
    'object_chatForbidden_param_title_type_string' => 'Title',
    'object_channel' => 'Channel',
    'object_channel_param_creator_type_true' => 'Creator?',
    'object_channel_param_left_type_true' => 'Left?',
    'object_channel_param_editor_type_true' => 'Editor?',
    'object_channel_param_broadcast_type_true' => 'Broadcast?',
    'object_channel_param_verified_type_true' => 'Verified?',
    'object_channel_param_megagroup_type_true' => 'Megagroup?',
    'object_channel_param_restricted_type_true' => 'Restricted?',
    'object_channel_param_democracy_type_true' => 'Democracy?',
    'object_channel_param_signatures_type_true' => 'Signatures?',
    'object_channel_param_min_type_true' => 'Min?',
    'object_channel_param_id_type_int' => 'ID',
    'object_channel_param_access_hash_type_long' => 'Access hash',
    'object_channel_param_title_type_string' => 'Title',
    'object_channel_param_username_type_string' => 'Username',
    'object_channel_param_photo_type_ChatPhoto' => 'Photo',
    'object_channel_param_date_type_int' => 'Date',
    'object_channel_param_version_type_int' => 'Version',
    'object_channel_param_restriction_reason_type_string' => 'Restriction reason',
    'object_channel_param_admin_rights_type_ChannelAdminRights' => 'Admin rights',
    'object_channel_param_banned_rights_type_ChannelBannedRights' => 'Banned rights',
    'object_channel_param_participants_count_type_int' => 'Participants count',
    'object_channelForbidden' => 'Forbidden channel',
    'object_channelForbidden_param_broadcast_type_true' => 'Broadcast?',
    'object_channelForbidden_param_megagroup_type_true' => 'Megagroup?',
    'object_channelForbidden_param_id_type_int' => 'ID',
    'object_channelForbidden_param_access_hash_type_long' => 'Access hash',
    'object_channelForbidden_param_title_type_string' => 'Title',
    'object_channelForbidden_param_until_date_type_int' => 'Until date',
    'object_chatFull' => 'Chat full',
    'object_chatFull_param_id_type_int' => 'ID',
    'object_chatFull_param_participants_type_ChatParticipants' => 'Participants',
    'object_chatFull_param_chat_photo_type_Photo' => 'Chat photo',
    'object_chatFull_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
    'object_chatFull_param_exported_invite_type_ExportedChatInvite' => 'Exported invite',
    'object_chatFull_param_bot_info_type_Vector t' => 'Bot info',
    'object_channelFull' => 'Full channel',
    'object_channelFull_param_can_view_participants_type_true' => 'Can view participants?',
    'object_channelFull_param_can_set_username_type_true' => 'Can set username?',
    'object_channelFull_param_can_set_stickers_type_true' => 'Can set group stickerset?',
    'object_channelFull_param_hidden_prehistory_type_true' => 'Hidden prehistory?',
    'object_channelFull_param_id_type_int' => 'ID',
    'object_channelFull_param_about_type_string' => 'About',
    'object_channelFull_param_participants_count_type_int' => 'Participants count',
    'object_channelFull_param_admins_count_type_int' => 'Admins count',
    'object_channelFull_param_kicked_count_type_int' => 'Kicked count',
    'object_channelFull_param_banned_count_type_int' => 'Banned count',
    'object_channelFull_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
    'object_channelFull_param_read_outbox_max_id_type_int' => 'Read outbox max ID',
    'object_channelFull_param_unread_count_type_int' => 'Unread count',
    'object_channelFull_param_chat_photo_type_Photo' => 'Chat photo',
    'object_channelFull_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
    'object_channelFull_param_exported_invite_type_ExportedChatInvite' => 'Exported invite',
    'object_channelFull_param_bot_info_type_Vector t' => 'Bot info',
    'object_channelFull_param_migrated_from_chat_id_type_int' => 'Migrated from chat ID',
    'object_channelFull_param_migrated_from_max_id_type_int' => 'Migrated from max ID',
    'object_channelFull_param_pinned_msg_id_type_int' => 'Pinned msg ID',
    'object_channelFull_param_stickerset_type_StickerSet' => 'Stickerset',
    'object_channelFull_param_available_min_id_type_int' => 'Available min ID',
    'object_chatParticipant' => 'Chat participant',
    'object_chatParticipant_param_user_id_type_int' => 'User ID',
    'object_chatParticipant_param_inviter_id_type_int' => 'Inviter ID',
    'object_chatParticipant_param_date_type_int' => 'Date',
    'object_chatParticipantCreator' => 'Chat participant creator',
    'object_chatParticipantCreator_param_user_id_type_int' => 'User ID',
    'object_chatParticipantAdmin' => 'Chat participant admin',
    'object_chatParticipantAdmin_param_user_id_type_int' => 'User ID',
    'object_chatParticipantAdmin_param_inviter_id_type_int' => 'Inviter ID',
    'object_chatParticipantAdmin_param_date_type_int' => 'Date',
    'object_chatParticipantsForbidden' => 'Chat participants forbidden',
    'object_chatParticipantsForbidden_param_chat_id_type_int' => 'Chat ID',
    'object_chatParticipantsForbidden_param_self_participant_type_ChatParticipant' => 'Self participant',
    'object_chatParticipants' => 'Chat participants',
    'object_chatParticipants_param_chat_id_type_int' => 'Chat ID',
    'object_chatParticipants_param_participants_type_Vector t' => 'Participants',
    'object_chatParticipants_param_version_type_int' => 'Version',
    'object_chatPhotoEmpty' => 'Empty chat photo',
    'object_chatPhoto' => 'Chat photo',
    'object_chatPhoto_param_photo_small_type_FileLocation' => 'Photo small',
    'object_chatPhoto_param_photo_big_type_FileLocation' => 'Photo big',
    'object_messageEmpty' => 'Empty message',
    'object_messageEmpty_param_id_type_int' => 'ID',
    'object_message' => 'Message',
    'object_message_param_out_type_true' => 'Out?',
    'object_message_param_mentioned_type_true' => 'Mentioned?',
    'object_message_param_media_unread_type_true' => 'Media unread?',
    'object_message_param_silent_type_true' => 'Silent?',
    'object_message_param_post_type_true' => 'Post?',
    'object_message_param_id_type_int' => 'ID',
    'object_message_param_from_id_type_int' => 'From ID',
    'object_message_param_to_id_type_Peer' => 'To ID',
    'object_message_param_fwd_from_type_MessageFwdHeader' => 'Forwarded from',
    'object_message_param_via_bot_id_type_int' => 'Via bot ID',
    'object_message_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
    'object_message_param_date_type_int' => 'Date',
    'object_message_param_message_type_string' => 'Message',
    'object_message_param_media_type_MessageMedia' => 'Media',
    'object_message_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_message_param_entities_type_Vector t' => 'Entities',
    'object_message_param_views_type_int' => 'Views',
    'object_message_param_edit_date_type_int' => 'Edit date',
    'object_message_param_post_author_type_string' => 'Post author',
    'object_message_param_grouped_id_type_long' => 'Grouped ID',
    'object_messageService' => 'Message service',
    'object_messageService_param_out_type_true' => 'Out?',
    'object_messageService_param_mentioned_type_true' => 'Mentioned?',
    'object_messageService_param_media_unread_type_true' => 'Media unread?',
    'object_messageService_param_silent_type_true' => 'Silent?',
    'object_messageService_param_post_type_true' => 'Post?',
    'object_messageService_param_id_type_int' => 'ID',
    'object_messageService_param_from_id_type_int' => 'From ID',
    'object_messageService_param_to_id_type_Peer' => 'To ID',
    'object_messageService_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
    'object_messageService_param_date_type_int' => 'Date',
    'object_messageService_param_action_type_MessageAction' => 'Action',
    'object_messageMediaEmpty' => 'Empty message media',
    'object_messageMediaPhoto' => 'Message media photo',
    'object_messageMediaPhoto_param_photo_type_Photo' => 'Photo',
    'object_messageMediaPhoto_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_messageMediaGeo' => 'Message media geo',
    'object_messageMediaGeo_param_geo_type_GeoPoint' => 'Geo',
    'object_messageMediaContact' => 'Message media contact',
    'object_messageMediaContact_param_phone_number_type_string' => 'Phone number',
    'object_messageMediaContact_param_first_name_type_string' => 'First name',
    'object_messageMediaContact_param_last_name_type_string' => 'Last name',
    'object_messageMediaContact_param_user_id_type_int' => 'User ID',
    'object_messageMediaUnsupported' => 'Message media unsupported',
    'object_messageMediaDocument' => 'Message media document',
    'object_messageMediaDocument_param_document_type_Document' => 'Document',
    'object_messageMediaDocument_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_messageMediaWebPage' => 'Message media web page',
    'object_messageMediaWebPage_param_webpage_type_WebPage' => 'Webpage',
    'object_messageMediaVenue' => 'Message media venue',
    'object_messageMediaVenue_param_geo_type_GeoPoint' => 'Geo',
    'object_messageMediaVenue_param_title_type_string' => 'Title',
    'object_messageMediaVenue_param_address_type_string' => 'Address',
    'object_messageMediaVenue_param_provider_type_string' => 'Provider',
    'object_messageMediaVenue_param_venue_id_type_string' => 'Venue ID',
    'object_messageMediaVenue_param_venue_type_type_string' => 'Venue type',
    'object_messageMediaGame' => 'Message media game',
    'object_messageMediaGame_param_game_type_Game' => 'Game',
    'object_messageMediaInvoice' => 'Message media invoice',
    'object_messageMediaInvoice_param_shipping_address_requested_type_true' => 'Shipping address requested?',
    'object_messageMediaInvoice_param_test_type_true' => 'Test?',
    'object_messageMediaInvoice_param_title_type_string' => 'Title',
    'object_messageMediaInvoice_param_description_type_string' => 'Description',
    'object_messageMediaInvoice_param_photo_type_WebDocument' => 'Photo',
    'object_messageMediaInvoice_param_receipt_msg_id_type_int' => 'Receipt msg ID',
    'object_messageMediaInvoice_param_currency_type_string' => 'Currency',
    'object_messageMediaInvoice_param_total_amount_type_long' => 'Total amount',
    'object_messageMediaInvoice_param_start_param_type_string' => 'Start param',
    'object_messageMediaGeoLive' => 'Message media geo live',
    'object_messageMediaGeoLive_param_geo_type_GeoPoint' => 'Geo',
    'object_messageMediaGeoLive_param_period_type_int' => 'Period',
    'object_messageActionEmpty' => 'Empty message action',
    'object_messageActionChatCreate' => 'Message action chat create',
    'object_messageActionChatCreate_param_title_type_string' => 'Title',
    'object_messageActionChatCreate_param_users_type_Vector t' => 'Users',
    'object_messageActionChatEditTitle' => 'Message action chat edit title',
    'object_messageActionChatEditTitle_param_title_type_string' => 'Title',
    'object_messageActionChatEditPhoto' => 'Message action chat edit photo',
    'object_messageActionChatEditPhoto_param_photo_type_Photo' => 'Photo',
    'object_messageActionChatDeletePhoto' => 'Message action chat delete photo',
    'object_messageActionChatAddUser' => 'Message action chat add user',
    'object_messageActionChatAddUser_param_users_type_Vector t' => 'Users',
    'object_messageActionChatDeleteUser' => 'Message action chat delete user',
    'object_messageActionChatDeleteUser_param_user_id_type_int' => 'User ID',
    'object_messageActionChatJoinedByLink' => 'Message action chat joined by link',
    'object_messageActionChatJoinedByLink_param_inviter_id_type_int' => 'Inviter ID',
    'object_messageActionChannelCreate' => 'Message action channel create',
    'object_messageActionChannelCreate_param_title_type_string' => 'Title',
    'object_messageActionChatMigrateTo' => 'Message action chat migrate to',
    'object_messageActionChatMigrateTo_param_channel_id_type_int' => 'Channel ID',
    'object_messageActionChannelMigrateFrom' => 'Message action channel migrate from',
    'object_messageActionChannelMigrateFrom_param_title_type_string' => 'Title',
    'object_messageActionChannelMigrateFrom_param_chat_id_type_int' => 'Chat ID',
    'object_messageActionPinMessage' => 'Message action pin message',
    'object_messageActionHistoryClear' => 'Message action history clear',
    'object_messageActionGameScore' => 'Message action game score',
    'object_messageActionGameScore_param_game_id_type_long' => 'Game ID',
    'object_messageActionGameScore_param_score_type_int' => 'Score',
    'object_messageActionPaymentSentMe' => 'Message action payment sent me',
    'object_messageActionPaymentSentMe_param_currency_type_string' => 'Currency',
    'object_messageActionPaymentSentMe_param_total_amount_type_long' => 'Total amount',
    'object_messageActionPaymentSentMe_param_payload_type_bytes' => 'Payload',
    'object_messageActionPaymentSentMe_param_info_type_PaymentRequestedInfo' => 'Info',
    'object_messageActionPaymentSentMe_param_shipping_option_id_type_string' => 'Shipping option ID',
    'object_messageActionPaymentSentMe_param_charge_type_PaymentCharge' => 'Charge',
    'object_messageActionPaymentSent' => 'Message action payment sent',
    'object_messageActionPaymentSent_param_currency_type_string' => 'Currency',
    'object_messageActionPaymentSent_param_total_amount_type_long' => 'Total amount',
    'object_messageActionPhoneCall' => 'Message action phone call',
    'object_messageActionPhoneCall_param_call_id_type_long' => 'Call ID',
    'object_messageActionPhoneCall_param_reason_type_PhoneCallDiscardReason' => 'Reason',
    'object_messageActionPhoneCall_param_duration_type_int' => 'Duration',
    'object_messageActionScreenshotTaken' => 'Message action screenshot taken',
    'object_messageActionCustomAction' => 'Message action custom action',
    'object_messageActionCustomAction_param_message_type_string' => 'Message',
    'object_dialog' => 'Dialog',
    'object_dialog_param_pinned_type_true' => 'Pinned?',
    'object_dialog_param_peer_type_Peer' => 'Peer',
    'object_dialog_param_top_message_type_int' => 'Top message',
    'object_dialog_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
    'object_dialog_param_read_outbox_max_id_type_int' => 'Read outbox max ID',
    'object_dialog_param_unread_count_type_int' => 'Unread count',
    'object_dialog_param_unread_mentions_count_type_int' => 'Unread mentions count',
    'object_dialog_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
    'object_dialog_param_pts_type_int' => 'Pts',
    'object_dialog_param_draft_type_DraftMessage' => 'Draft',
    'object_photoEmpty' => 'Empty photo',
    'object_photoEmpty_param_id_type_long' => 'ID',
    'object_photo' => 'Photo',
    'object_photo_param_has_stickers_type_true' => 'Has stickers?',
    'object_photo_param_id_type_long' => 'ID',
    'object_photo_param_access_hash_type_long' => 'Access hash',
    'object_photo_param_date_type_int' => 'Date',
    'object_photo_param_sizes_type_Vector t' => 'Sizes',
    'object_photoSizeEmpty' => 'Empty photo size',
    'object_photoSizeEmpty_param_type_type_string' => 'Type',
    'object_photoSize' => 'Photo size',
    'object_photoSize_param_type_type_string' => 'Type',
    'object_photoSize_param_location_type_FileLocation' => 'Location',
    'object_photoSize_param_w_type_int' => 'Width',
    'object_photoSize_param_h_type_int' => 'Height',
    'object_photoSize_param_size_type_int' => 'Size',
    'object_photoCachedSize' => 'Photo cached size',
    'object_photoCachedSize_param_type_type_string' => 'Type',
    'object_photoCachedSize_param_location_type_FileLocation' => 'Location',
    'object_photoCachedSize_param_w_type_int' => 'Width',
    'object_photoCachedSize_param_h_type_int' => 'Height',
    'object_photoCachedSize_param_bytes_type_bytes' => 'Bytes',
    'object_geoPointEmpty' => 'Empty geo point',
    'object_geoPoint' => 'Geo point',
    'object_geoPoint_param_long_type_double' => 'Long',
    'object_geoPoint_param_lat_type_double' => 'Lat',
    'object_auth.checkedPhone' => 'Checked phone',
    'object_auth.checkedPhone_param_phone_registered_type_Bool' => 'Phone registered?',
    'object_auth.sentCode' => 'Sent code',
    'object_auth.sentCode_param_phone_registered_type_true' => 'Phone registered?',
    'object_auth.sentCode_param_type_type_auth.SentCodeType' => 'Type',
    'object_auth.sentCode_param_phone_code_hash_type_string' => 'Phone code hash',
    'object_auth.sentCode_param_next_type_type_auth.CodeType' => 'Next type',
    'object_auth.sentCode_param_timeout_type_int' => 'Timeout',
    'object_auth.authorization' => 'Authorization',
    'object_auth.authorization_param_tmp_sessions_type_int' => 'Temporary sessions',
    'object_auth.authorization_param_user_type_User' => 'User',
    'object_auth.exportedAuthorization' => 'Exported authorization',
    'object_auth.exportedAuthorization_param_id_type_int' => 'ID',
    'object_auth.exportedAuthorization_param_bytes_type_bytes' => 'Bytes',
    'object_inputNotifyPeer' => 'Notify peer',
    'object_inputNotifyPeer_param_peer_type_InputPeer' => 'Peer',
    'object_inputNotifyUsers' => 'Notify users',
    'object_inputNotifyChats' => 'Notify chats',
    'object_inputNotifyAll' => 'Notify all',
    'object_inputPeerNotifyEventsEmpty' => 'Empty input peer notify events',
    'object_inputPeerNotifyEventsAll' => 'Peer notify events all',
    'object_inputPeerNotifySettings' => 'Peer notify settings',
    'object_inputPeerNotifySettings_param_show_previews_type_true' => 'Show previews?',
    'object_inputPeerNotifySettings_param_silent_type_true' => 'Silent?',
    'object_inputPeerNotifySettings_param_mute_until_type_int' => 'Mute until',
    'object_inputPeerNotifySettings_param_sound_type_string' => 'Sound',
    'object_peerNotifyEventsEmpty' => 'Empty peer notify events',
    'object_peerNotifyEventsAll' => 'Peer notify events all',
    'object_peerNotifySettingsEmpty' => 'Empty peer notify settings',
    'object_peerNotifySettings' => 'Peer notify settings',
    'object_peerNotifySettings_param_show_previews_type_true' => 'Show previews?',
    'object_peerNotifySettings_param_silent_type_true' => 'Silent?',
    'object_peerNotifySettings_param_mute_until_type_int' => 'Mute until',
    'object_peerNotifySettings_param_sound_type_string' => 'Sound',
    'object_peerSettings' => 'Peer settings',
    'object_peerSettings_param_report_spam_type_true' => 'Report spam?',
    'object_wallPaper' => 'Wall paper',
    'object_wallPaper_param_id_type_int' => 'ID',
    'object_wallPaper_param_title_type_string' => 'Title',
    'object_wallPaper_param_sizes_type_Vector t' => 'Sizes',
    'object_wallPaper_param_color_type_int' => 'Color',
    'object_wallPaperSolid' => 'Wall paper solid',
    'object_wallPaperSolid_param_id_type_int' => 'ID',
    'object_wallPaperSolid_param_title_type_string' => 'Title',
    'object_wallPaperSolid_param_bg_color_type_int' => 'Bg color',
    'object_wallPaperSolid_param_color_type_int' => 'Color',
    'object_inputReportReasonSpam' => 'Report reason spam',
    'object_inputReportReasonViolence' => 'Report reason violence',
    'object_inputReportReasonPornography' => 'Report reason pornography',
    'object_inputReportReasonOther' => 'Report reason other',
    'object_inputReportReasonOther_param_text_type_string' => 'Text',
    'object_userFull' => 'User full',
    'object_userFull_param_blocked_type_true' => 'Blocked?',
    'object_userFull_param_phone_calls_available_type_true' => 'Phone calls available?',
    'object_userFull_param_phone_calls_private_type_true' => 'Phone calls private?',
    'object_userFull_param_user_type_User' => 'User',
    'object_userFull_param_about_type_string' => 'About',
    'object_userFull_param_link_type_contacts.Link' => 'Link',
    'object_userFull_param_profile_photo_type_Photo' => 'Profile photo',
    'object_userFull_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
    'object_userFull_param_bot_info_type_BotInfo' => 'Bot info',
    'object_userFull_param_common_chats_count_type_int' => 'Common chats count',
    'object_contact' => 'Contact',
    'object_contact_param_user_id_type_int' => 'User ID',
    'object_contact_param_mutual_type_Bool' => 'Mutual?',
    'object_importedContact' => 'Imported contact',
    'object_importedContact_param_user_id_type_int' => 'User ID',
    'object_importedContact_param_client_id_type_long' => 'Client ID',
    'object_contactBlocked' => 'Contact blocked',
    'object_contactBlocked_param_user_id_type_int' => 'User ID',
    'object_contactBlocked_param_date_type_int' => 'Date',
    'object_contactStatus' => 'Contact status',
    'object_contactStatus_param_user_id_type_int' => 'User ID',
    'object_contactStatus_param_status_type_UserStatus' => 'Status',
    'object_contacts.link' => 'Link',
    'object_contacts.link_param_my_link_type_ContactLink' => 'My link',
    'object_contacts.link_param_foreign_link_type_ContactLink' => 'Foreign link',
    'object_contacts.link_param_user_type_User' => 'User',
    'object_contacts.contactsNotModified' => 'Contacts not modified',
    'object_contacts.contacts' => 'Contacts',
    'object_contacts.contacts_param_contacts_type_Vector t' => 'Contacts',
    'object_contacts.contacts_param_saved_count_type_int' => 'Saved count',
    'object_contacts.contacts_param_users_type_Vector t' => 'Users',
    'object_contacts.importedContacts' => 'Imported contacts',
    'object_contacts.importedContacts_param_imported_type_Vector t' => 'Imported',
    'object_contacts.importedContacts_param_popular_invites_type_Vector t' => 'Popular invites',
    'object_contacts.importedContacts_param_retry_contacts_type_Vector t' => 'Retry importing contacts whose client IDs appear here',
    'object_contacts.importedContacts_param_users_type_Vector t' => 'Users',
    'object_contacts.blocked' => 'Blocked',
    'object_contacts.blocked_param_blocked_type_Vector t' => 'Blocked',
    'object_contacts.blocked_param_users_type_Vector t' => 'Users',
    'object_contacts.blockedSlice' => 'Blocked slice',
    'object_contacts.blockedSlice_param_count_type_int' => 'Count',
    'object_contacts.blockedSlice_param_blocked_type_Vector t' => 'Blocked',
    'object_contacts.blockedSlice_param_users_type_Vector t' => 'Users',
    'object_messages.dialogs' => 'Dialogs',
    'object_messages.dialogs_param_dialogs_type_Vector t' => 'Dialogs',
    'object_messages.dialogs_param_messages_type_Vector t' => 'Messages',
    'object_messages.dialogs_param_chats_type_Vector t' => 'Chats',
    'object_messages.dialogs_param_users_type_Vector t' => 'Users',
    'object_messages.dialogsSlice' => 'Dialogs slice',
    'object_messages.dialogsSlice_param_count_type_int' => 'Count',
    'object_messages.dialogsSlice_param_dialogs_type_Vector t' => 'Dialogs',
    'object_messages.dialogsSlice_param_messages_type_Vector t' => 'Messages',
    'object_messages.dialogsSlice_param_chats_type_Vector t' => 'Chats',
    'object_messages.dialogsSlice_param_users_type_Vector t' => 'Users',
    'object_messages.messages' => 'Messages',
    'object_messages.messages_param_messages_type_Vector t' => 'Messages',
    'object_messages.messages_param_chats_type_Vector t' => 'Chats',
    'object_messages.messages_param_users_type_Vector t' => 'Users',
    'object_messages.messagesSlice' => 'Messages slice',
    'object_messages.messagesSlice_param_count_type_int' => 'Count',
    'object_messages.messagesSlice_param_messages_type_Vector t' => 'Messages',
    'object_messages.messagesSlice_param_chats_type_Vector t' => 'Chats',
    'object_messages.messagesSlice_param_users_type_Vector t' => 'Users',
    'object_messages.channelMessages' => 'Channel messages',
    'object_messages.channelMessages_param_pts_type_int' => 'Pts',
    'object_messages.channelMessages_param_count_type_int' => 'Count',
    'object_messages.channelMessages_param_messages_type_Vector t' => 'Messages',
    'object_messages.channelMessages_param_chats_type_Vector t' => 'Chats',
    'object_messages.channelMessages_param_users_type_Vector t' => 'Users',
    'object_messages.messagesNotModified' => 'Messages not modified',
    'object_messages.messagesNotModified_param_count_type_int' => 'Count',
    'object_messages.chats' => 'Chats',
    'object_messages.chats_param_chats_type_Vector t' => 'Chats',
    'object_messages.chatsSlice' => 'Chats slice',
    'object_messages.chatsSlice_param_count_type_int' => 'Count',
    'object_messages.chatsSlice_param_chats_type_Vector t' => 'Chats',
    'object_messages.chatFull' => 'Chat full',
    'object_messages.chatFull_param_full_chat_type_ChatFull' => 'Full chat',
    'object_messages.chatFull_param_chats_type_Vector t' => 'Chats',
    'object_messages.chatFull_param_users_type_Vector t' => 'Users',
    'object_messages.affectedHistory' => 'Affected history',
    'object_messages.affectedHistory_param_pts_type_int' => 'Pts',
    'object_messages.affectedHistory_param_pts_count_type_int' => 'Pts count',
    'object_messages.affectedHistory_param_offset_type_int' => 'Offset',
    'object_inputMessagesFilterEmpty' => 'Empty input messages filter',
    'object_inputMessagesFilterPhotos' => 'Messages filter photos',
    'object_inputMessagesFilterVideo' => 'Messages filter video',
    'object_inputMessagesFilterPhotoVideo' => 'Messages filter photo video',
    'object_inputMessagesFilterDocument' => 'Messages filter document',
    'object_inputMessagesFilterUrl' => 'Messages filter URL',
    'object_inputMessagesFilterGif' => 'Messages filter gif',
    'object_inputMessagesFilterVoice' => 'Messages filter voice',
    'object_inputMessagesFilterMusic' => 'Messages filter music',
    'object_inputMessagesFilterChatPhotos' => 'Messages filter chat photos',
    'object_inputMessagesFilterPhoneCalls' => 'Messages filter phone calls',
    'object_inputMessagesFilterPhoneCalls_param_missed_type_true' => 'Missed?',
    'object_inputMessagesFilterRoundVoice' => 'Messages filter round voice',
    'object_inputMessagesFilterRoundVideo' => 'Messages filter round video',
    'object_inputMessagesFilterMyMentions' => 'Messages filter my mentions',
    'object_inputMessagesFilterGeo' => 'Messages filter geo',
    'object_inputMessagesFilterContacts' => 'Messages filter contacts',
    'object_updateNewMessage' => 'Update new message',
    'object_updateNewMessage_param_message_type_Message' => 'Message',
    'object_updateNewMessage_param_pts_type_int' => 'Pts',
    'object_updateNewMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateMessageID' => 'Update message ID',
    'object_updateMessageID_param_id_type_int' => 'ID',
    'object_updateDeleteMessages' => 'Update delete messages',
    'object_updateDeleteMessages_param_messages_type_Vector t' => 'Messages',
    'object_updateDeleteMessages_param_pts_type_int' => 'Pts',
    'object_updateDeleteMessages_param_pts_count_type_int' => 'Pts count',
    'object_updateUserTyping' => 'Update user typing',
    'object_updateUserTyping_param_user_id_type_int' => 'User ID',
    'object_updateUserTyping_param_action_type_SendMessageAction' => 'Action',
    'object_updateChatUserTyping' => 'Update chat user typing',
    'object_updateChatUserTyping_param_chat_id_type_int' => 'Chat ID',
    'object_updateChatUserTyping_param_user_id_type_int' => 'User ID',
    'object_updateChatUserTyping_param_action_type_SendMessageAction' => 'Action',
    'object_updateChatParticipants' => 'Update chat participants',
    'object_updateChatParticipants_param_participants_type_ChatParticipants' => 'Participants',
    'object_updateUserName' => 'Update user name',
    'object_updateUserName_param_user_id_type_int' => 'User ID',
    'object_updateUserName_param_first_name_type_string' => 'First name',
    'object_updateUserName_param_last_name_type_string' => 'Last name',
    'object_updateUserName_param_username_type_string' => 'Username',
    'object_updateUserPhoto' => 'Update user photo',
    'object_updateUserPhoto_param_user_id_type_int' => 'User ID',
    'object_updateUserPhoto_param_date_type_int' => 'Date',
    'object_updateUserPhoto_param_photo_type_UserProfilePhoto' => 'Photo',
    'object_updateUserPhoto_param_previous_type_Bool' => 'Previous?',
    'object_updateContactRegistered' => 'Update contact registered',
    'object_updateContactRegistered_param_user_id_type_int' => 'User ID',
    'object_updateContactRegistered_param_date_type_int' => 'Date',
    'object_updateContactLink' => 'Update contact link',
    'object_updateContactLink_param_user_id_type_int' => 'User ID',
    'object_updateContactLink_param_my_link_type_ContactLink' => 'My link',
    'object_updateContactLink_param_foreign_link_type_ContactLink' => 'Foreign link',
    'object_updateNewEncryptedMessage' => 'Update new encrypted message',
    'object_updateNewEncryptedMessage_param_message_type_EncryptedMessage' => 'Message',
    'object_updateNewEncryptedMessage_param_qts_type_int' => 'Qts',
    'object_updateEncryptedChatTyping' => 'Update encrypted chat typing',
    'object_updateEncryptedChatTyping_param_chat_id_type_int' => 'Chat ID',
    'object_updateEncryption' => 'Update encryption',
    'object_updateEncryption_param_chat_type_EncryptedChat' => 'Chat',
    'object_updateEncryption_param_date_type_int' => 'Date',
    'object_updateEncryptedMessagesRead' => 'Update encrypted messages read',
    'object_updateEncryptedMessagesRead_param_chat_id_type_int' => 'Chat ID',
    'object_updateEncryptedMessagesRead_param_max_date_type_int' => 'Max date',
    'object_updateEncryptedMessagesRead_param_date_type_int' => 'Date',
    'object_updateChatParticipantAdd' => 'Update chat participant add',
    'object_updateChatParticipantAdd_param_chat_id_type_int' => 'Chat ID',
    'object_updateChatParticipantAdd_param_user_id_type_int' => 'User ID',
    'object_updateChatParticipantAdd_param_inviter_id_type_int' => 'Inviter ID',
    'object_updateChatParticipantAdd_param_date_type_int' => 'Date',
    'object_updateChatParticipantAdd_param_version_type_int' => 'Version',
    'object_updateChatParticipantDelete' => 'Update chat participant delete',
    'object_updateChatParticipantDelete_param_chat_id_type_int' => 'Chat ID',
    'object_updateChatParticipantDelete_param_user_id_type_int' => 'User ID',
    'object_updateChatParticipantDelete_param_version_type_int' => 'Version',
    'object_updateDcOptions' => 'Update DC options',
    'object_updateDcOptions_param_dc_options_type_Vector t' => 'DC options',
    'object_updateUserBlocked' => 'Update user blocked',
    'object_updateUserBlocked_param_user_id_type_int' => 'User ID',
    'object_updateUserBlocked_param_blocked_type_Bool' => 'Blocked?',
    'object_updateNotifySettings' => 'Update notify settings',
    'object_updateNotifySettings_param_peer_type_NotifyPeer' => 'Peer',
    'object_updateNotifySettings_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
    'object_updateServiceNotification' => 'Update service notification',
    'object_updateServiceNotification_param_popup_type_true' => 'Popup?',
    'object_updateServiceNotification_param_inbox_date_type_int' => 'Inbox date',
    'object_updateServiceNotification_param_type_type_string' => 'Type',
    'object_updateServiceNotification_param_message_type_string' => 'Message',
    'object_updateServiceNotification_param_media_type_MessageMedia' => 'Media',
    'object_updateServiceNotification_param_entities_type_Vector t' => 'Entities',
    'object_updatePrivacy' => 'Update privacy',
    'object_updatePrivacy_param_key_type_PrivacyKey' => 'Key',
    'object_updatePrivacy_param_rules_type_Vector t' => 'Rules',
    'object_updateUserPhone' => 'Update user phone',
    'object_updateUserPhone_param_user_id_type_int' => 'User ID',
    'object_updateUserPhone_param_phone_type_string' => 'Phone',
    'object_updateReadHistoryInbox' => 'Update read history inbox',
    'object_updateReadHistoryInbox_param_peer_type_Peer' => 'Peer',
    'object_updateReadHistoryInbox_param_max_id_type_int' => 'Max ID',
    'object_updateReadHistoryInbox_param_pts_type_int' => 'Pts',
    'object_updateReadHistoryInbox_param_pts_count_type_int' => 'Pts count',
    'object_updateReadHistoryOutbox' => 'Update read history outbox',
    'object_updateReadHistoryOutbox_param_peer_type_Peer' => 'Peer',
    'object_updateReadHistoryOutbox_param_max_id_type_int' => 'Max ID',
    'object_updateReadHistoryOutbox_param_pts_type_int' => 'Pts',
    'object_updateReadHistoryOutbox_param_pts_count_type_int' => 'Pts count',
    'object_updateWebPage' => 'Update web page',
    'object_updateWebPage_param_webpage_type_WebPage' => 'Webpage',
    'object_updateWebPage_param_pts_type_int' => 'Pts',
    'object_updateWebPage_param_pts_count_type_int' => 'Pts count',
    'object_updateReadMessagesContents' => 'Update read messages contents',
    'object_updateReadMessagesContents_param_messages_type_Vector t' => 'Messages',
    'object_updateReadMessagesContents_param_pts_type_int' => 'Pts',
    'object_updateReadMessagesContents_param_pts_count_type_int' => 'Pts count',
    'object_updateChannelTooLong' => 'Update channel too long',
    'object_updateChannelTooLong_param_channel_id_type_int' => 'Channel ID',
    'object_updateChannelTooLong_param_pts_type_int' => 'Pts',
    'object_updateChannel' => 'Update channel',
    'object_updateChannel_param_channel_id_type_int' => 'Channel ID',
    'object_updateNewChannelMessage' => 'Update new channel message',
    'object_updateNewChannelMessage_param_message_type_Message' => 'Message',
    'object_updateNewChannelMessage_param_pts_type_int' => 'Pts',
    'object_updateNewChannelMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateReadChannelInbox' => 'Update read channel inbox',
    'object_updateReadChannelInbox_param_channel_id_type_int' => 'Channel ID',
    'object_updateReadChannelInbox_param_max_id_type_int' => 'Max ID',
    'object_updateDeleteChannelMessages' => 'Update delete channel messages',
    'object_updateDeleteChannelMessages_param_channel_id_type_int' => 'Channel ID',
    'object_updateDeleteChannelMessages_param_messages_type_Vector t' => 'Messages',
    'object_updateDeleteChannelMessages_param_pts_type_int' => 'Pts',
    'object_updateDeleteChannelMessages_param_pts_count_type_int' => 'Pts count',
    'object_updateChannelMessageViews' => 'Update channel message views',
    'object_updateChannelMessageViews_param_channel_id_type_int' => 'Channel ID',
    'object_updateChannelMessageViews_param_id_type_int' => 'ID',
    'object_updateChannelMessageViews_param_views_type_int' => 'Views',
    'object_updateChatAdmins' => 'Update chat admins',
    'object_updateChatAdmins_param_chat_id_type_int' => 'Chat ID',
    'object_updateChatAdmins_param_enabled_type_Bool' => 'Enabled?',
    'object_updateChatAdmins_param_version_type_int' => 'Version',
    'object_updateChatParticipantAdmin' => 'Update chat participant admin',
    'object_updateChatParticipantAdmin_param_chat_id_type_int' => 'Chat ID',
    'object_updateChatParticipantAdmin_param_user_id_type_int' => 'User ID',
    'object_updateChatParticipantAdmin_param_is_admin_type_Bool' => 'Is admin?',
    'object_updateChatParticipantAdmin_param_version_type_int' => 'Version',
    'object_updateNewStickerSet' => 'Update new sticker set',
    'object_updateNewStickerSet_param_stickerset_type_messages.StickerSet' => 'Stickerset',
    'object_updateStickerSetsOrder' => 'Update sticker sets order',
    'object_updateStickerSetsOrder_param_masks_type_true' => 'Masks?',
    'object_updateStickerSetsOrder_param_order_type_Vector t' => 'Order',
    'object_updateStickerSets' => 'Update sticker sets',
    'object_updateSavedGifs' => 'Update saved gifs',
    'object_updateBotInlineQuery' => 'Update bot inline query',
    'object_updateBotInlineQuery_param_query_id_type_long' => 'Query ID',
    'object_updateBotInlineQuery_param_user_id_type_int' => 'User ID',
    'object_updateBotInlineQuery_param_query_type_string' => 'Query',
    'object_updateBotInlineQuery_param_geo_type_GeoPoint' => 'Geo',
    'object_updateBotInlineQuery_param_offset_type_string' => 'Offset',
    'object_updateBotInlineSend' => 'Update bot inline send',
    'object_updateBotInlineSend_param_user_id_type_int' => 'User ID',
    'object_updateBotInlineSend_param_query_type_string' => 'Query',
    'object_updateBotInlineSend_param_geo_type_GeoPoint' => 'Geo',
    'object_updateBotInlineSend_param_id_type_string' => 'ID',
    'object_updateBotInlineSend_param_msg_id_type_InputBotInlineMessageID' => 'Msg ID',
    'object_updateEditChannelMessage' => 'Update edit channel message',
    'object_updateEditChannelMessage_param_message_type_Message' => 'Message',
    'object_updateEditChannelMessage_param_pts_type_int' => 'Pts',
    'object_updateEditChannelMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateChannelPinnedMessage' => 'Update channel pinned message',
    'object_updateChannelPinnedMessage_param_channel_id_type_int' => 'Channel ID',
    'object_updateChannelPinnedMessage_param_id_type_int' => 'ID',
    'object_updateBotCallbackQuery' => 'Update bot callback query',
    'object_updateBotCallbackQuery_param_query_id_type_long' => 'Query ID',
    'object_updateBotCallbackQuery_param_user_id_type_int' => 'User ID',
    'object_updateBotCallbackQuery_param_peer_type_Peer' => 'Peer',
    'object_updateBotCallbackQuery_param_msg_id_type_int' => 'Msg ID',
    'object_updateBotCallbackQuery_param_chat_instance_type_long' => 'Chat instance',
    'object_updateBotCallbackQuery_param_data_type_bytes' => 'Data',
    'object_updateBotCallbackQuery_param_game_short_name_type_string' => 'Game short name',
    'object_updateEditMessage' => 'Update edit message',
    'object_updateEditMessage_param_message_type_Message' => 'Message',
    'object_updateEditMessage_param_pts_type_int' => 'Pts',
    'object_updateEditMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateInlineBotCallbackQuery' => 'Update inline bot callback query',
    'object_updateInlineBotCallbackQuery_param_query_id_type_long' => 'Query ID',
    'object_updateInlineBotCallbackQuery_param_user_id_type_int' => 'User ID',
    'object_updateInlineBotCallbackQuery_param_msg_id_type_InputBotInlineMessageID' => 'Msg ID',
    'object_updateInlineBotCallbackQuery_param_chat_instance_type_long' => 'Chat instance',
    'object_updateInlineBotCallbackQuery_param_data_type_bytes' => 'Data',
    'object_updateInlineBotCallbackQuery_param_game_short_name_type_string' => 'Game short name',
    'object_updateReadChannelOutbox' => 'Update read channel outbox',
    'object_updateReadChannelOutbox_param_channel_id_type_int' => 'Channel ID',
    'object_updateReadChannelOutbox_param_max_id_type_int' => 'Max ID',
    'object_updateDraftMessage' => 'Update draft message',
    'object_updateDraftMessage_param_peer_type_Peer' => 'Peer',
    'object_updateDraftMessage_param_draft_type_DraftMessage' => 'Draft',
    'object_updateReadFeaturedStickers' => 'Update read featured stickers',
    'object_updateRecentStickers' => 'Update recent stickers',
    'object_updateConfig' => 'Update config',
    'object_updatePtsChanged' => 'Update pts changed',
    'object_updateChannelWebPage' => 'Update channel web page',
    'object_updateChannelWebPage_param_channel_id_type_int' => 'Channel ID',
    'object_updateChannelWebPage_param_webpage_type_WebPage' => 'Webpage',
    'object_updateChannelWebPage_param_pts_type_int' => 'Pts',
    'object_updateChannelWebPage_param_pts_count_type_int' => 'Pts count',
    'object_updateDialogPinned' => 'Update dialog pinned',
    'object_updateDialogPinned_param_pinned_type_true' => 'Pinned?',
    'object_updateDialogPinned_param_peer_type_Peer' => 'Peer',
    'object_updatePinnedDialogs' => 'Update pinned dialogs',
    'object_updatePinnedDialogs_param_order_type_Vector t' => 'Order',
    'object_updateBotWebhookJSON' => 'Update bot webhook json',
    'object_updateBotWebhookJSON_param_data_type_DataJSON' => 'Data',
    'object_updateBotWebhookJSONQuery' => 'Update bot webhook json query',
    'object_updateBotWebhookJSONQuery_param_query_id_type_long' => 'Query ID',
    'object_updateBotWebhookJSONQuery_param_data_type_DataJSON' => 'Data',
    'object_updateBotWebhookJSONQuery_param_timeout_type_int' => 'Timeout',
    'object_updateBotShippingQuery' => 'Update bot shipping query',
    'object_updateBotShippingQuery_param_query_id_type_long' => 'Query ID',
    'object_updateBotShippingQuery_param_user_id_type_int' => 'User ID',
    'object_updateBotShippingQuery_param_payload_type_bytes' => 'Payload',
    'object_updateBotShippingQuery_param_shipping_address_type_PostAddress' => 'Shipping address',
    'object_updateBotPrecheckoutQuery' => 'Update bot precheckout query',
    'object_updateBotPrecheckoutQuery_param_query_id_type_long' => 'Query ID',
    'object_updateBotPrecheckoutQuery_param_user_id_type_int' => 'User ID',
    'object_updateBotPrecheckoutQuery_param_payload_type_bytes' => 'Payload',
    'object_updateBotPrecheckoutQuery_param_info_type_PaymentRequestedInfo' => 'Info',
    'object_updateBotPrecheckoutQuery_param_shipping_option_id_type_string' => 'Shipping option ID',
    'object_updateBotPrecheckoutQuery_param_currency_type_string' => 'Currency',
    'object_updateBotPrecheckoutQuery_param_total_amount_type_long' => 'Total amount',
    'object_updatePhoneCall' => 'Update phone call',
    'object_updatePhoneCall_param_phone_call_type_PhoneCall' => 'Phone call',
    'object_updateLangPackTooLong' => 'Update lang pack too long',
    'object_updateLangPack' => 'Update lang pack',
    'object_updateLangPack_param_difference_type_LangPackDifference' => 'Difference',
    'object_updateFavedStickers' => 'Update faved stickers',
    'object_updateChannelReadMessagesContents' => 'Update channel read messages contents',
    'object_updateChannelReadMessagesContents_param_channel_id_type_int' => 'Channel ID',
    'object_updateChannelReadMessagesContents_param_messages_type_Vector t' => 'Messages',
    'object_updateContactsReset' => 'Update contacts reset',
    'object_updateChannelAvailableMessages' => 'Update channel available messages',
    'object_updateChannelAvailableMessages_param_channel_id_type_int' => 'Channel ID',
    'object_updateChannelAvailableMessages_param_available_min_id_type_int' => 'Available min ID',
    'object_updates.state' => 'State',
    'object_updates.state_param_pts_type_int' => 'Pts',
    'object_updates.state_param_qts_type_int' => 'Qts',
    'object_updates.state_param_date_type_int' => 'Date',
    'object_updates.state_param_seq_type_int' => 'Seq',
    'object_updates.state_param_unread_count_type_int' => 'Unread count',
    'object_updates.differenceEmpty' => 'Empty difference',
    'object_updates.differenceEmpty_param_date_type_int' => 'Date',
    'object_updates.differenceEmpty_param_seq_type_int' => 'Seq',
    'object_updates.difference' => 'Difference',
    'object_updates.difference_param_new_messages_type_Vector t' => 'New messages',
    'object_updates.difference_param_new_encrypted_messages_type_Vector t' => 'New encrypted messages',
    'object_updates.difference_param_other_updates_type_Vector t' => 'Other updates',
    'object_updates.difference_param_chats_type_Vector t' => 'Chats',
    'object_updates.difference_param_users_type_Vector t' => 'Users',
    'object_updates.difference_param_state_type_updates.State' => 'State',
    'object_updates.differenceSlice' => 'Difference slice',
    'object_updates.differenceSlice_param_new_messages_type_Vector t' => 'New messages',
    'object_updates.differenceSlice_param_new_encrypted_messages_type_Vector t' => 'New encrypted messages',
    'object_updates.differenceSlice_param_other_updates_type_Vector t' => 'Other updates',
    'object_updates.differenceSlice_param_chats_type_Vector t' => 'Chats',
    'object_updates.differenceSlice_param_users_type_Vector t' => 'Users',
    'object_updates.differenceSlice_param_intermediate_state_type_updates.State' => 'Intermediate state',
    'object_updates.differenceTooLong' => 'Difference too long',
    'object_updates.differenceTooLong_param_pts_type_int' => 'Pts',
    'object_updatesTooLong' => 'Updates too long',
    'object_updateShortMessage' => 'Update short message',
    'object_updateShortMessage_param_out_type_true' => 'Out?',
    'object_updateShortMessage_param_mentioned_type_true' => 'Mentioned?',
    'object_updateShortMessage_param_media_unread_type_true' => 'Media unread?',
    'object_updateShortMessage_param_silent_type_true' => 'Silent?',
    'object_updateShortMessage_param_id_type_int' => 'ID',
    'object_updateShortMessage_param_user_id_type_int' => 'User ID',
    'object_updateShortMessage_param_message_type_string' => 'Message',
    'object_updateShortMessage_param_pts_type_int' => 'Pts',
    'object_updateShortMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateShortMessage_param_date_type_int' => 'Date',
    'object_updateShortMessage_param_fwd_from_type_MessageFwdHeader' => 'Fwd from',
    'object_updateShortMessage_param_via_bot_id_type_int' => 'Via bot ID',
    'object_updateShortMessage_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
    'object_updateShortMessage_param_entities_type_Vector t' => 'Entities',
    'object_updateShortChatMessage' => 'Update short chat message',
    'object_updateShortChatMessage_param_out_type_true' => 'Out?',
    'object_updateShortChatMessage_param_mentioned_type_true' => 'Mentioned?',
    'object_updateShortChatMessage_param_media_unread_type_true' => 'Media unread?',
    'object_updateShortChatMessage_param_silent_type_true' => 'Silent?',
    'object_updateShortChatMessage_param_id_type_int' => 'ID',
    'object_updateShortChatMessage_param_from_id_type_int' => 'From ID',
    'object_updateShortChatMessage_param_chat_id_type_int' => 'Chat ID',
    'object_updateShortChatMessage_param_message_type_string' => 'Message',
    'object_updateShortChatMessage_param_pts_type_int' => 'Pts',
    'object_updateShortChatMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateShortChatMessage_param_date_type_int' => 'Date',
    'object_updateShortChatMessage_param_fwd_from_type_MessageFwdHeader' => 'Fwd from',
    'object_updateShortChatMessage_param_via_bot_id_type_int' => 'Via bot ID',
    'object_updateShortChatMessage_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
    'object_updateShortChatMessage_param_entities_type_Vector t' => 'Entities',
    'object_updateShort' => 'Update short',
    'object_updateShort_param_update_type_Update' => 'Update',
    'object_updateShort_param_date_type_int' => 'Date',
    'object_updatesCombined' => 'Updates combined',
    'object_updatesCombined_param_updates_type_Vector t' => 'Updates',
    'object_updatesCombined_param_users_type_Vector t' => 'Users',
    'object_updatesCombined_param_chats_type_Vector t' => 'Chats',
    'object_updatesCombined_param_date_type_int' => 'Date',
    'object_updatesCombined_param_seq_start_type_int' => 'Seq start',
    'object_updatesCombined_param_seq_type_int' => 'Seq',
    'object_updates' => 'Updates',
    'object_updates_param_updates_type_Vector t' => 'Updates',
    'object_updates_param_users_type_Vector t' => 'Users',
    'object_updates_param_chats_type_Vector t' => 'Chats',
    'object_updates_param_date_type_int' => 'Date',
    'object_updates_param_seq_type_int' => 'Seq',
    'object_updateShortSentMessage' => 'Update short sent message',
    'object_updateShortSentMessage_param_out_type_true' => 'Out?',
    'object_updateShortSentMessage_param_id_type_int' => 'ID',
    'object_updateShortSentMessage_param_pts_type_int' => 'Pts',
    'object_updateShortSentMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateShortSentMessage_param_date_type_int' => 'Date',
    'object_updateShortSentMessage_param_media_type_MessageMedia' => 'Media',
    'object_updateShortSentMessage_param_entities_type_Vector t' => 'Entities',
    'object_photos.photos' => 'Photos',
    'object_photos.photos_param_photos_type_Vector t' => 'Photos',
    'object_photos.photos_param_users_type_Vector t' => 'Users',
    'object_photos.photosSlice' => 'Photos slice',
    'object_photos.photosSlice_param_count_type_int' => 'Count',
    'object_photos.photosSlice_param_photos_type_Vector t' => 'Photos',
    'object_photos.photosSlice_param_users_type_Vector t' => 'Users',
    'object_photos.photo' => 'Photo',
    'object_photos.photo_param_photo_type_Photo' => 'Photo',
    'object_photos.photo_param_users_type_Vector t' => 'Users',
    'object_upload.file' => 'File',
    'object_upload.file_param_type_type_storage.FileType' => 'Type',
    'object_upload.file_param_mtime_type_int' => 'Mtime',
    'object_upload.file_param_bytes_type_bytes' => 'Bytes',
    'object_upload.fileCdnRedirect' => 'File cdn redirect',
    'object_upload.fileCdnRedirect_param_dc_id_type_int' => 'DC ID',
    'object_upload.fileCdnRedirect_param_file_token_type_bytes' => 'File token',
    'object_upload.fileCdnRedirect_param_encryption_key_type_bytes' => 'Encryption key',
    'object_upload.fileCdnRedirect_param_encryption_iv_type_bytes' => 'Encryption iv',
    'object_upload.fileCdnRedirect_param_cdn_file_hashes_type_Vector t' => 'Cdn file hashes',
    'object_dcOption' => 'DC option',
    'object_dcOption_param_ipv6_type_true' => 'Ipv6?',
    'object_dcOption_param_media_only_type_true' => 'Media only?',
    'object_dcOption_param_tcpo_only_type_true' => 'Tcpo only?',
    'object_dcOption_param_cdn_type_true' => 'Cdn?',
    'object_dcOption_param_static_type_true' => 'Static?',
    'object_dcOption_param_id_type_int' => 'ID',
    'object_dcOption_param_ip_address_type_string' => 'Ip address',
    'object_dcOption_param_port_type_int' => 'Port',
    'object_config' => 'Config',
    'object_config_param_phonecalls_enabled_type_true' => 'Phonecalls enabled?',
    'object_config_param_default_p2p_contacts_type_true' => 'Default p2p contacts?',
    'object_config_param_date_type_int' => 'Date',
    'object_config_param_expires_type_int' => 'Expires',
    'object_config_param_test_mode_type_Bool' => 'Test mode?',
    'object_config_param_this_dc_type_int' => 'This DC',
    'object_config_param_dc_options_type_Vector t' => 'DC options',
    'object_config_param_chat_size_max_type_int' => 'Chat size max',
    'object_config_param_megagroup_size_max_type_int' => 'Megagroup size max',
    'object_config_param_forwarded_count_max_type_int' => 'Forwarded count max',
    'object_config_param_online_update_period_ms_type_int' => 'Online update period ms',
    'object_config_param_offline_blur_timeout_ms_type_int' => 'Offline blur timeout ms',
    'object_config_param_offline_idle_timeout_ms_type_int' => 'Offline IDle timeout ms',
    'object_config_param_online_cloud_timeout_ms_type_int' => 'Online cloud timeout ms',
    'object_config_param_notify_cloud_delay_ms_type_int' => 'Notify cloud delay ms',
    'object_config_param_notify_default_delay_ms_type_int' => 'Notify default delay ms',
    'object_config_param_chat_big_size_type_int' => 'Chat big size',
    'object_config_param_push_chat_period_ms_type_int' => 'Push chat period ms',
    'object_config_param_push_chat_limit_type_int' => 'Push chat limit',
    'object_config_param_saved_gifs_limit_type_int' => 'Saved gifs limit',
    'object_config_param_edit_time_limit_type_int' => 'Edit time limit',
    'object_config_param_rating_e_decay_type_int' => 'Rating e decay',
    'object_config_param_stickers_recent_limit_type_int' => 'Stickers recent limit',
    'object_config_param_stickers_faved_limit_type_int' => 'Stickers faved limit',
    'object_config_param_channels_read_media_period_type_int' => 'Channels read media period',
    'object_config_param_tmp_sessions_type_int' => 'Tmp sessions',
    'object_config_param_pinned_dialogs_count_max_type_int' => 'Pinned dialogs count max',
    'object_config_param_call_receive_timeout_ms_type_int' => 'Call receive timeout ms',
    'object_config_param_call_ring_timeout_ms_type_int' => 'Call ring timeout ms',
    'object_config_param_call_connect_timeout_ms_type_int' => 'Call connect timeout ms',
    'object_config_param_call_packet_timeout_ms_type_int' => 'Call packet timeout ms',
    'object_config_param_me_url_prefix_type_string' => 'Me URL prefix',
    'object_config_param_suggested_lang_code_type_string' => 'Suggested lang code',
    'object_config_param_lang_pack_version_type_int' => 'Lang pack version',
    'object_config_param_disabled_features_type_Vector t' => 'Disabled features',
    'object_nearestDc' => 'Nearest DC',
    'object_nearestDc_param_country_type_string' => 'Country',
    'object_nearestDc_param_this_dc_type_int' => 'This DC',
    'object_nearestDc_param_nearest_dc_type_int' => 'Nearest DC',
    'object_help.appUpdate' => 'App update',
    'object_help.appUpdate_param_id_type_int' => 'ID',
    'object_help.appUpdate_param_critical_type_Bool' => 'Critical?',
    'object_help.appUpdate_param_url_type_string' => 'URL',
    'object_help.appUpdate_param_text_type_string' => 'Text',
    'object_help.noAppUpdate' => 'No app update',
    'object_help.inviteText' => 'Invite text',
    'object_help.inviteText_param_message_type_string' => 'Message',
    'object_encryptedChatEmpty' => 'Empty encrypted chat',
    'object_encryptedChatEmpty_param_id_type_int' => 'ID',
    'object_encryptedChatWaiting' => 'Encrypted chat waiting',
    'object_encryptedChatWaiting_param_id_type_int' => 'ID',
    'object_encryptedChatWaiting_param_access_hash_type_long' => 'Access hash',
    'object_encryptedChatWaiting_param_date_type_int' => 'Date',
    'object_encryptedChatWaiting_param_admin_id_type_int' => 'Admin ID',
    'object_encryptedChatWaiting_param_participant_id_type_int' => 'Participant ID',
    'object_encryptedChatRequested' => 'Encrypted chat requested',
    'object_encryptedChatRequested_param_id_type_int' => 'ID',
    'object_encryptedChatRequested_param_access_hash_type_long' => 'Access hash',
    'object_encryptedChatRequested_param_date_type_int' => 'Date',
    'object_encryptedChatRequested_param_admin_id_type_int' => 'Admin ID',
    'object_encryptedChatRequested_param_participant_id_type_int' => 'Participant ID',
    'object_encryptedChatRequested_param_g_a_type_bytes' => 'G a',
    'object_encryptedChat' => 'Encrypted chat',
    'object_encryptedChat_param_id_type_int' => 'ID',
    'object_encryptedChat_param_access_hash_type_long' => 'Access hash',
    'object_encryptedChat_param_date_type_int' => 'Date',
    'object_encryptedChat_param_admin_id_type_int' => 'Admin ID',
    'object_encryptedChat_param_participant_id_type_int' => 'Participant ID',
    'object_encryptedChat_param_g_a_or_b_type_bytes' => 'G a or b',
    'object_encryptedChat_param_key_fingerprint_type_long' => 'Key fingerprint',
    'object_encryptedChatDiscarded' => 'Encrypted chat discarded',
    'object_encryptedChatDiscarded_param_id_type_int' => 'ID',
    'object_inputEncryptedChat' => 'Encrypted chat',
    'object_inputEncryptedChat_param_chat_id_type_int' => 'Chat ID',
    'object_inputEncryptedChat_param_access_hash_type_long' => 'Access hash',
    'object_encryptedFileEmpty' => 'Empty encrypted file',
    'object_encryptedFile' => 'Encrypted file',
    'object_encryptedFile_param_id_type_long' => 'ID',
    'object_encryptedFile_param_access_hash_type_long' => 'Access hash',
    'object_encryptedFile_param_size_type_int' => 'Size',
    'object_encryptedFile_param_dc_id_type_int' => 'DC ID',
    'object_encryptedFile_param_key_fingerprint_type_int' => 'Key fingerprint',
    'object_inputEncryptedFileEmpty' => 'Empty input encrypted file',
    'object_inputEncryptedFileUploaded' => 'Encrypted file uploaded',
    'object_inputEncryptedFileUploaded_param_id_type_long' => 'ID',
    'object_inputEncryptedFileUploaded_param_parts_type_int' => 'Parts',
    'object_inputEncryptedFileUploaded_param_md5_checksum_type_string' => 'Md5 checksum',
    'object_inputEncryptedFileUploaded_param_key_fingerprint_type_int' => 'Key fingerprint',
    'object_inputEncryptedFile' => 'Encrypted file',
    'object_inputEncryptedFile_param_id_type_long' => 'ID',
    'object_inputEncryptedFile_param_access_hash_type_long' => 'Access hash',
    'object_inputEncryptedFileBigUploaded' => 'Encrypted file big uploaded',
    'object_inputEncryptedFileBigUploaded_param_id_type_long' => 'ID',
    'object_inputEncryptedFileBigUploaded_param_parts_type_int' => 'Parts',
    'object_inputEncryptedFileBigUploaded_param_key_fingerprint_type_int' => 'Key fingerprint',
    'object_encryptedMessage' => 'Encrypted message',
    'object_encryptedMessage_param_chat_id_type_int' => 'Chat ID',
    'object_encryptedMessage_param_date_type_int' => 'Date',
    'object_encryptedMessage_param_decrypted_message_type_DecryptedMessage' => 'Decrypted message',
    'object_encryptedMessage_param_file_type_EncryptedFile' => 'File',
    'object_encryptedMessageService' => 'Encrypted message service',
    'object_encryptedMessageService_param_chat_id_type_int' => 'Chat ID',
    'object_encryptedMessageService_param_date_type_int' => 'Date',
    'object_encryptedMessageService_param_decrypted_message_type_DecryptedMessage' => 'Decrypted message',
    'object_messages.dhConfigNotModified' => 'Dh config not modified',
    'object_messages.dhConfigNotModified_param_random_type_bytes' => 'Random',
    'object_messages.dhConfig' => 'Dh config',
    'object_messages.dhConfig_param_g_type_int' => 'G',
    'object_messages.dhConfig_param_p_type_bytes' => 'P',
    'object_messages.dhConfig_param_version_type_int' => 'Version',
    'object_messages.dhConfig_param_random_type_bytes' => 'Random',
    'object_messages.sentEncryptedMessage' => 'Sent encrypted message',
    'object_messages.sentEncryptedMessage_param_date_type_int' => 'Date',
    'object_messages.sentEncryptedFile' => 'Sent encrypted file',
    'object_messages.sentEncryptedFile_param_date_type_int' => 'Date',
    'object_messages.sentEncryptedFile_param_file_type_EncryptedFile' => 'File',
    'object_inputDocumentEmpty' => 'Empty input document',
    'object_inputDocument' => 'Document',
    'object_inputDocument_param_id_type_long' => 'ID',
    'object_inputDocument_param_access_hash_type_long' => 'Access hash',
    'object_documentEmpty' => 'Empty document',
    'object_documentEmpty_param_id_type_long' => 'ID',
    'object_document' => 'Document',
    'object_document_param_id_type_long' => 'ID',
    'object_document_param_access_hash_type_long' => 'Access hash',
    'object_document_param_date_type_int' => 'Date',
    'object_document_param_mime_type_type_string' => 'Mime type',
    'object_document_param_size_type_int' => 'Size',
    'object_document_param_thumb_type_PhotoSize' => 'Thumbnail',
    'object_document_param_dc_id_type_int' => 'DC ID',
    'object_document_param_version_type_int' => 'Version',
    'object_document_param_attributes_type_Vector t' => 'Attributes',
    'object_help.support' => 'Support',
    'object_help.support_param_phone_number_type_string' => 'Phone number',
    'object_help.support_param_user_type_User' => 'User',
    'object_notifyPeer' => 'Notify peer',
    'object_notifyPeer_param_peer_type_Peer' => 'Peer',
    'object_notifyUsers' => 'Notify users',
    'object_notifyChats' => 'Notify chats',
    'object_notifyAll' => 'Notify all',
    'object_sendMessageTypingAction' => 'Send message typing action',
    'object_sendMessageCancelAction' => 'Send message cancel action',
    'object_sendMessageRecordVideoAction' => 'Send message record video action',
    'object_sendMessageUploadVideoAction' => 'Send message upload video action',
    'object_sendMessageUploadVideoAction_param_progress_type_int' => 'Progress',
    'object_sendMessageRecordAudioAction' => 'Send message record audio action',
    'object_sendMessageUploadAudioAction' => 'Send message upload audio action',
    'object_sendMessageUploadAudioAction_param_progress_type_int' => 'Progress',
    'object_sendMessageUploadPhotoAction' => 'Send message upload photo action',
    'object_sendMessageUploadPhotoAction_param_progress_type_int' => 'Progress',
    'object_sendMessageUploadDocumentAction' => 'Send message upload document action',
    'object_sendMessageUploadDocumentAction_param_progress_type_int' => 'Progress',
    'object_sendMessageGeoLocationAction' => 'Send message geo location action',
    'object_sendMessageChooseContactAction' => 'Send message choose contact action',
    'object_sendMessageGamePlayAction' => 'Send message game play action',
    'object_sendMessageRecordRoundAction' => 'Send message record round action',
    'object_sendMessageUploadRoundAction' => 'Send message upload round action',
    'object_sendMessageUploadRoundAction_param_progress_type_int' => 'Progress',
    'object_contacts.found' => 'Found',
    'object_contacts.found_param_my_results_type_Vector t' => 'My results',
    'object_contacts.found_param_results_type_Vector t' => 'Results',
    'object_contacts.found_param_chats_type_Vector t' => 'Chats',
    'object_contacts.found_param_users_type_Vector t' => 'Users',
    'object_inputPrivacyKeyStatusTimestamp' => 'Privacy key status timestamp',
    'object_inputPrivacyKeyChatInvite' => 'Privacy key chat invite',
    'object_inputPrivacyKeyPhoneCall' => 'Privacy key phone call',
    'object_privacyKeyStatusTimestamp' => 'Privacy key status timestamp',
    'object_privacyKeyPhoneCall' => 'Privacy key phone call',
    'object_inputPrivacyValueAllowContacts' => 'Privacy value allow contacts',
    'object_inputPrivacyValueAllowAll' => 'Privacy value allow all',
    'object_inputPrivacyValueAllowUsers' => 'Privacy value allow users',
    'object_inputPrivacyValueAllowUsers_param_users_type_Vector t' => 'Users',
    'object_inputPrivacyValueDisallowContacts' => 'Privacy value disallow contacts',
    'object_inputPrivacyValueDisallowAll' => 'Privacy value disallow all',
    'object_inputPrivacyValueDisallowUsers' => 'Privacy value disallow users',
    'object_inputPrivacyValueDisallowUsers_param_users_type_Vector t' => 'Users',
    'object_privacyValueAllowContacts' => 'Privacy value allow contacts',
    'object_privacyValueAllowAll' => 'Privacy value allow all',
    'object_privacyValueAllowUsers' => 'Privacy value allow users',
    'object_privacyValueAllowUsers_param_users_type_Vector t' => 'Users',
    'object_privacyValueDisallowContacts' => 'Privacy value disallow contacts',
    'object_privacyValueDisallowAll' => 'Privacy value disallow all',
    'object_privacyValueDisallowUsers' => 'Privacy value disallow users',
    'object_privacyValueDisallowUsers_param_users_type_Vector t' => 'Users',
    'object_account.privacyRules' => 'Privacy rules',
    'object_account.privacyRules_param_rules_type_Vector t' => 'Rules',
    'object_account.privacyRules_param_users_type_Vector t' => 'Users',
    'object_accountDaysTTL' => 'Account TTL in days',
    'object_accountDaysTTL_param_days_type_int' => 'Days',
    'object_documentAttributeImageSize' => 'Document attribute image size',
    'object_documentAttributeImageSize_param_w_type_int' => 'Width',
    'object_documentAttributeImageSize_param_h_type_int' => 'Height',
    'object_documentAttributeAnimated' => 'Document attribute animated',
    'object_documentAttributeSticker' => 'Document attribute sticker',
    'object_documentAttributeSticker_param_mask_type_true' => 'Mask?',
    'object_documentAttributeSticker_param_alt_type_string' => 'Alt',
    'object_documentAttributeSticker_param_stickerset_type_InputStickerSet' => 'Stickerset',
    'object_documentAttributeSticker_param_mask_coords_type_MaskCoords' => 'Mask coords',
    'object_documentAttributeVideo' => 'Document attribute video',
    'object_documentAttributeVideo_param_round_message_type_true' => 'Round message?',
    'object_documentAttributeVideo_param_supports_streaming_type_true' => 'Supports streaming?',
    'object_documentAttributeVideo_param_duration_type_int' => 'Duration',
    'object_documentAttributeVideo_param_w_type_int' => 'Width',
    'object_documentAttributeVideo_param_h_type_int' => 'Height',
    'object_documentAttributeAudio' => 'Document attribute audio',
    'object_documentAttributeAudio_param_voice_type_true' => 'Voice?',
    'object_documentAttributeAudio_param_duration_type_int' => 'Duration',
    'object_documentAttributeAudio_param_title_type_string' => 'Title',
    'object_documentAttributeAudio_param_performer_type_string' => 'Performer',
    'object_documentAttributeAudio_param_waveform_type_bytes' => 'Waveform',
    'object_documentAttributeFilename' => 'Document attribute filename',
    'object_documentAttributeFilename_param_file_name_type_string' => 'File name',
    'object_documentAttributeHasStickers' => 'Document attribute has stickers',
    'object_messages.stickersNotModified' => 'Stickers not modified',
    'object_messages.stickers' => 'Stickers',
    'object_messages.stickers_param_hash_type_string' => 'Hash',
    'object_messages.stickers_param_stickers_type_Vector t' => 'Stickers',
    'object_stickerPack' => 'Sticker pack',
    'object_stickerPack_param_emoticon_type_string' => 'Emoticon',
    'object_stickerPack_param_documents_type_Vector t' => 'Documents',
    'object_messages.allStickersNotModified' => 'All stickers not modified',
    'object_messages.allStickers' => 'All stickers',
    'object_messages.allStickers_param_hash_type_int' => 'Hash',
    'object_messages.allStickers_param_sets_type_Vector t' => 'Sets',
    'object_disabledFeature' => 'Disabled feature',
    'object_disabledFeature_param_feature_type_string' => 'Feature',
    'object_disabledFeature_param_description_type_string' => 'Description',
    'object_messages.affectedMessages' => 'Affected messages',
    'object_messages.affectedMessages_param_pts_type_int' => 'Pts',
    'object_messages.affectedMessages_param_pts_count_type_int' => 'Pts count',
    'object_contactLinkUnknown' => 'Contact link unknown',
    'object_contactLinkNone' => 'Contact link none',
    'object_contactLinkHasPhone' => 'Contact link has phone',
    'object_contactLinkContact' => 'Contact link contact',
    'object_webPageEmpty' => 'Empty web page',
    'object_webPageEmpty_param_id_type_long' => 'ID',
    'object_webPagePending' => 'Web page pending',
    'object_webPagePending_param_id_type_long' => 'ID',
    'object_webPagePending_param_date_type_int' => 'Date',
    'object_webPage' => 'Web page',
    'object_webPage_param_id_type_long' => 'ID',
    'object_webPage_param_url_type_string' => 'URL',
    'object_webPage_param_display_url_type_string' => 'Display URL',
    'object_webPage_param_hash_type_int' => 'Hash',
    'object_webPage_param_type_type_string' => 'Type',
    'object_webPage_param_site_name_type_string' => 'Site name',
    'object_webPage_param_title_type_string' => 'Title',
    'object_webPage_param_description_type_string' => 'Description',
    'object_webPage_param_photo_type_Photo' => 'Photo',
    'object_webPage_param_embed_url_type_string' => 'Embed URL',
    'object_webPage_param_embed_type_type_string' => 'Embed type',
    'object_webPage_param_embed_width_type_int' => 'Embed width',
    'object_webPage_param_embed_height_type_int' => 'Embed height',
    'object_webPage_param_duration_type_int' => 'Duration',
    'object_webPage_param_author_type_string' => 'Author',
    'object_webPage_param_document_type_Document' => 'Document',
    'object_webPage_param_cached_page_type_Page' => 'Cached page',
    'object_webPageNotModified' => 'Web page not modified',
    'object_authorization' => 'Authorization',
    'object_authorization_param_hash_type_long' => 'Hash',
    'object_authorization_param_device_model_type_string' => 'Device model',
    'object_authorization_param_platform_type_string' => 'Platform',
    'object_authorization_param_system_version_type_string' => 'System version',
    'object_authorization_param_api_id_type_int' => 'Api ID',
    'object_authorization_param_app_name_type_string' => 'App name',
    'object_authorization_param_app_version_type_string' => 'App version',
    'object_authorization_param_date_created_type_int' => 'Date created',
    'object_authorization_param_date_active_type_int' => 'Date active',
    'object_authorization_param_ip_type_string' => 'Ip',
    'object_authorization_param_country_type_string' => 'Country',
    'object_authorization_param_region_type_string' => 'Region',
    'object_account.authorizations' => 'Authorized clients for this account',
    'object_account.authorizations_param_authorizations_type_Vector t' => 'Authorizations',
    'object_account.noPassword' => 'No password',
    'object_account.noPassword_param_new_salt_type_bytes' => 'New salt',
    'object_account.noPassword_param_email_unconfirmed_pattern_type_string' => 'Email unconfirmed pattern',
    'object_account.password' => 'Password',
    'object_account.password_param_current_salt_type_bytes' => 'Current salt',
    'object_account.password_param_new_salt_type_bytes' => 'New salt',
    'object_account.password_param_hint_type_string' => 'Hint',
    'object_account.password_param_has_recovery_type_Bool' => 'Has recovery?',
    'object_account.password_param_email_unconfirmed_pattern_type_string' => 'Email unconfirmed pattern',
    'object_account.passwordSettings' => 'Password settings',
    'object_account.passwordSettings_param_email_type_string' => 'Email',
    'object_account.passwordInputSettings' => '2FA password settings',
    'object_account.passwordInputSettings_param_new_salt_type_bytes' => '`$new_salt = $MadelineProto->account->getPassword()[\'new_salt\'].$MadelineProto->random(8);`',
    'object_account.passwordInputSettings_param_new_password_hash_type_bytes' => '`hash(\'sha256\', $new_salt.$new_password.$new_salt, true)`',
    'object_account.passwordInputSettings_param_hint_type_string' => 'Hint',
    'object_account.passwordInputSettings_param_email_type_string' => 'Email',
    'object_auth.passwordRecovery' => 'Password recovery',
    'object_auth.passwordRecovery_param_email_pattern_type_string' => 'Email pattern',
    'object_receivedNotifyMessage' => 'Received notify message',
    'object_receivedNotifyMessage_param_id_type_int' => 'ID',
    'object_chatInviteEmpty' => 'Empty chat invite',
    'object_chatInviteExported' => 'Exported chat invite',
    'object_chatInviteExported_param_link_type_string' => 'Link',
    'object_chatInviteAlready' => 'Invite of a chat of which I am already member ',
    'object_chatInviteAlready_param_chat_type_Chat' => 'Chat',
    'object_chatInvite' => 'Chat invite',
    'object_chatInvite_param_channel_type_true' => 'Channel?',
    'object_chatInvite_param_broadcast_type_true' => 'Broadcast?',
    'object_chatInvite_param_public_type_true' => 'Public?',
    'object_chatInvite_param_megagroup_type_true' => 'Megagroup?',
    'object_chatInvite_param_title_type_string' => 'Title',
    'object_chatInvite_param_photo_type_ChatPhoto' => 'Photo',
    'object_chatInvite_param_participants_count_type_int' => 'Participants count',
    'object_chatInvite_param_participants_type_Vector t' => 'Participants',
    'object_inputStickerSetEmpty' => 'Empty input sticker set',
    'object_inputStickerSetID' => 'Sticker set ID',
    'object_inputStickerSetID_param_id_type_long' => 'ID',
    'object_inputStickerSetID_param_access_hash_type_long' => 'Access hash',
    'object_inputStickerSetShortName' => 'Sticker set short name',
    'object_inputStickerSetShortName_param_short_name_type_string' => 'Short name',
    'object_stickerSet' => 'Sticker set',
    'object_stickerSet_param_installed_type_true' => 'Installed?',
    'object_stickerSet_param_archived_type_true' => 'Archived?',
    'object_stickerSet_param_official_type_true' => 'Official?',
    'object_stickerSet_param_masks_type_true' => 'Masks?',
    'object_stickerSet_param_id_type_long' => 'ID',
    'object_stickerSet_param_access_hash_type_long' => 'Access hash',
    'object_stickerSet_param_title_type_string' => 'Title',
    'object_stickerSet_param_short_name_type_string' => 'Short name',
    'object_stickerSet_param_count_type_int' => 'Count',
    'object_stickerSet_param_hash_type_int' => 'Hash',
    'object_messages.stickerSet' => 'Sticker set',
    'object_messages.stickerSet_param_set_type_StickerSet' => 'Set',
    'object_messages.stickerSet_param_packs_type_Vector t' => 'Packs',
    'object_messages.stickerSet_param_documents_type_Vector t' => 'Documents',
    'object_botInfo' => 'Bot info',
    'object_botInfo_param_user_id_type_int' => 'User ID',
    'object_botInfo_param_description_type_string' => 'Description',
    'object_botInfo_param_commands_type_Vector t' => 'Commands',
    'object_keyboardButton' => 'Keyboard button',
    'object_keyboardButton_param_text_type_string' => 'Text',
    'object_keyboardButtonUrl' => 'Keyboard button URL',
    'object_keyboardButtonUrl_param_text_type_string' => 'Text',
    'object_keyboardButtonUrl_param_url_type_string' => 'URL',
    'object_keyboardButtonCallback' => 'Keyboard button callback',
    'object_keyboardButtonCallback_param_text_type_string' => 'Text',
    'object_keyboardButtonCallback_param_data_type_bytes' => 'Data',
    'object_keyboardButtonRequestPhone' => 'Keyboard button request phone',
    'object_keyboardButtonRequestPhone_param_text_type_string' => 'Text',
    'object_keyboardButtonRequestGeoLocation' => 'Keyboard button request geo location',
    'object_keyboardButtonRequestGeoLocation_param_text_type_string' => 'Text',
    'object_keyboardButtonSwitchInline' => 'Keyboard button switch inline',
    'object_keyboardButtonSwitchInline_param_same_peer_type_true' => 'Same peer?',
    'object_keyboardButtonSwitchInline_param_text_type_string' => 'Text',
    'object_keyboardButtonSwitchInline_param_query_type_string' => 'Query',
    'object_keyboardButtonGame' => 'Keyboard button game',
    'object_keyboardButtonGame_param_text_type_string' => 'Text',
    'object_keyboardButtonBuy' => 'Keyboard button buy',
    'object_keyboardButtonBuy_param_text_type_string' => 'Text',
    'object_keyboardButtonRow' => 'Keyboard button row',
    'object_keyboardButtonRow_param_buttons_type_Vector t' => 'Buttons',
    'object_replyKeyboardHide' => 'Reply keyboard hide',
    'object_replyKeyboardHide_param_selective_type_true' => 'Selective?',
    'object_replyKeyboardForceReply' => 'Reply keyboard force reply',
    'object_replyKeyboardForceReply_param_single_use_type_true' => 'Single use?',
    'object_replyKeyboardForceReply_param_selective_type_true' => 'Selective?',
    'object_replyKeyboardMarkup' => 'Reply keyboard markup',
    'object_replyKeyboardMarkup_param_resize_type_true' => 'Resize?',
    'object_replyKeyboardMarkup_param_single_use_type_true' => 'Single use?',
    'object_replyKeyboardMarkup_param_selective_type_true' => 'Selective?',
    'object_replyKeyboardMarkup_param_rows_type_Vector t' => 'Rows',
    'object_replyInlineMarkup' => 'Reply inline markup',
    'object_replyInlineMarkup_param_rows_type_Vector t' => 'Rows',
    'object_messageEntityUnknown' => 'Message entity unknown',
    'object_messageEntityUnknown_param_offset_type_int' => 'Offset',
    'object_messageEntityUnknown_param_length_type_int' => 'Length',
    'object_messageEntityMention' => 'Message entity mention',
    'object_messageEntityMention_param_offset_type_int' => 'Offset',
    'object_messageEntityMention_param_length_type_int' => 'Length',
    'object_messageEntityHashtag' => 'Message entity hashtag',
    'object_messageEntityHashtag_param_offset_type_int' => 'Offset',
    'object_messageEntityHashtag_param_length_type_int' => 'Length',
    'object_messageEntityBotCommand' => 'Message entity bot command',
    'object_messageEntityBotCommand_param_offset_type_int' => 'Offset',
    'object_messageEntityBotCommand_param_length_type_int' => 'Length',
    'object_messageEntityUrl' => 'Message entity URL',
    'object_messageEntityUrl_param_offset_type_int' => 'Offset',
    'object_messageEntityUrl_param_length_type_int' => 'Length',
    'object_messageEntityEmail' => 'Message entity email',
    'object_messageEntityEmail_param_offset_type_int' => 'Offset',
    'object_messageEntityEmail_param_length_type_int' => 'Length',
    'object_messageEntityBold' => 'Message entity bold',
    'object_messageEntityBold_param_offset_type_int' => 'Offset',
    'object_messageEntityBold_param_length_type_int' => 'Length',
    'object_messageEntityItalic' => 'Message entity italic',
    'object_messageEntityItalic_param_offset_type_int' => 'Offset',
    'object_messageEntityItalic_param_length_type_int' => 'Length',
    'object_messageEntityCode' => 'Message entity code',
    'object_messageEntityCode_param_offset_type_int' => 'Offset',
    'object_messageEntityCode_param_length_type_int' => 'Length',
    'object_messageEntityPre' => 'Message entity pre',
    'object_messageEntityPre_param_offset_type_int' => 'Offset',
    'object_messageEntityPre_param_length_type_int' => 'Length',
    'object_messageEntityPre_param_language_type_string' => 'Language',
    'object_messageEntityTextUrl' => 'Message entity text URL',
    'object_messageEntityTextUrl_param_offset_type_int' => 'Offset',
    'object_messageEntityTextUrl_param_length_type_int' => 'Length',
    'object_messageEntityTextUrl_param_url_type_string' => 'URL',
    'object_messageEntityMentionName' => 'Message entity mention name',
    'object_messageEntityMentionName_param_offset_type_int' => 'Offset',
    'object_messageEntityMentionName_param_length_type_int' => 'Length',
    'object_messageEntityMentionName_param_user_id_type_int' => 'User ID',
    'object_inputMessageEntityMentionName' => 'Message entity mention name',
    'object_inputMessageEntityMentionName_param_offset_type_int' => 'Offset',
    'object_inputMessageEntityMentionName_param_length_type_int' => 'Length',
    'object_inputMessageEntityMentionName_param_user_id_type_InputUser' => 'User ID',
    'object_inputChannelEmpty' => 'Empty input channel',
    'object_inputChannel' => 'Channel',
    'object_inputChannel_param_channel_id_type_int' => 'Channel ID',
    'object_inputChannel_param_access_hash_type_long' => 'Access hash',
    'object_contacts.resolvedPeer' => 'Resolved peer',
    'object_contacts.resolvedPeer_param_peer_type_Peer' => 'Peer',
    'object_contacts.resolvedPeer_param_chats_type_Vector t' => 'Chats',
    'object_contacts.resolvedPeer_param_users_type_Vector t' => 'Users',
    'object_messageRange' => 'Message range',
    'object_messageRange_param_min_id_type_int' => 'Min ID',
    'object_messageRange_param_max_id_type_int' => 'Max ID',
    'object_updates.channelDifferenceEmpty' => 'Empty channel difference',
    'object_updates.channelDifferenceEmpty_param_final_type_true' => 'Final?',
    'object_updates.channelDifferenceEmpty_param_pts_type_int' => 'Pts',
    'object_updates.channelDifferenceEmpty_param_timeout_type_int' => 'Timeout',
    'object_updates.channelDifferenceTooLong' => 'Channel difference too long',
    'object_updates.channelDifferenceTooLong_param_final_type_true' => 'Final?',
    'object_updates.channelDifferenceTooLong_param_pts_type_int' => 'Pts',
    'object_updates.channelDifferenceTooLong_param_timeout_type_int' => 'Timeout',
    'object_updates.channelDifferenceTooLong_param_top_message_type_int' => 'Top message',
    'object_updates.channelDifferenceTooLong_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
    'object_updates.channelDifferenceTooLong_param_read_outbox_max_id_type_int' => 'Read outbox max ID',
    'object_updates.channelDifferenceTooLong_param_unread_count_type_int' => 'Unread count',
    'object_updates.channelDifferenceTooLong_param_unread_mentions_count_type_int' => 'Unread mentions count',
    'object_updates.channelDifferenceTooLong_param_messages_type_Vector t' => 'Messages',
    'object_updates.channelDifferenceTooLong_param_chats_type_Vector t' => 'Chats',
    'object_updates.channelDifferenceTooLong_param_users_type_Vector t' => 'Users',
    'object_updates.channelDifference' => 'Channel difference',
    'object_updates.channelDifference_param_final_type_true' => 'Final?',
    'object_updates.channelDifference_param_pts_type_int' => 'Pts',
    'object_updates.channelDifference_param_timeout_type_int' => 'Timeout',
    'object_updates.channelDifference_param_new_messages_type_Vector t' => 'New messages',
    'object_updates.channelDifference_param_other_updates_type_Vector t' => 'Other updates',
    'object_updates.channelDifference_param_chats_type_Vector t' => 'Chats',
    'object_updates.channelDifference_param_users_type_Vector t' => 'Users',
    'object_channelMessagesFilterEmpty' => 'Empty channel messages filter',
    'object_channelMessagesFilter' => 'Channel messages filter',
    'object_channelMessagesFilter_param_exclude_new_messages_type_true' => 'Exclude new messages?',
    'object_channelMessagesFilter_param_ranges_type_Vector t' => 'Ranges',
    'object_channelParticipant' => 'Channel participant',
    'object_channelParticipant_param_user_id_type_int' => 'User ID',
    'object_channelParticipant_param_date_type_int' => 'Date',
    'object_channelParticipantSelf' => 'Channel participant self',
    'object_channelParticipantSelf_param_user_id_type_int' => 'User ID',
    'object_channelParticipantSelf_param_inviter_id_type_int' => 'Inviter ID',
    'object_channelParticipantSelf_param_date_type_int' => 'Date',
    'object_channelParticipantCreator' => 'Channel participant creator',
    'object_channelParticipantCreator_param_user_id_type_int' => 'User ID',
    'object_channelParticipantAdmin' => 'Channel participant admin',
    'object_channelParticipantAdmin_param_can_edit_type_true' => 'Can edit?',
    'object_channelParticipantAdmin_param_user_id_type_int' => 'User ID',
    'object_channelParticipantAdmin_param_inviter_id_type_int' => 'Inviter ID',
    'object_channelParticipantAdmin_param_promoted_by_type_int' => 'Promoted by',
    'object_channelParticipantAdmin_param_date_type_int' => 'Date',
    'object_channelParticipantAdmin_param_admin_rights_type_ChannelAdminRights' => 'Admin rights',
    'object_channelParticipantBanned' => 'Channel participant banned',
    'object_channelParticipantBanned_param_left_type_true' => 'Left?',
    'object_channelParticipantBanned_param_user_id_type_int' => 'User ID',
    'object_channelParticipantBanned_param_kicked_by_type_int' => 'Kicked by',
    'object_channelParticipantBanned_param_date_type_int' => 'Date',
    'object_channelParticipantBanned_param_banned_rights_type_ChannelBannedRights' => 'Banned rights',
    'object_channelParticipantsRecent' => 'Channel participants recent',
    'object_channelParticipantsAdmins' => 'Channel participants admins',
    'object_channelParticipantsKicked' => 'Channel participants kicked',
    'object_channelParticipantsKicked_param_q_type_string' => 'Query',
    'object_channelParticipantsBots' => 'Channel participants bots',
    'object_channelParticipantsBanned' => 'Channel participants banned',
    'object_channelParticipantsBanned_param_q_type_string' => 'Query',
    'object_channelParticipantsSearch' => 'Channel participants search',
    'object_channelParticipantsSearch_param_q_type_string' => 'Query',
    'object_channels.channelParticipants' => 'Channel participants',
    'object_channels.channelParticipants_param_count_type_int' => 'Count',
    'object_channels.channelParticipants_param_participants_type_Vector t' => 'Participants',
    'object_channels.channelParticipants_param_users_type_Vector t' => 'Users',
    'object_channels.channelParticipantsNotModified' => 'Channel participants not modified',
    'object_channels.channelParticipant' => 'Channel participant',
    'object_channels.channelParticipant_param_participant_type_ChannelParticipant' => 'Participant',
    'object_channels.channelParticipant_param_users_type_Vector t' => 'Users',
    'object_help.termsOfService' => 'Terms of service',
    'object_help.termsOfService_param_text_type_string' => 'Text',
    'object_foundGif' => 'Found gif',
    'object_foundGif_param_url_type_string' => 'URL',
    'object_foundGif_param_thumb_url_type_string' => 'Thumbnail URL',
    'object_foundGif_param_content_url_type_string' => 'Content URL',
    'object_foundGif_param_content_type_type_string' => 'Content type',
    'object_foundGif_param_w_type_int' => 'Width',
    'object_foundGif_param_h_type_int' => 'Height',
    'object_foundGifCached' => 'Found gif cached',
    'object_foundGifCached_param_url_type_string' => 'URL',
    'object_foundGifCached_param_photo_type_Photo' => 'Photo',
    'object_foundGifCached_param_document_type_Document' => 'Document',
    'object_messages.foundGifs' => 'Found gifs',
    'object_messages.foundGifs_param_next_offset_type_int' => 'Next offset',
    'object_messages.foundGifs_param_results_type_Vector t' => 'Results',
    'object_messages.savedGifsNotModified' => 'Saved gifs not modified',
    'object_messages.savedGifs' => 'Saved gifs',
    'object_messages.savedGifs_param_hash_type_int' => 'Hash',
    'object_messages.savedGifs_param_gifs_type_Vector t' => 'Gifs',
    'object_inputBotInlineMessageMediaAuto' => 'Bot inline message media auto',
    'object_inputBotInlineMessageMediaAuto_param_message_type_string' => 'Message',
    'object_inputBotInlineMessageMediaAuto_param_entities_type_Vector t' => 'Entities',
    'object_inputBotInlineMessageMediaAuto_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_inputBotInlineMessageText' => 'Bot inline message text',
    'object_inputBotInlineMessageText_param_no_webpage_type_true' => 'No webpage?',
    'object_inputBotInlineMessageText_param_message_type_string' => 'Message',
    'object_inputBotInlineMessageText_param_entities_type_Vector t' => 'Entities',
    'object_inputBotInlineMessageText_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_inputBotInlineMessageMediaGeo' => 'Bot inline message media geo',
    'object_inputBotInlineMessageMediaGeo_param_geo_point_type_InputGeoPoint' => 'Geo point',
    'object_inputBotInlineMessageMediaGeo_param_period_type_int' => 'Period',
    'object_inputBotInlineMessageMediaGeo_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_inputBotInlineMessageMediaVenue' => 'Bot inline message media venue',
    'object_inputBotInlineMessageMediaVenue_param_geo_point_type_InputGeoPoint' => 'Geo point',
    'object_inputBotInlineMessageMediaVenue_param_title_type_string' => 'Title',
    'object_inputBotInlineMessageMediaVenue_param_address_type_string' => 'Address',
    'object_inputBotInlineMessageMediaVenue_param_provider_type_string' => 'Provider',
    'object_inputBotInlineMessageMediaVenue_param_venue_id_type_string' => 'Venue ID',
    'object_inputBotInlineMessageMediaVenue_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_inputBotInlineMessageMediaContact' => 'Bot inline message media contact',
    'object_inputBotInlineMessageMediaContact_param_phone_number_type_string' => 'Phone number',
    'object_inputBotInlineMessageMediaContact_param_first_name_type_string' => 'First name',
    'object_inputBotInlineMessageMediaContact_param_last_name_type_string' => 'Last name',
    'object_inputBotInlineMessageMediaContact_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_inputBotInlineMessageGame' => 'Bot inline message game',
    'object_inputBotInlineMessageGame_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_inputBotInlineResult' => 'Bot inline result',
    'object_inputBotInlineResult_param_id_type_string' => 'ID',
    'object_inputBotInlineResult_param_type_type_string' => 'Type',
    'object_inputBotInlineResult_param_title_type_string' => 'Title',
    'object_inputBotInlineResult_param_description_type_string' => 'Description',
    'object_inputBotInlineResult_param_url_type_string' => 'URL',
    'object_inputBotInlineResult_param_thumb_url_type_string' => 'Thumbnail URL',
    'object_inputBotInlineResult_param_content_url_type_string' => 'Content URL',
    'object_inputBotInlineResult_param_content_type_type_string' => 'Content type',
    'object_inputBotInlineResult_param_w_type_int' => 'Width',
    'object_inputBotInlineResult_param_h_type_int' => 'Height',
    'object_inputBotInlineResult_param_duration_type_int' => 'Duration',
    'object_inputBotInlineResult_param_send_message_type_InputBotInlineMessage' => 'Message to send',
    'object_inputBotInlineResultPhoto' => 'Bot inline result photo',
    'object_inputBotInlineResultPhoto_param_id_type_string' => 'ID',
    'object_inputBotInlineResultPhoto_param_type_type_string' => 'Type',
    'object_inputBotInlineResultPhoto_param_photo_type_InputPhoto' => 'Photo',
    'object_inputBotInlineResultPhoto_param_send_message_type_InputBotInlineMessage' => 'Message to send',
    'object_inputBotInlineResultDocument' => 'Bot inline result document',
    'object_inputBotInlineResultDocument_param_id_type_string' => 'ID',
    'object_inputBotInlineResultDocument_param_type_type_string' => 'Type',
    'object_inputBotInlineResultDocument_param_title_type_string' => 'Title',
    'object_inputBotInlineResultDocument_param_description_type_string' => 'Description',
    'object_inputBotInlineResultDocument_param_document_type_InputDocument' => 'Document',
    'object_inputBotInlineResultDocument_param_send_message_type_InputBotInlineMessage' => 'Message to send',
    'object_inputBotInlineResultGame' => 'Bot inline result game',
    'object_inputBotInlineResultGame_param_id_type_string' => 'ID',
    'object_inputBotInlineResultGame_param_short_name_type_string' => 'Short name',
    'object_inputBotInlineResultGame_param_send_message_type_InputBotInlineMessage' => 'Message to send',
    'object_botInlineMessageMediaAuto' => 'Bot inline message media auto',
    'object_botInlineMessageMediaAuto_param_message_type_string' => 'Message',
    'object_botInlineMessageMediaAuto_param_entities_type_Vector t' => 'Entities',
    'object_botInlineMessageMediaAuto_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_botInlineMessageText' => 'Bot inline message text',
    'object_botInlineMessageText_param_no_webpage_type_true' => 'No webpage?',
    'object_botInlineMessageText_param_message_type_string' => 'Message',
    'object_botInlineMessageText_param_entities_type_Vector t' => 'Entities',
    'object_botInlineMessageText_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_botInlineMessageMediaGeo' => 'Bot inline message media geo',
    'object_botInlineMessageMediaGeo_param_geo_type_GeoPoint' => 'Geo',
    'object_botInlineMessageMediaGeo_param_period_type_int' => 'Period',
    'object_botInlineMessageMediaGeo_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_botInlineMessageMediaVenue' => 'Bot inline message media venue',
    'object_botInlineMessageMediaVenue_param_geo_type_GeoPoint' => 'Geo',
    'object_botInlineMessageMediaVenue_param_title_type_string' => 'Title',
    'object_botInlineMessageMediaVenue_param_address_type_string' => 'Address',
    'object_botInlineMessageMediaVenue_param_provider_type_string' => 'Provider',
    'object_botInlineMessageMediaVenue_param_venue_id_type_string' => 'Venue ID',
    'object_botInlineMessageMediaVenue_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_botInlineMessageMediaContact' => 'Bot inline message media contact',
    'object_botInlineMessageMediaContact_param_phone_number_type_string' => 'Phone number',
    'object_botInlineMessageMediaContact_param_first_name_type_string' => 'First name',
    'object_botInlineMessageMediaContact_param_last_name_type_string' => 'Last name',
    'object_botInlineMessageMediaContact_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
    'object_botInlineResult' => 'Bot inline result',
    'object_botInlineResult_param_id_type_string' => 'ID',
    'object_botInlineResult_param_type_type_string' => 'Type',
    'object_botInlineResult_param_title_type_string' => 'Title',
    'object_botInlineResult_param_description_type_string' => 'Description',
    'object_botInlineResult_param_url_type_string' => 'URL',
    'object_botInlineResult_param_thumb_url_type_string' => 'Thumbnail URL',
    'object_botInlineResult_param_content_url_type_string' => 'Content URL',
    'object_botInlineResult_param_content_type_type_string' => 'Content type',
    'object_botInlineResult_param_w_type_int' => 'Width',
    'object_botInlineResult_param_h_type_int' => 'Height',
    'object_botInlineResult_param_duration_type_int' => 'Duration',
    'object_botInlineResult_param_send_message_type_BotInlineMessage' => 'Message to send',
    'object_botInlineMediaResult' => 'Bot inline media result',
    'object_botInlineMediaResult_param_id_type_string' => 'ID',
    'object_botInlineMediaResult_param_type_type_string' => 'Type',
    'object_botInlineMediaResult_param_photo_type_Photo' => 'Photo',
    'object_botInlineMediaResult_param_document_type_Document' => 'Document',
    'object_botInlineMediaResult_param_title_type_string' => 'Title',
    'object_botInlineMediaResult_param_description_type_string' => 'Description',
    'object_botInlineMediaResult_param_send_message_type_BotInlineMessage' => 'Send message',
    'object_messages.botResults' => 'Bot results',
    'object_messages.botResults_param_gallery_type_true' => 'Gallery?',
    'object_messages.botResults_param_query_id_type_long' => 'Query ID',
    'object_messages.botResults_param_next_offset_type_string' => 'Next offset',
    'object_messages.botResults_param_switch_pm_type_InlineBotSwitchPM' => 'Switch pm',
    'object_messages.botResults_param_results_type_Vector t' => 'Results',
    'object_messages.botResults_param_cache_time_type_int' => 'Cache time',
    'object_messages.botResults_param_users_type_Vector t' => 'Users',
    'object_exportedMessageLink' => 'Exported message link',
    'object_exportedMessageLink_param_link_type_string' => 'Link',
    'object_exportedMessageLink_param_html_type_string' => 'Html',
    'object_messageFwdHeader' => 'Forwarded message info',
    'object_messageFwdHeader_param_from_id_type_int' => 'From ID',
    'object_messageFwdHeader_param_date_type_int' => 'Date',
    'object_messageFwdHeader_param_channel_id_type_int' => 'Channel ID',
    'object_messageFwdHeader_param_channel_post_type_int' => 'Channel post',
    'object_messageFwdHeader_param_post_author_type_string' => 'Post author',
    'object_messageFwdHeader_param_saved_from_peer_type_Peer' => 'Saved from peer',
    'object_messageFwdHeader_param_saved_from_msg_id_type_int' => 'Saved from msg ID',
    'object_auth.codeTypeSms' => 'Auth code type: SMS',
    'object_auth.codeTypeCall' => 'Auth code type: call',
    'object_auth.codeTypeFlashCall' => 'Auth code type: flash call',
    'object_auth.sentCodeTypeApp' => 'Sent code type app',
    'object_auth.sentCodeTypeApp_param_length_type_int' => 'Length',
    'object_auth.sentCodeTypeSms' => 'Sent code type sms',
    'object_auth.sentCodeTypeSms_param_length_type_int' => 'Length',
    'object_auth.sentCodeTypeCall' => 'Sent code type call',
    'object_auth.sentCodeTypeCall_param_length_type_int' => 'Length',
    'object_auth.sentCodeTypeFlashCall' => 'Sent code type flash call',
    'object_auth.sentCodeTypeFlashCall_param_pattern_type_string' => 'Pattern',
    'object_messages.botCallbackAnswer' => 'Bot callback answer',
    'object_messages.botCallbackAnswer_param_alert_type_true' => 'Alert?',
    'object_messages.botCallbackAnswer_param_has_url_type_true' => 'Has URL?',
    'object_messages.botCallbackAnswer_param_native_ui_type_true' => 'Native ui?',
    'object_messages.botCallbackAnswer_param_message_type_string' => 'Message',
    'object_messages.botCallbackAnswer_param_url_type_string' => 'URL',
    'object_messages.botCallbackAnswer_param_cache_time_type_int' => 'Cache time',
    'object_messages.messageEditData' => 'Message edit data',
    'object_messages.messageEditData_param_caption_type_true' => 'Caption?',
    'object_inputBotInlineMessageID' => 'Bot inline message ID',
    'object_inputBotInlineMessageID_param_dc_id_type_int' => 'DC ID',
    'object_inputBotInlineMessageID_param_id_type_long' => 'ID',
    'object_inputBotInlineMessageID_param_access_hash_type_long' => 'Access hash',
    'object_inlineBotSwitchPM' => 'Inline bot switch pm',
    'object_inlineBotSwitchPM_param_text_type_string' => 'Text',
    'object_inlineBotSwitchPM_param_start_param_type_string' => 'Start param',
    'object_messages.peerDialogs' => 'Peer dialogs',
    'object_messages.peerDialogs_param_dialogs_type_Vector t' => 'Dialogs',
    'object_messages.peerDialogs_param_messages_type_Vector t' => 'Messages',
    'object_messages.peerDialogs_param_chats_type_Vector t' => 'Chats',
    'object_messages.peerDialogs_param_users_type_Vector t' => 'Users',
    'object_messages.peerDialogs_param_state_type_updates.State' => 'State',
    'object_topPeer' => 'Top peer',
    'object_topPeer_param_peer_type_Peer' => 'Peer',
    'object_topPeer_param_rating_type_double' => 'Rating',
    'object_topPeerCategoryBotsPM' => 'Top peer category bots pm',
    'object_topPeerCategoryBotsInline' => 'Top peer category bots inline',
    'object_topPeerCategoryCorrespondents' => 'Top peer category correspondents',
    'object_topPeerCategoryGroups' => 'Top peer category groups',
    'object_topPeerCategoryChannels' => 'Top peer category channels',
    'object_topPeerCategoryPhoneCalls' => 'Top peer category phone calls',
    'object_topPeerCategoryPeers' => 'Top peer category peers',
    'object_topPeerCategoryPeers_param_category_type_TopPeerCategory' => 'Category',
    'object_topPeerCategoryPeers_param_count_type_int' => 'Count',
    'object_topPeerCategoryPeers_param_peers_type_Vector t' => 'Peers',
    'object_contacts.topPeersNotModified' => 'Top peers not modified',
    'object_contacts.topPeers' => 'Top peers',
    'object_contacts.topPeers_param_categories_type_Vector t' => 'Categories',
    'object_contacts.topPeers_param_chats_type_Vector t' => 'Chats',
    'object_contacts.topPeers_param_users_type_Vector t' => 'Users',
    'object_draftMessageEmpty' => 'Empty draft message',
    'object_draftMessage' => 'Draft message',
    'object_draftMessage_param_no_webpage_type_true' => 'No webpage?',
    'object_draftMessage_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
    'object_draftMessage_param_message_type_string' => 'Message',
    'object_draftMessage_param_entities_type_Vector t' => 'Entities',
    'object_draftMessage_param_date_type_int' => 'Date',
    'object_messages.featuredStickersNotModified' => 'Featured stickers not modified',
    'object_messages.featuredStickers' => 'Featured stickers',
    'object_messages.featuredStickers_param_hash_type_int' => 'Hash',
    'object_messages.featuredStickers_param_sets_type_Vector t' => 'Sets',
    'object_messages.featuredStickers_param_unread_type_Vector t' => 'Unread',
    'object_messages.recentStickersNotModified' => 'Recent stickers not modified',
    'object_messages.recentStickers' => 'Recent stickers',
    'object_messages.recentStickers_param_hash_type_int' => 'Hash',
    'object_messages.recentStickers_param_stickers_type_Vector t' => 'Stickers',
    'object_messages.archivedStickers' => 'Archived stickers',
    'object_messages.archivedStickers_param_count_type_int' => 'Count',
    'object_messages.archivedStickers_param_sets_type_Vector t' => 'Sets',
    'object_messages.stickerSetInstallResultSuccess' => 'Sticker set install result success',
    'object_messages.stickerSetInstallResultArchive' => 'Sticker set install result archive',
    'object_messages.stickerSetInstallResultArchive_param_sets_type_Vector t' => 'Sets',
    'object_stickerSetCovered' => 'Sticker set covered',
    'object_stickerSetCovered_param_set_type_StickerSet' => 'Set',
    'object_stickerSetCovered_param_cover_type_Document' => 'Cover',
    'object_stickerSetMultiCovered' => 'Sticker set multi covered',
    'object_stickerSetMultiCovered_param_set_type_StickerSet' => 'Set',
    'object_stickerSetMultiCovered_param_covers_type_Vector t' => 'Covers',
    'object_maskCoords' => 'Mask coords',
    'object_maskCoords_param_n_type_int' => 'N',
    'object_maskCoords_param_x_type_double' => 'X',
    'object_maskCoords_param_y_type_double' => 'Y',
    'object_maskCoords_param_zoom_type_double' => 'Zoom',
    'object_inputStickeredMediaPhoto' => 'Stickered media photo',
    'object_inputStickeredMediaPhoto_param_id_type_InputPhoto' => 'ID',
    'object_inputStickeredMediaDocument' => 'Stickered media document',
    'object_inputStickeredMediaDocument_param_id_type_InputDocument' => 'ID',
    'object_game' => 'Game',
    'object_game_param_id_type_long' => 'ID',
    'object_game_param_access_hash_type_long' => 'Access hash',
    'object_game_param_short_name_type_string' => 'Short name',
    'object_game_param_title_type_string' => 'Title',
    'object_game_param_description_type_string' => 'Description',
    'object_game_param_photo_type_Photo' => 'Photo',
    'object_game_param_document_type_Document' => 'Document',
    'object_inputGameID' => 'Game ID',
    'object_inputGameID_param_id_type_long' => 'ID',
    'object_inputGameID_param_access_hash_type_long' => 'Access hash',
    'object_inputGameShortName' => 'Game short name',
    'object_inputGameShortName_param_bot_id_type_InputUser' => 'Bot ID',
    'object_inputGameShortName_param_short_name_type_string' => 'Short name',
    'object_highScore' => 'High score',
    'object_highScore_param_pos_type_int' => 'Pos',
    'object_highScore_param_user_id_type_int' => 'User ID',
    'object_highScore_param_score_type_int' => 'Score',
    'object_messages.highScores' => 'High scores',
    'object_messages.highScores_param_scores_type_Vector t' => 'Scores',
    'object_messages.highScores_param_users_type_Vector t' => 'Users',
    'object_textEmpty' => 'Empty text',
    'object_textPlain' => 'Text plain',
    'object_textPlain_param_text_type_string' => 'Text',
    'object_textBold' => 'Text bold',
    'object_textBold_param_text_type_RichText' => 'Text',
    'object_textItalic' => 'Text italic',
    'object_textItalic_param_text_type_RichText' => 'Text',
    'object_textUnderline' => 'Text underline',
    'object_textUnderline_param_text_type_RichText' => 'Text',
    'object_textStrike' => 'Text strike',
    'object_textStrike_param_text_type_RichText' => 'Text',
    'object_textFixed' => 'Text fixed',
    'object_textFixed_param_text_type_RichText' => 'Text',
    'object_textUrl' => 'Text URL',
    'object_textUrl_param_text_type_RichText' => 'Text',
    'object_textUrl_param_url_type_string' => 'URL',
    'object_textUrl_param_webpage_id_type_long' => 'Webpage ID',
    'object_textEmail' => 'Text email',
    'object_textEmail_param_text_type_RichText' => 'Text',
    'object_textEmail_param_email_type_string' => 'Email',
    'object_textConcat' => 'Text concat',
    'object_textConcat_param_texts_type_Vector t' => 'Texts',
    'object_pageBlockUnsupported' => 'Page block unsupported',
    'object_pageBlockTitle' => 'Page block title',
    'object_pageBlockTitle_param_text_type_RichText' => 'Text',
    'object_pageBlockSubtitle' => 'Page block subtitle',
    'object_pageBlockSubtitle_param_text_type_RichText' => 'Text',
    'object_pageBlockAuthorDate' => 'Page block author date',
    'object_pageBlockAuthorDate_param_author_type_RichText' => 'Author',
    'object_pageBlockAuthorDate_param_published_date_type_int' => 'Published date',
    'object_pageBlockHeader' => 'Page block header',
    'object_pageBlockHeader_param_text_type_RichText' => 'Text',
    'object_pageBlockSubheader' => 'Page block subheader',
    'object_pageBlockSubheader_param_text_type_RichText' => 'Text',
    'object_pageBlockFooter' => 'Page block footer',
    'object_pageBlockFooter_param_text_type_RichText' => 'Text',
    'object_pageBlockList' => 'Page block list',
    'object_pageBlockList_param_ordered_type_Bool' => 'Ordered?',
    'object_pageBlockList_param_items_type_Vector t' => 'Items',
    'object_pageBlockBlockquote' => 'Page block blockquote',
    'object_pageBlockBlockquote_param_text_type_RichText' => 'Text',
    'object_pageBlockBlockquote_param_caption_type_RichText' => 'Caption',
    'object_pageBlockPullquote' => 'Page block pullquote',
    'object_pageBlockPullquote_param_text_type_RichText' => 'Text',
    'object_pageBlockPullquote_param_caption_type_RichText' => 'Caption',
    'object_pageBlockPhoto' => 'Page block photo',
    'object_pageBlockPhoto_param_photo_id_type_long' => 'Photo ID',
    'object_pageBlockPhoto_param_caption_type_RichText' => 'Caption',
    'object_pageBlockVideo' => 'Page block video',
    'object_pageBlockVideo_param_autoplay_type_true' => 'Autoplay?',
    'object_pageBlockVideo_param_loop_type_true' => 'Loop?',
    'object_pageBlockVideo_param_video_id_type_long' => 'Video ID',
    'object_pageBlockVideo_param_caption_type_RichText' => 'Caption',
    'object_pageBlockEmbed' => 'Page block embed',
    'object_pageBlockEmbed_param_full_width_type_true' => 'Full width?',
    'object_pageBlockEmbed_param_allow_scrolling_type_true' => 'Allow scrolling?',
    'object_pageBlockEmbed_param_url_type_string' => 'URL',
    'object_pageBlockEmbed_param_html_type_string' => 'Html',
    'object_pageBlockEmbed_param_poster_photo_id_type_long' => 'Poster photo ID',
    'object_pageBlockEmbed_param_w_type_int' => 'Width',
    'object_pageBlockEmbed_param_h_type_int' => 'Height',
    'object_pageBlockEmbed_param_caption_type_RichText' => 'Caption',
    'object_pageBlockEmbedPost' => 'Page block embed post',
    'object_pageBlockEmbedPost_param_url_type_string' => 'URL',
    'object_pageBlockEmbedPost_param_webpage_id_type_long' => 'Webpage ID',
    'object_pageBlockEmbedPost_param_author_photo_id_type_long' => 'Author photo ID',
    'object_pageBlockEmbedPost_param_author_type_string' => 'Author',
    'object_pageBlockEmbedPost_param_date_type_int' => 'Date',
    'object_pageBlockEmbedPost_param_blocks_type_Vector t' => 'Blocks',
    'object_pageBlockEmbedPost_param_caption_type_RichText' => 'Caption',
    'object_pageBlockCollage' => 'Page block collage',
    'object_pageBlockCollage_param_items_type_Vector t' => 'Items',
    'object_pageBlockCollage_param_caption_type_RichText' => 'Caption',
    'object_pageBlockSlideshow' => 'Page block slideshow',
    'object_pageBlockSlideshow_param_items_type_Vector t' => 'Items',
    'object_pageBlockSlideshow_param_caption_type_RichText' => 'Caption',
    'object_pageBlockChannel' => 'Page block channel',
    'object_pageBlockChannel_param_channel_type_Chat' => 'Channel',
    'object_pageBlockAudio' => 'Page block audio',
    'object_pageBlockAudio_param_audio_id_type_long' => 'Audio ID',
    'object_pageBlockAudio_param_caption_type_RichText' => 'Caption',
    'object_pagePart' => 'Page part',
    'object_pagePart_param_blocks_type_Vector t' => 'Blocks',
    'object_pagePart_param_photos_type_Vector t' => 'Photos',
    'object_pagePart_param_documents_type_Vector t' => 'Documents',
    'object_pageFull' => 'Page full',
    'object_pageFull_param_blocks_type_Vector t' => 'Blocks',
    'object_pageFull_param_photos_type_Vector t' => 'Photos',
    'object_pageFull_param_documents_type_Vector t' => 'Documents',
    'object_phoneCallDiscardReasonMissed' => 'Phone call discard reason missed',
    'object_phoneCallDiscardReasonDisconnect' => 'Phone call discard reason disconnect',
    'object_phoneCallDiscardReasonHangup' => 'Phone call discard reason hangup',
    'object_phoneCallDiscardReasonBusy' => 'Phone call discard reason busy',
    'object_dataJSON' => 'Data json',
    'object_dataJSON_param_data_type_string' => 'Data',
    'object_labeledPrice' => 'Labeled price',
    'object_labeledPrice_param_label_type_string' => 'Label',
    'object_labeledPrice_param_amount_type_long' => 'Amount',
    'object_invoice' => 'Invoice',
    'object_invoice_param_test_type_true' => 'Test?',
    'object_invoice_param_name_requested_type_true' => 'Name requested?',
    'object_invoice_param_phone_requested_type_true' => 'Phone requested?',
    'object_invoice_param_email_requested_type_true' => 'Email requested?',
    'object_invoice_param_shipping_address_requested_type_true' => 'Shipping address requested?',
    'object_invoice_param_flexible_type_true' => 'Flexible?',
    'object_invoice_param_phone_to_provider_type_true' => 'Phone to provider?',
    'object_invoice_param_email_to_provider_type_true' => 'Email to provider?',
    'object_invoice_param_currency_type_string' => 'Currency',
    'object_invoice_param_prices_type_Vector t' => 'Prices',
    'object_paymentCharge' => 'Payment charge',
    'object_paymentCharge_param_id_type_string' => 'ID',
    'object_paymentCharge_param_provider_charge_id_type_string' => 'Provider charge ID',
    'object_postAddress' => 'Post address',
    'object_postAddress_param_street_line1_type_string' => 'Street line1',
    'object_postAddress_param_street_line2_type_string' => 'Street line2',
    'object_postAddress_param_city_type_string' => 'City',
    'object_postAddress_param_state_type_string' => 'State',
    'object_postAddress_param_country_iso2_type_string' => 'Country iso2',
    'object_postAddress_param_post_code_type_string' => 'Post code',
    'object_paymentRequestedInfo' => 'Payment requested info',
    'object_paymentRequestedInfo_param_name_type_string' => 'Name',
    'object_paymentRequestedInfo_param_phone_type_string' => 'Phone',
    'object_paymentRequestedInfo_param_email_type_string' => 'Email',
    'object_paymentRequestedInfo_param_shipping_address_type_PostAddress' => 'Shipping address',
    'object_paymentSavedCredentialsCard' => 'Payment saved credentials card',
    'object_paymentSavedCredentialsCard_param_id_type_string' => 'ID',
    'object_paymentSavedCredentialsCard_param_title_type_string' => 'Title',
    'object_webDocument' => 'Web document',
    'object_webDocument_param_url_type_string' => 'URL',
    'object_webDocument_param_access_hash_type_long' => 'Access hash',
    'object_webDocument_param_size_type_int' => 'Size',
    'object_webDocument_param_mime_type_type_string' => 'Mime type',
    'object_webDocument_param_attributes_type_Vector t' => 'Attributes',
    'object_webDocument_param_dc_id_type_int' => 'DC ID',
    'object_inputWebDocument' => 'Web document',
    'object_inputWebDocument_param_url_type_string' => 'URL',
    'object_inputWebDocument_param_size_type_int' => 'Size',
    'object_inputWebDocument_param_mime_type_type_string' => 'Mime type',
    'object_inputWebDocument_param_attributes_type_Vector t' => 'Attributes',
    'object_inputWebFileLocation' => 'Web file location',
    'object_inputWebFileLocation_param_url_type_string' => 'URL',
    'object_inputWebFileLocation_param_access_hash_type_long' => 'Access hash',
    'object_upload.webFile' => 'Web file',
    'object_upload.webFile_param_size_type_int' => 'Size',
    'object_upload.webFile_param_mime_type_type_string' => 'Mime type',
    'object_upload.webFile_param_file_type_type_storage.FileType' => 'File type',
    'object_upload.webFile_param_mtime_type_int' => 'Mtime',
    'object_upload.webFile_param_bytes_type_bytes' => 'Bytes',
    'object_payments.paymentForm' => 'Payment form',
    'object_payments.paymentForm_param_can_save_credentials_type_true' => 'Can save credentials?',
    'object_payments.paymentForm_param_password_missing_type_true' => 'Password missing?',
    'object_payments.paymentForm_param_bot_id_type_int' => 'Bot ID',
    'object_payments.paymentForm_param_invoice_type_Invoice' => 'Invoice',
    'object_payments.paymentForm_param_provider_id_type_int' => 'Provider ID',
    'object_payments.paymentForm_param_url_type_string' => 'URL',
    'object_payments.paymentForm_param_native_provider_type_string' => 'Native provider',
    'object_payments.paymentForm_param_native_params_type_DataJSON' => 'Native params',
    'object_payments.paymentForm_param_saved_info_type_PaymentRequestedInfo' => 'Saved info',
    'object_payments.paymentForm_param_saved_credentials_type_PaymentSavedCredentials' => 'Saved credentials',
    'object_payments.paymentForm_param_users_type_Vector t' => 'Users',
    'object_payments.validatedRequestedInfo' => 'Validated requested info',
    'object_payments.validatedRequestedInfo_param_id_type_string' => 'ID',
    'object_payments.validatedRequestedInfo_param_shipping_options_type_Vector t' => 'Shipping options',
    'object_payments.paymentResult' => 'Payment result',
    'object_payments.paymentResult_param_updates_type_Updates' => 'Updates',
    'object_payments.paymentVerficationNeeded' => 'Payment verfication needed',
    'object_payments.paymentVerficationNeeded_param_url_type_string' => 'URL',
    'object_payments.paymentReceipt' => 'Payment receipt',
    'object_payments.paymentReceipt_param_date_type_int' => 'Date',
    'object_payments.paymentReceipt_param_bot_id_type_int' => 'Bot ID',
    'object_payments.paymentReceipt_param_invoice_type_Invoice' => 'Invoice',
    'object_payments.paymentReceipt_param_provider_id_type_int' => 'Provider ID',
    'object_payments.paymentReceipt_param_info_type_PaymentRequestedInfo' => 'Info',
    'object_payments.paymentReceipt_param_shipping_type_ShippingOption' => 'Shipping',
    'object_payments.paymentReceipt_param_currency_type_string' => 'Currency',
    'object_payments.paymentReceipt_param_total_amount_type_long' => 'Total amount',
    'object_payments.paymentReceipt_param_credentials_title_type_string' => 'Credentials title',
    'object_payments.paymentReceipt_param_users_type_Vector t' => 'Users',
    'object_payments.savedInfo' => 'Saved info',
    'object_payments.savedInfo_param_has_saved_credentials_type_true' => 'Has saved credentials?',
    'object_payments.savedInfo_param_saved_info_type_PaymentRequestedInfo' => 'Saved info',
    'object_inputPaymentCredentialsSaved' => 'Payment credentials saved',
    'object_inputPaymentCredentialsSaved_param_id_type_string' => 'ID',
    'object_inputPaymentCredentialsSaved_param_tmp_password_type_bytes' => 'Tmp password',
    'object_inputPaymentCredentials' => 'Payment credentials',
    'object_inputPaymentCredentials_param_save_type_true' => 'Save?',
    'object_inputPaymentCredentials_param_data_type_DataJSON' => 'Data',
    'object_inputPaymentCredentialsApplePay' => 'Payment credentials apple pay',
    'object_inputPaymentCredentialsApplePay_param_payment_data_type_DataJSON' => 'Payment data',
    'object_inputPaymentCredentialsAndroidPay' => 'Payment credentials android pay',
    'object_inputPaymentCredentialsAndroidPay_param_payment_token_type_DataJSON' => 'Payment token',
    'object_inputPaymentCredentialsAndroidPay_param_google_transaction_id_type_string' => 'Google transaction ID',
    'object_account.tmpPassword' => 'Tmp password',
    'object_account.tmpPassword_param_tmp_password_type_bytes' => 'Tmp password',
    'object_account.tmpPassword_param_valid_until_type_int' => 'Valid until',
    'object_shippingOption' => 'Shipping option',
    'object_shippingOption_param_id_type_string' => 'ID',
    'object_shippingOption_param_title_type_string' => 'Title',
    'object_shippingOption_param_prices_type_Vector t' => 'Prices',
    'object_inputStickerSetItem' => 'Sticker set item',
    'object_inputStickerSetItem_param_document_type_InputDocument' => 'Document',
    'object_inputStickerSetItem_param_emoji_type_string' => 'Emoji',
    'object_inputStickerSetItem_param_mask_coords_type_MaskCoords' => 'Mask coords',
    'object_inputPhoneCall' => 'Phone call',
    'object_inputPhoneCall_param_id_type_long' => 'ID',
    'object_inputPhoneCall_param_access_hash_type_long' => 'Access hash',
    'object_phoneCallEmpty' => 'Empty phone call',
    'object_phoneCallEmpty_param_id_type_long' => 'ID',
    'object_phoneCallWaiting' => 'Phone call waiting',
    'object_phoneCallWaiting_param_id_type_long' => 'ID',
    'object_phoneCallWaiting_param_access_hash_type_long' => 'Access hash',
    'object_phoneCallWaiting_param_date_type_int' => 'Date',
    'object_phoneCallWaiting_param_admin_id_type_int' => 'Admin ID',
    'object_phoneCallWaiting_param_participant_id_type_int' => 'Participant ID',
    'object_phoneCallWaiting_param_protocol_type_PhoneCallProtocol' => 'Protocol',
    'object_phoneCallWaiting_param_receive_date_type_int' => 'Receive date',
    'object_phoneCallRequested' => 'Phone call requested',
    'object_phoneCallRequested_param_id_type_long' => 'ID',
    'object_phoneCallRequested_param_access_hash_type_long' => 'Access hash',
    'object_phoneCallRequested_param_date_type_int' => 'Date',
    'object_phoneCallRequested_param_admin_id_type_int' => 'Admin ID',
    'object_phoneCallRequested_param_participant_id_type_int' => 'Participant ID',
    'object_phoneCallRequested_param_g_a_hash_type_bytes' => 'G a hash',
    'object_phoneCallRequested_param_protocol_type_PhoneCallProtocol' => 'Protocol',
    'object_phoneCallAccepted' => 'Phone call accepted',
    'object_phoneCallAccepted_param_id_type_long' => 'ID',
    'object_phoneCallAccepted_param_access_hash_type_long' => 'Access hash',
    'object_phoneCallAccepted_param_date_type_int' => 'Date',
    'object_phoneCallAccepted_param_admin_id_type_int' => 'Admin ID',
    'object_phoneCallAccepted_param_participant_id_type_int' => 'Participant ID',
    'object_phoneCallAccepted_param_g_b_type_bytes' => 'G b',
    'object_phoneCallAccepted_param_protocol_type_PhoneCallProtocol' => 'Protocol',
    'object_phoneCall' => 'Phone call',
    'object_phoneCall_param_id_type_long' => 'ID',
    'object_phoneCall_param_access_hash_type_long' => 'Access hash',
    'object_phoneCall_param_date_type_int' => 'Date',
    'object_phoneCall_param_admin_id_type_int' => 'Admin ID',
    'object_phoneCall_param_participant_id_type_int' => 'Participant ID',
    'object_phoneCall_param_g_a_or_b_type_bytes' => 'G a or b',
    'object_phoneCall_param_key_fingerprint_type_long' => 'Key fingerprint',
    'object_phoneCall_param_protocol_type_PhoneCallProtocol' => 'Protocol',
    'object_phoneCall_param_connection_type_PhoneConnection' => 'Connection',
    'object_phoneCall_param_alternative_connections_type_Vector t' => 'Alternative connections',
    'object_phoneCall_param_start_date_type_int' => 'Start date',
    'object_phoneCallDiscarded' => 'Phone call discarded',
    'object_phoneCallDiscarded_param_need_rating_type_true' => 'Need rating?',
    'object_phoneCallDiscarded_param_need_debug_type_true' => 'Need debug?',
    'object_phoneCallDiscarded_param_id_type_long' => 'ID',
    'object_phoneCallDiscarded_param_reason_type_PhoneCallDiscardReason' => 'Reason',
    'object_phoneCallDiscarded_param_duration_type_int' => 'Duration',
    'object_phoneConnection' => 'Phone connection',
    'object_phoneConnection_param_id_type_long' => 'ID',
    'object_phoneConnection_param_ip_type_string' => 'Ip',
    'object_phoneConnection_param_ipv6_type_string' => 'Ipv6',
    'object_phoneConnection_param_port_type_int' => 'Port',
    'object_phoneConnection_param_peer_tag_type_bytes' => 'Peer tag',
    'object_phoneCallProtocol' => 'Phone call protocol',
    'object_phoneCallProtocol_param_udp_p2p_type_true' => 'Udp p2p?',
    'object_phoneCallProtocol_param_udp_reflector_type_true' => 'Udp reflector?',
    'object_phoneCallProtocol_param_min_layer_type_int' => 'Min layer',
    'object_phoneCallProtocol_param_max_layer_type_int' => 'Max layer',
    'object_phone.phoneCall' => 'Phone call',
    'object_phone.phoneCall_param_phone_call_type_PhoneCall' => 'Phone call',
    'object_phone.phoneCall_param_users_type_Vector t' => 'Users',
    'object_upload.cdnFileReuploadNeeded' => 'Cdn file reupload needed',
    'object_upload.cdnFileReuploadNeeded_param_request_token_type_bytes' => 'Request token',
    'object_upload.cdnFile' => 'Cdn file',
    'object_upload.cdnFile_param_bytes_type_bytes' => 'Bytes',
    'object_cdnPublicKey' => 'Cdn public key',
    'object_cdnPublicKey_param_dc_id_type_int' => 'DC ID',
    'object_cdnPublicKey_param_public_key_type_string' => 'Public key',
    'object_cdnConfig' => 'CDN configuration',
    'object_cdnConfig_param_public_keys_type_Vector t' => 'Public keys',
    'object_langPackString' => 'Lang pack string',
    'object_langPackString_param_key_type_string' => 'Key',
    'object_langPackString_param_value_type_string' => 'Value',
    'object_langPackStringPluralized' => 'Lang pack string pluralized',
    'object_langPackStringPluralized_param_key_type_string' => 'Key',
    'object_langPackStringPluralized_param_zero_value_type_string' => 'Zero value',
    'object_langPackStringPluralized_param_one_value_type_string' => 'One value',
    'object_langPackStringPluralized_param_two_value_type_string' => 'Two value',
    'object_langPackStringPluralized_param_few_value_type_string' => 'Few value',
    'object_langPackStringPluralized_param_many_value_type_string' => 'Many value',
    'object_langPackStringPluralized_param_other_value_type_string' => 'Other value',
    'object_langPackStringDeleted' => 'Lang pack string deleted',
    'object_langPackStringDeleted_param_key_type_string' => 'Key',
    'object_langPackDifference' => 'Lang pack difference',
    'object_langPackDifference_param_lang_code_type_string' => 'Lang code',
    'object_langPackDifference_param_from_version_type_int' => 'From version',
    'object_langPackDifference_param_version_type_int' => 'Version',
    'object_langPackDifference_param_strings_type_Vector t' => 'Strings',
    'object_langPackLanguage' => 'Lang pack language',
    'object_langPackLanguage_param_name_type_string' => 'Name',
    'object_langPackLanguage_param_native_name_type_string' => 'Native name',
    'object_langPackLanguage_param_lang_code_type_string' => 'Lang code',
    'object_channelAdminRights' => 'Admin rights',
    'object_channelAdminRights_param_change_info_type_true' => 'Change info',
    'object_channelAdminRights_param_post_messages_type_true' => 'Post messages',
    'object_channelAdminRights_param_edit_messages_type_true' => 'Edit messages',
    'object_channelAdminRights_param_delete_messages_type_true' => 'Delete messages',
    'object_channelAdminRights_param_ban_users_type_true' => 'Ban users',
    'object_channelAdminRights_param_invite_users_type_true' => 'Invite users',
    'object_channelAdminRights_param_invite_link_type_true' => 'Generate an invite link',
    'object_channelAdminRights_param_pin_messages_type_true' => 'Pin messages',
    'object_channelAdminRights_param_add_admins_type_true' => 'Add other admins',
    'object_channelBannedRights' => 'Banned user rights (when true, the user will NOT be able to do that thing)',
    'object_channelBannedRights_param_view_messages_type_true' => 'Disallow viewing messages',
    'object_channelBannedRights_param_send_messages_type_true' => 'Disallow sending messages',
    'object_channelBannedRights_param_send_media_type_true' => 'Disallow sending media',
    'object_channelBannedRights_param_send_stickers_type_true' => 'Disallow sending stickers',
    'object_channelBannedRights_param_send_gifs_type_true' => 'Disallow sending gifs',
    'object_channelBannedRights_param_send_games_type_true' => 'Disallow sending games',
    'object_channelBannedRights_param_send_inline_type_true' => 'Disallow sending inline keyboards',
    'object_channelBannedRights_param_embed_links_type_true' => 'Disallow embedding links',
    'object_channelBannedRights_param_until_date_type_int' => 'Until date',
    'object_channelAdminLogEventActionChangeTitle' => 'Change title',
    'object_channelAdminLogEventActionChangeTitle_param_prev_value_type_string' => 'Previous value',
    'object_channelAdminLogEventActionChangeTitle_param_new_value_type_string' => 'New value',
    'object_channelAdminLogEventActionChangeAbout' => 'Change about text',
    'object_channelAdminLogEventActionChangeAbout_param_prev_value_type_string' => 'Previous value',
    'object_channelAdminLogEventActionChangeAbout_param_new_value_type_string' => 'New value',
    'object_channelAdminLogEventActionChangeUsername' => 'Change username',
    'object_channelAdminLogEventActionChangeUsername_param_prev_value_type_string' => 'Prev value',
    'object_channelAdminLogEventActionChangeUsername_param_new_value_type_string' => 'New value',
    'object_channelAdminLogEventActionChangePhoto' => 'Change photo',
    'object_channelAdminLogEventActionChangePhoto_param_prev_photo_type_ChatPhoto' => 'Previous photo',
    'object_channelAdminLogEventActionChangePhoto_param_new_photo_type_ChatPhoto' => 'New photo',
    'object_channelAdminLogEventActionToggleInvites' => 'Invite setting toggled',
    'object_channelAdminLogEventActionToggleInvites_param_new_value_type_Bool' => 'New value',
    'object_channelAdminLogEventActionToggleSignatures' => 'Toggle channel signatures',
    'object_channelAdminLogEventActionToggleSignatures_param_new_value_type_Bool' => 'New value?',
    'object_channelAdminLogEventActionUpdatePinned' => 'Message pinned',
    'object_channelAdminLogEventActionUpdatePinned_param_message_type_Message' => 'Message',
    'object_channelAdminLogEventActionEditMessage' => 'Edit message',
    'object_channelAdminLogEventActionEditMessage_param_prev_message_type_Message' => 'Prev message',
    'object_channelAdminLogEventActionEditMessage_param_new_message_type_Message' => 'New message',
    'object_channelAdminLogEventActionDeleteMessage' => 'Delete message',
    'object_channelAdminLogEventActionDeleteMessage_param_message_type_Message' => 'Message',
    'object_channelAdminLogEventActionParticipantJoin' => 'Joined participant',
    'object_channelAdminLogEventActionParticipantLeave' => 'Left participant',
    'object_channelAdminLogEventActionParticipantInvite' => 'Invite participant',
    'object_channelAdminLogEventActionParticipantInvite_param_participant_type_ChannelParticipant' => 'Participant',
    'object_channelAdminLogEventActionParticipantToggleBan' => 'User banned',
    'object_channelAdminLogEventActionParticipantToggleBan_param_prev_participant_type_ChannelParticipant' => 'Prev participant',
    'object_channelAdminLogEventActionParticipantToggleBan_param_new_participant_type_ChannelParticipant' => 'New participant',
    'object_channelAdminLogEventActionParticipantToggleAdmin' => 'Admin toggled',
    'object_channelAdminLogEventActionParticipantToggleAdmin_param_prev_participant_type_ChannelParticipant' => 'Prev participant',
    'object_channelAdminLogEventActionParticipantToggleAdmin_param_new_participant_type_ChannelParticipant' => 'New participant',
    'object_channelAdminLogEventActionChangeStickerSet' => 'Change stickerset',
    'object_channelAdminLogEventActionChangeStickerSet_param_prev_stickerset_type_InputStickerSet' => 'Previous stickerset',
    'object_channelAdminLogEventActionChangeStickerSet_param_new_stickerset_type_InputStickerSet' => 'New stickerset',
    'object_channelAdminLogEventActionTogglePreHistoryHidden' => 'Previous history hidden',
    'object_channelAdminLogEventActionTogglePreHistoryHidden_param_new_value_type_Bool' => 'New value',
    'object_channelAdminLogEvent' => 'Channel admin log event',
    'object_channelAdminLogEvent_param_id_type_long' => 'ID',
    'object_channelAdminLogEvent_param_date_type_int' => 'Date',
    'object_channelAdminLogEvent_param_user_id_type_int' => 'User ID',
    'object_channelAdminLogEvent_param_action_type_ChannelAdminLogEventAction' => 'Action',
    'object_channels.adminLogResults' => 'Admin log results',
    'object_channels.adminLogResults_param_events_type_Vector t' => 'Events',
    'object_channels.adminLogResults_param_chats_type_Vector t' => 'Chats',
    'object_channels.adminLogResults_param_users_type_Vector t' => 'Users',
    'object_channelAdminLogEventsFilter' => 'Event filter',
    'object_channelAdminLogEventsFilter_param_join_type_true' => 'Join users events',
    'object_channelAdminLogEventsFilter_param_leave_type_true' => 'Left users events',
    'object_channelAdminLogEventsFilter_param_invite_type_true' => 'Invite users events',
    'object_channelAdminLogEventsFilter_param_ban_type_true' => 'Ban events',
    'object_channelAdminLogEventsFilter_param_unban_type_true' => 'Unban events',
    'object_channelAdminLogEventsFilter_param_kick_type_true' => 'Kicked users events',
    'object_channelAdminLogEventsFilter_param_unkick_type_true' => 'Unkick events',
    'object_channelAdminLogEventsFilter_param_promote_type_true' => 'Admin promotion events',
    'object_channelAdminLogEventsFilter_param_demote_type_true' => 'Demote admin events',
    'object_channelAdminLogEventsFilter_param_info_type_true' => 'Change info events',
    'object_channelAdminLogEventsFilter_param_settings_type_true' => 'Setting changes',
    'object_channelAdminLogEventsFilter_param_pinned_type_true' => 'Pinned message events',
    'object_channelAdminLogEventsFilter_param_edit_type_true' => 'Edit message events',
    'object_channelAdminLogEventsFilter_param_delete_type_true' => 'Delete message events',
    'object_popularContact' => 'Popular contact',
    'object_popularContact_param_client_id_type_long' => 'Client ID',
    'object_popularContact_param_importers_type_int' => 'Importers',
    'object_cdnFileHash' => 'CDN file hash',
    'object_cdnFileHash_param_offset_type_int' => 'Offset',
    'object_cdnFileHash_param_limit_type_int' => 'Limit',
    'object_cdnFileHash_param_hash_type_bytes' => 'Hash',
    'object_messages.favedStickersNotModified' => 'Faved stickers not modified',
    'object_messages.favedStickers' => 'Faved stickers',
    'object_messages.favedStickers_param_hash_type_int' => 'Hash',
    'object_messages.favedStickers_param_packs_type_Vector t' => 'Packs',
    'object_messages.favedStickers_param_stickers_type_Vector t' => 'Stickers',
    'object_recentMeUrlUnknown' => 'Recent me URL unknown',
    'object_recentMeUrlUnknown_param_url_type_string' => 'URL',
    'object_recentMeUrlUser' => 'Recent me URL user',
    'object_recentMeUrlUser_param_url_type_string' => 'URL',
    'object_recentMeUrlUser_param_user_id_type_int' => 'User ID',
    'object_recentMeUrlChat' => 'Recent me URL chat',
    'object_recentMeUrlChat_param_url_type_string' => 'URL',
    'object_recentMeUrlChat_param_chat_id_type_int' => 'Chat ID',
    'object_recentMeUrlChatInvite' => 'Recent me URL chat invite',
    'object_recentMeUrlChatInvite_param_url_type_string' => 'URL',
    'object_recentMeUrlChatInvite_param_chat_invite_type_ChatInvite' => 'Chat invite',
    'object_recentMeUrlStickerSet' => 'Recent me URL sticker set',
    'object_recentMeUrlStickerSet_param_url_type_string' => 'URL',
    'object_recentMeUrlStickerSet_param_set_type_StickerSetCovered' => 'Set',
    'object_help.recentMeUrls' => 'Recent me URLs',
    'object_help.recentMeUrls_param_urls_type_Vector t' => 'URLs',
    'object_help.recentMeUrls_param_chats_type_Vector t' => 'Chats',
    'object_help.recentMeUrls_param_users_type_Vector t' => 'Users',
    'object_inputSingleMedia' => 'Single media',
    'object_inputSingleMedia_param_media_type_InputMedia' => 'Media',
    'object_inputSingleMedia_param_message_type_string' => 'Message',
    'object_inputSingleMedia_param_entities_type_Vector t' => 'Entities',
    'object_webAuthorization' => 'Web authorization',
    'object_webAuthorization_param_hash_type_long' => 'Hash',
    'object_webAuthorization_param_bot_id_type_int' => 'Bot ID',
    'object_webAuthorization_param_domain_type_string' => 'Domain',
    'object_webAuthorization_param_browser_type_string' => 'Browser',
    'object_webAuthorization_param_platform_type_string' => 'Platform',
    'object_webAuthorization_param_date_created_type_int' => 'Date created',
    'object_webAuthorization_param_date_active_type_int' => 'Date active',
    'object_webAuthorization_param_ip_type_string' => 'Ip',
    'object_webAuthorization_param_region_type_string' => 'Region',
    'object_account.webAuthorizations' => 'Telegram login authorizations',
    'object_account.webAuthorizations_param_authorizations_type_Vector t' => 'Authorizations',
    'object_account.webAuthorizations_param_users_type_Vector t' => 'Users',
    'object_inputMessageID' => 'Message ID',
    'object_inputMessageID_param_id_type_int' => 'ID',
    'object_inputMessageReplyTo' => 'Message reply to',
    'object_inputMessageReplyTo_param_id_type_int' => 'ID',
    'object_inputMessagePinned' => 'Message pinned',
    'object_decryptedDataBlock' => 'Decrypted data block',
    'object_decryptedDataBlock_param_voice_call_id_type_int128' => 'Voice call ID',
    'object_decryptedDataBlock_param_in_seq_no_type_int' => 'In seq no',
    'object_decryptedDataBlock_param_out_seq_no_type_int' => 'Out seq no',
    'object_decryptedDataBlock_param_recent_received_mask_type_int' => 'Recent received mask',
    'object_decryptedDataBlock_param_proto_type_int' => 'Proto',
    'object_decryptedDataBlock_param_extra_type_string' => 'Extra',
    'object_decryptedDataBlock_param_raw_data_type_string' => 'Raw data',
    'object_simpleDataBlock' => 'Simple data block',
    'object_simpleDataBlock_param_raw_data_type_string' => 'Raw data',
    'object_decryptedMessage' => 'Decrypted message',
    'object_decryptedMessage_param_message_type_string' => 'Message',
    'object_decryptedMessage_param_media_type_DecryptedMessageMedia' => 'Media',
    'object_decryptedMessageService' => 'Decrypted message service',
    'object_decryptedMessageService_param_action_type_DecryptedMessageAction' => 'Action',
    'object_decryptedMessageMediaEmpty' => 'Empty decrypted message media',
    'object_decryptedMessageMediaPhoto' => 'Decrypted message media photo',
    'object_decryptedMessageMediaPhoto_param_thumb_type_bytes' => 'Thumbnail',
    'object_decryptedMessageMediaPhoto_param_thumb_w_type_int' => 'Thumbnail width',
    'object_decryptedMessageMediaPhoto_param_thumb_h_type_int' => 'Thumbnail height',
    'object_decryptedMessageMediaPhoto_param_w_type_int' => 'Width',
    'object_decryptedMessageMediaPhoto_param_h_type_int' => 'Height',
    'object_decryptedMessageMediaPhoto_param_size_type_int' => 'Size',
    'object_decryptedMessageMediaPhoto_param_key_type_bytes' => 'Key',
    'object_decryptedMessageMediaPhoto_param_iv_type_bytes' => 'Iv',
    'object_decryptedMessageMediaVideo' => 'Decrypted message media video',
    'object_decryptedMessageMediaVideo_param_thumb_type_bytes' => 'Thumbnail',
    'object_decryptedMessageMediaVideo_param_thumb_w_type_int' => 'Thumbnail width',
    'object_decryptedMessageMediaVideo_param_thumb_h_type_int' => 'Thumbnail height',
    'object_decryptedMessageMediaVideo_param_duration_type_int' => 'Duration',
    'object_decryptedMessageMediaVideo_param_w_type_int' => 'Width',
    'object_decryptedMessageMediaVideo_param_h_type_int' => 'Height',
    'object_decryptedMessageMediaVideo_param_size_type_int' => 'Size',
    'object_decryptedMessageMediaVideo_param_key_type_bytes' => 'Key',
    'object_decryptedMessageMediaVideo_param_iv_type_bytes' => 'Iv',
    'object_decryptedMessageMediaGeoPoint' => 'Decrypted message media geo point',
    'object_decryptedMessageMediaGeoPoint_param_lat_type_double' => 'Lat',
    'object_decryptedMessageMediaGeoPoint_param_long_type_double' => 'Long',
    'object_decryptedMessageMediaContact' => 'Decrypted message media contact',
    'object_decryptedMessageMediaContact_param_phone_number_type_string' => 'Phone number',
    'object_decryptedMessageMediaContact_param_first_name_type_string' => 'First name',
    'object_decryptedMessageMediaContact_param_last_name_type_string' => 'Last name',
    'object_decryptedMessageMediaContact_param_user_id_type_int' => 'User ID',
    'object_decryptedMessageActionSetMessageTTL' => 'Decrypted message action set message ttl',
    'object_decryptedMessageActionSetMessageTTL_param_ttl_seconds_type_int' => 'Ttl seconds',
    'object_decryptedMessageMediaDocument' => 'Decrypted message media document',
    'object_decryptedMessageMediaDocument_param_thumb_type_bytes' => 'Thumbnail',
    'object_decryptedMessageMediaDocument_param_thumb_w_type_int' => 'Thumbnail w',
    'object_decryptedMessageMediaDocument_param_thumb_h_type_int' => 'Thumbnail h',
    'object_decryptedMessageMediaDocument_param_file_name_type_string' => 'File name',
    'object_decryptedMessageMediaDocument_param_mime_type_type_string' => 'Mime type',
    'object_decryptedMessageMediaDocument_param_size_type_int' => 'Size',
    'object_decryptedMessageMediaDocument_param_key_type_bytes' => 'Key',
    'object_decryptedMessageMediaDocument_param_iv_type_bytes' => 'Iv',
    'object_decryptedMessageMediaAudio' => 'Decrypted message media audio',
    'object_decryptedMessageMediaAudio_param_duration_type_int' => 'Duration',
    'object_decryptedMessageMediaAudio_param_size_type_int' => 'Size',
    'object_decryptedMessageMediaAudio_param_key_type_bytes' => 'Key',
    'object_decryptedMessageMediaAudio_param_iv_type_bytes' => 'Iv',
    'object_decryptedMessageActionReadMessages' => 'Decrypted message action read messages',
    'object_decryptedMessageActionReadMessages_param_random_ids_type_Vector t' => 'Random IDs',
    'object_decryptedMessageActionDeleteMessages' => 'Decrypted message action delete messages',
    'object_decryptedMessageActionDeleteMessages_param_random_ids_type_Vector t' => 'Random IDs',
    'object_decryptedMessageActionScreenshotMessages' => 'Decrypted message action screenshot messages',
    'object_decryptedMessageActionScreenshotMessages_param_random_ids_type_Vector t' => 'Random IDs',
    'object_decryptedMessageActionFlushHistory' => 'Decrypted message action flush history',
    'object_decryptedMessage_param_ttl_type_int' => 'Ttl',
    'object_decryptedMessageMediaVideo_param_mime_type_type_string' => 'Mime type',
    'object_decryptedMessageMediaAudio_param_mime_type_type_string' => 'Mime type',
    'object_decryptedMessageLayer' => 'Decrypted message layer',
    'object_decryptedMessageLayer_param_layer_type_int' => 'Layer',
    'object_decryptedMessageLayer_param_in_seq_no_type_int' => 'In seq no',
    'object_decryptedMessageLayer_param_out_seq_no_type_int' => 'Out seq no',
    'object_decryptedMessageLayer_param_message_type_DecryptedMessage' => 'Message',
    'object_decryptedMessageActionResend' => 'Decrypted message action resend',
    'object_decryptedMessageActionResend_param_start_seq_no_type_int' => 'Start seq no',
    'object_decryptedMessageActionResend_param_end_seq_no_type_int' => 'End seq no',
    'object_decryptedMessageActionNotifyLayer' => 'Decrypted message action notify layer',
    'object_decryptedMessageActionNotifyLayer_param_layer_type_int' => 'Layer',
    'object_decryptedMessageActionTyping' => 'Decrypted message action typing',
    'object_decryptedMessageActionTyping_param_action_type_SendMessageAction' => 'Action',
    'object_decryptedMessageActionRequestKey' => 'Decrypted message action request key',
    'object_decryptedMessageActionRequestKey_param_exchange_id_type_long' => 'Exchange ID',
    'object_decryptedMessageActionRequestKey_param_g_a_type_bytes' => 'G a',
    'object_decryptedMessageActionAcceptKey' => 'Decrypted message action accept key',
    'object_decryptedMessageActionAcceptKey_param_exchange_id_type_long' => 'Exchange ID',
    'object_decryptedMessageActionAcceptKey_param_g_b_type_bytes' => 'G b',
    'object_decryptedMessageActionAcceptKey_param_key_fingerprint_type_long' => 'Key fingerprint',
    'object_decryptedMessageActionAbortKey' => 'Decrypted message action abort key',
    'object_decryptedMessageActionAbortKey_param_exchange_id_type_long' => 'Exchange ID',
    'object_decryptedMessageActionCommitKey' => 'Decrypted message action commit key',
    'object_decryptedMessageActionCommitKey_param_exchange_id_type_long' => 'Exchange ID',
    'object_decryptedMessageActionCommitKey_param_key_fingerprint_type_long' => 'Key fingerprint',
    'object_decryptedMessageActionNoop' => 'Decrypted message action noop',
    'object_decryptedMessageMediaExternalDocument' => 'Decrypted message media external document',
    'object_decryptedMessageMediaExternalDocument_param_id_type_long' => 'ID',
    'object_decryptedMessageMediaExternalDocument_param_access_hash_type_long' => 'Access hash',
    'object_decryptedMessageMediaExternalDocument_param_date_type_int' => 'Date',
    'object_decryptedMessageMediaExternalDocument_param_mime_type_type_string' => 'Mime type',
    'object_decryptedMessageMediaExternalDocument_param_size_type_int' => 'Size',
    'object_decryptedMessageMediaExternalDocument_param_thumb_type_PhotoSize' => 'Thumbnail',
    'object_decryptedMessageMediaExternalDocument_param_dc_id_type_int' => 'DC ID',
    'object_decryptedMessageMediaExternalDocument_param_attributes_type_Vector t' => 'Attributes',
    'object_decryptedMessage_param_entities_type_Vector t' => 'Entities',
    'object_decryptedMessage_param_via_bot_name_type_string' => 'Via bot name',
    'object_decryptedMessage_param_reply_to_random_id_type_long' => 'Reply to random ID',
    'object_decryptedMessageMediaPhoto_param_caption_type_string' => 'Caption',
    'object_decryptedMessageMediaVideo_param_caption_type_string' => 'Caption',
    'object_decryptedMessageMediaDocument_param_attributes_type_Vector t' => 'Attributes',
    'object_decryptedMessageMediaDocument_param_caption_type_string' => 'Caption',
    'object_decryptedMessageMediaVenue' => 'Decrypted message media venue',
    'object_decryptedMessageMediaVenue_param_lat_type_double' => 'Lat',
    'object_decryptedMessageMediaVenue_param_long_type_double' => 'Long',
    'object_decryptedMessageMediaVenue_param_title_type_string' => 'Title',
    'object_decryptedMessageMediaVenue_param_address_type_string' => 'Address',
    'object_decryptedMessageMediaVenue_param_provider_type_string' => 'Provider',
    'object_decryptedMessageMediaVenue_param_venue_id_type_string' => 'Venue ID',
    'object_decryptedMessageMediaWebPage' => 'Decrypted message media web page',
    'object_decryptedMessageMediaWebPage_param_url_type_string' => 'URL',
    'object_decryptedMessage_param_grouped_id_type_long' => 'Grouped ID',
    'object_inputPeerContact' => 'Peer contact',
    'object_inputPeerContact_param_user_id_type_int' => 'User ID',
    'object_inputPeerForeign' => 'Peer foreign',
    'object_inputPeerForeign_param_user_id_type_int' => 'User ID',
    'object_inputPeerForeign_param_access_hash_type_long' => 'Access hash',
    'object_inputUserContact' => 'User contact',
    'object_inputUserContact_param_user_id_type_int' => 'User ID',
    'object_inputUserForeign' => 'User foreign',
    'object_inputUserForeign_param_user_id_type_int' => 'User ID',
    'object_inputUserForeign_param_access_hash_type_long' => 'Access hash',
    'object_inputMediaUploadedVideo' => 'Media uploaded video',
    'object_inputMediaUploadedVideo_param_file_type_InputFile' => 'File',
    'object_inputMediaUploadedVideo_param_duration_type_int' => 'Duration',
    'object_inputMediaUploadedVideo_param_w_type_int' => 'Width',
    'object_inputMediaUploadedVideo_param_h_type_int' => 'Height',
    'object_inputMediaUploadedVideo_param_mime_type_type_string' => 'Mime type',
    'object_inputMediaUploadedThumbVideo' => 'Media uploaded thumb video',
    'object_inputMediaUploadedThumbVideo_param_file_type_InputFile' => 'File',
    'object_inputMediaUploadedThumbVideo_param_thumb_type_InputFile' => 'Thumbnail',
    'object_inputMediaUploadedThumbVideo_param_duration_type_int' => 'Duration',
    'object_inputMediaUploadedThumbVideo_param_w_type_int' => 'Width',
    'object_inputMediaUploadedThumbVideo_param_h_type_int' => 'Height',
    'object_inputMediaUploadedThumbVideo_param_mime_type_type_string' => 'Mime type',
    'object_inputMediaVideo' => 'Media video',
    'object_inputMediaVideo_param_id_type_InputVideo' => 'ID',
    'object_inputChatUploadedPhoto_param_crop_type_InputPhotoCrop' => 'Crop',
    'object_inputChatPhoto_param_crop_type_InputPhotoCrop' => 'Crop',
    'object_inputVideoEmpty' => 'Empty input video',
    'object_inputVideo' => 'Video',
    'object_inputVideo_param_id_type_long' => 'ID',
    'object_inputVideo_param_access_hash_type_long' => 'Access hash',
    'object_inputVideoFileLocation' => 'Video file location',
    'object_inputVideoFileLocation_param_id_type_long' => 'ID',
    'object_inputVideoFileLocation_param_access_hash_type_long' => 'Access hash',
    'object_inputPhotoCropAuto' => 'Photo crop auto',
    'object_inputPhotoCrop' => 'Photo crop',
    'object_inputPhotoCrop_param_crop_left_type_double' => 'Crop left',
    'object_inputPhotoCrop_param_crop_top_type_double' => 'Crop top',
    'object_inputPhotoCrop_param_crop_width_type_double' => 'Crop width',
    'object_userSelf' => 'User self',
    'object_userSelf_param_id_type_int' => 'ID',
    'object_userSelf_param_first_name_type_string' => 'First name',
    'object_userSelf_param_last_name_type_string' => 'Last name',
    'object_userSelf_param_username_type_string' => 'Username',
    'object_userSelf_param_phone_type_string' => 'Phone',
    'object_userSelf_param_photo_type_UserProfilePhoto' => 'Photo',
    'object_userSelf_param_status_type_UserStatus' => 'Status',
    'object_userSelf_param_inactive_type_Bool' => 'Inactive?',
    'object_userContact' => 'User contact',
    'object_userContact_param_id_type_int' => 'ID',
    'object_userContact_param_first_name_type_string' => 'First name',
    'object_userContact_param_last_name_type_string' => 'Last name',
    'object_userContact_param_username_type_string' => 'Username',
    'object_userContact_param_access_hash_type_long' => 'Access hash',
    'object_userContact_param_phone_type_string' => 'Phone',
    'object_userContact_param_photo_type_UserProfilePhoto' => 'Photo',
    'object_userContact_param_status_type_UserStatus' => 'Status',
    'object_userRequest' => 'User request',
    'object_userRequest_param_id_type_int' => 'ID',
    'object_userRequest_param_first_name_type_string' => 'First name',
    'object_userRequest_param_last_name_type_string' => 'Last name',
    'object_userRequest_param_username_type_string' => 'Username',
    'object_userRequest_param_access_hash_type_long' => 'Access hash',
    'object_userRequest_param_phone_type_string' => 'Phone',
    'object_userRequest_param_photo_type_UserProfilePhoto' => 'Photo',
    'object_userRequest_param_status_type_UserStatus' => 'Status',
    'object_userForeign' => 'User foreign',
    'object_userForeign_param_id_type_int' => 'ID',
    'object_userForeign_param_first_name_type_string' => 'First name',
    'object_userForeign_param_last_name_type_string' => 'Last name',
    'object_userForeign_param_username_type_string' => 'Username',
    'object_userForeign_param_access_hash_type_long' => 'Access hash',
    'object_userForeign_param_photo_type_UserProfilePhoto' => 'Photo',
    'object_userForeign_param_status_type_UserStatus' => 'Status',
    'object_userDeleted' => 'User deleted',
    'object_userDeleted_param_id_type_int' => 'ID',
    'object_userDeleted_param_first_name_type_string' => 'First name',
    'object_userDeleted_param_last_name_type_string' => 'Last name',
    'object_userDeleted_param_username_type_string' => 'Username',
    'object_userStatusEmpty' => 'Empty user status',
    'object_userStatusOnline' => 'User status online',
    'object_userStatusOnline_param_expires_type_int' => 'Expires',
    'object_userStatusOffline' => 'User status offline',
    'object_userStatusOffline_param_was_online_type_int' => 'Was online',
    'object_chat_param_left_type_Bool' => 'Left?',
    'object_chatForbidden_param_date_type_int' => 'Date',
    'object_chatParticipants_param_admin_id_type_int' => 'Admin ID',
    'object_messageForwarded' => 'Message forwarded',
    'object_messageForwarded_param_id_type_int' => 'ID',
    'object_messageForwarded_param_fwd_from_id_type_int' => 'Forwarded from ID',
    'object_messageForwarded_param_fwd_date_type_int' => 'Forwarded date',
    'object_messageForwarded_param_from_id_type_int' => 'From ID',
    'object_messageForwarded_param_to_id_type_Peer' => 'To ID',
    'object_messageForwarded_param_date_type_int' => 'Date',
    'object_messageForwarded_param_message_type_string' => 'Message',
    'object_messageForwarded_param_media_type_MessageMedia' => 'Media',
    'object_messageMediaVideo' => 'Message media video',
    'object_messageMediaVideo_param_video_type_Video' => 'Video',
    'object_messageMediaUnsupported_param_bytes_type_bytes' => 'Bytes',
    'object_messageActionChatAddUser_param_user_id_type_int' => 'User ID',
    'object_photo_param_user_id_type_int' => 'User ID',
    'object_photo_param_caption_type_string' => 'Caption',
    'object_photo_param_geo_type_GeoPoint' => 'Geo',
    'object_videoEmpty' => 'Empty video',
    'object_videoEmpty_param_id_type_long' => 'ID',
    'object_video' => 'Video',
    'object_video_param_id_type_long' => 'ID',
    'object_video_param_access_hash_type_long' => 'Access hash',
    'object_video_param_user_id_type_int' => 'User ID',
    'object_video_param_date_type_int' => 'Date',
    'object_video_param_caption_type_string' => 'Caption',
    'object_video_param_duration_type_int' => 'Duration',
    'object_video_param_mime_type_type_string' => 'Mime type',
    'object_video_param_size_type_int' => 'Size',
    'object_video_param_thumb_type_PhotoSize' => 'Thumbnail',
    'object_video_param_dc_id_type_int' => 'DC ID',
    'object_video_param_w_type_int' => 'Width',
    'object_video_param_h_type_int' => 'Height',
    'object_auth.checkedPhone_param_phone_invited_type_Bool' => 'Phone invited?',
    'object_auth.sentCode_param_phone_registered_type_Bool' => 'Phone registered?',
    'object_auth.sentCode_param_send_call_timeout_type_int' => 'Send call timeout',
    'object_auth.sentCode_param_is_password_type_Bool' => 'Is password?',
    'object_auth.authorization_param_expires_type_int' => 'Expiration date',
    'object_inputPeerNotifySettings_param_show_previews_type_Bool' => 'Show previews?',
    'object_inputPeerNotifySettings_param_events_mask_type_int' => 'Events mask',
    'object_peerNotifySettings_param_show_previews_type_Bool' => 'Show previews?',
    'object_peerNotifySettings_param_events_mask_type_int' => 'Events mask',
    'object_userFull_param_blocked_type_Bool' => 'Blocked?',
    'object_userFull_param_real_first_name_type_string' => 'Real first name',
    'object_userFull_param_real_last_name_type_string' => 'Real last name',
    'object_contactSuggested' => 'Contact suggested',
    'object_contactSuggested_param_user_id_type_int' => 'User ID',
    'object_contactSuggested_param_mutual_contacts_type_int' => 'Mutual contacts',
    'object_contactStatus_param_expires_type_int' => 'Expires',
    'object_contacts.foreignLinkUnknown' => 'Foreign link unknown',
    'object_contacts.foreignLinkRequested' => 'Foreign link requested',
    'object_contacts.foreignLinkRequested_param_has_phone_type_Bool' => 'Has phone?',
    'object_contacts.foreignLinkMutual' => 'Foreign link mutual',
    'object_contacts.myLinkEmpty' => 'Empty my link',
    'object_contacts.myLinkRequested' => 'My link requested',
    'object_contacts.myLinkRequested_param_contact_type_Bool' => 'Contact?',
    'object_contacts.myLinkContact' => 'My link contact',
    'object_contacts.link_param_my_link_type_contacts.MyLink' => 'My link',
    'object_contacts.link_param_foreign_link_type_contacts.ForeignLink' => 'Foreign link',
    'object_contacts.suggested' => 'Suggested',
    'object_contacts.suggested_param_results_type_Vector t' => 'Results',
    'object_contacts.suggested_param_users_type_Vector t' => 'Users',
    'object_messages.statedMessages' => 'Stated messages',
    'object_messages.statedMessages_param_messages_type_Vector t' => 'Messages',
    'object_messages.statedMessages_param_chats_type_Vector t' => 'Chats',
    'object_messages.statedMessages_param_users_type_Vector t' => 'Users',
    'object_messages.statedMessages_param_pts_type_int' => 'Pts',
    'object_messages.statedMessages_param_seq_type_int' => 'Seq',
    'object_messages.statedMessage' => 'Stated message',
    'object_messages.statedMessage_param_message_type_Message' => 'Message',
    'object_messages.statedMessage_param_chats_type_Vector t' => 'Chats',
    'object_messages.statedMessage_param_users_type_Vector t' => 'Users',
    'object_messages.statedMessage_param_pts_type_int' => 'Pts',
    'object_messages.statedMessage_param_seq_type_int' => 'Seq',
    'object_messages.sentMessage' => 'Sent message',
    'object_messages.sentMessage_param_id_type_int' => 'ID',
    'object_messages.sentMessage_param_date_type_int' => 'Date',
    'object_messages.sentMessage_param_pts_type_int' => 'Pts',
    'object_messages.sentMessage_param_seq_type_int' => 'Seq',
    'object_messages.chats_param_users_type_Vector t' => 'Users',
    'object_messages.affectedHistory_param_seq_type_int' => 'Seq',
    'object_inputMessagesFilterPhotoVideoDocuments' => 'Messages filter photo video documents',
    'object_inputMessagesFilterAudio' => 'Messages filter audio',
    'object_inputMessagesFilterAudioDocuments' => 'Messages filter audio documents',
    'object_updateReadMessages' => 'Update read messages',
    'object_updateReadMessages_param_messages_type_Vector t' => 'Messages',
    'object_updateReadMessages_param_pts_type_int' => 'Pts',
    'object_updateUserStatus' => 'Update user status',
    'object_updateUserStatus_param_user_id_type_int' => 'User ID',
    'object_updateUserStatus_param_status_type_UserStatus' => 'Status',
    'object_updateContactLink_param_my_link_type_contacts.MyLink' => 'My link',
    'object_updateContactLink_param_foreign_link_type_contacts.ForeignLink' => 'Foreign link',
    'object_updateNewAuthorization' => 'Update new authorization',
    'object_updateNewAuthorization_param_auth_key_id_type_long' => 'Auth key ID',
    'object_updateNewAuthorization_param_date_type_int' => 'Date',
    'object_updateNewAuthorization_param_device_type_string' => 'Device',
    'object_updateNewAuthorization_param_location_type_string' => 'Location',
    'object_updateShortMessage_param_from_id_type_int' => 'From ID',
    'object_updateShortMessage_param_seq_type_int' => 'Seq',
    'object_updateShortChatMessage_param_seq_type_int' => 'Seq',
    'object_dcOption_param_hostname_type_string' => 'Hostname',
    'object_config_param_broadcast_size_max_type_int' => 'Broadcast size max',
    'object_messages.statedMessagesLinks' => 'Stated messages links',
    'object_messages.statedMessagesLinks_param_messages_type_Vector t' => 'Messages',
    'object_messages.statedMessagesLinks_param_chats_type_Vector t' => 'Chats',
    'object_messages.statedMessagesLinks_param_users_type_Vector t' => 'Users',
    'object_messages.statedMessagesLinks_param_links_type_Vector t' => 'Links',
    'object_messages.statedMessagesLinks_param_pts_type_int' => 'Pts',
    'object_messages.statedMessagesLinks_param_seq_type_int' => 'Seq',
    'object_messages.statedMessageLink' => 'Stated message link',
    'object_messages.statedMessageLink_param_message_type_Message' => 'Message',
    'object_messages.statedMessageLink_param_chats_type_Vector t' => 'Chats',
    'object_messages.statedMessageLink_param_users_type_Vector t' => 'Users',
    'object_messages.statedMessageLink_param_links_type_Vector t' => 'Links',
    'object_messages.statedMessageLink_param_pts_type_int' => 'Pts',
    'object_messages.statedMessageLink_param_seq_type_int' => 'Seq',
    'object_messages.sentMessageLink' => 'Sent message link',
    'object_messages.sentMessageLink_param_id_type_int' => 'ID',
    'object_messages.sentMessageLink_param_date_type_int' => 'Date',
    'object_messages.sentMessageLink_param_pts_type_int' => 'Pts',
    'object_messages.sentMessageLink_param_seq_type_int' => 'Seq',
    'object_messages.sentMessageLink_param_links_type_Vector t' => 'Links',
    'object_inputMediaUploadedAudio' => 'Media uploaded audio',
    'object_inputMediaUploadedAudio_param_file_type_InputFile' => 'File',
    'object_inputMediaUploadedAudio_param_duration_type_int' => 'Duration',
    'object_inputMediaUploadedAudio_param_mime_type_type_string' => 'Mime type',
    'object_inputMediaAudio' => 'Media audio',
    'object_inputMediaAudio_param_id_type_InputAudio' => 'ID',
    'object_inputMediaUploadedDocument_param_file_name_type_string' => 'File name',
    'object_inputMediaUploadedThumbDocument' => 'Media uploaded thumb document',
    'object_inputMediaUploadedThumbDocument_param_file_type_InputFile' => 'File',
    'object_inputMediaUploadedThumbDocument_param_thumb_type_InputFile' => 'Thumbnail',
    'object_inputMediaUploadedThumbDocument_param_file_name_type_string' => 'File name',
    'object_inputMediaUploadedThumbDocument_param_mime_type_type_string' => 'Mime type',
    'object_messageMediaAudio' => 'Message media audio',
    'object_messageMediaAudio_param_audio_type_Audio' => 'Audio',
    'object_inputAudioEmpty' => 'Empty input audio',
    'object_inputAudio' => 'Audio',
    'object_inputAudio_param_id_type_long' => 'ID',
    'object_inputAudio_param_access_hash_type_long' => 'Access hash',
    'object_inputAudioFileLocation' => 'Audio file location',
    'object_inputAudioFileLocation_param_id_type_long' => 'ID',
    'object_inputAudioFileLocation_param_access_hash_type_long' => 'Access hash',
    'object_audioEmpty' => 'Empty audio',
    'object_audioEmpty_param_id_type_long' => 'ID',
    'object_audio' => 'Audio',
    'object_audio_param_id_type_long' => 'ID',
    'object_audio_param_access_hash_type_long' => 'Access hash',
    'object_audio_param_user_id_type_int' => 'User ID',
    'object_audio_param_date_type_int' => 'Date',
    'object_audio_param_duration_type_int' => 'Duration',
    'object_audio_param_mime_type_type_string' => 'Mime type',
    'object_audio_param_size_type_int' => 'Size',
    'object_audio_param_dc_id_type_int' => 'DC ID',
    'object_document_param_user_id_type_int' => 'User ID',
    'object_document_param_file_name_type_string' => 'File name',
    'object_auth.sentAppCode' => 'Sent app code',
    'object_auth.sentAppCode_param_phone_registered_type_Bool' => 'Phone registered?',
    'object_auth.sentAppCode_param_phone_code_hash_type_string' => 'Phone code hash',
    'object_auth.sentAppCode_param_send_call_timeout_type_int' => 'Send call timeout',
    'object_auth.sentAppCode_param_is_password_type_Bool' => 'Is password?',
    'object_contactFound' => 'Contact found',
    'object_contactFound_param_user_id_type_int' => 'User ID',
    'object_updateServiceNotification_param_popup_type_Bool' => 'Popup?',
    'object_inputMediaUploadedThumbDocument_param_attributes_type_Vector t' => 'Attributes',
    'object_userStatusRecently' => 'User status recently',
    'object_userStatusLastWeek' => 'User status last week',
    'object_userStatusLastMonth' => 'User status last month',
    'object_account.sentChangePhoneCode' => 'Sent change phone code',
    'object_account.sentChangePhoneCode_param_phone_code_hash_type_string' => 'Phone code hash',
    'object_account.sentChangePhoneCode_param_send_call_timeout_type_int' => 'Send call timeout',
    'object_messages.allStickers_param_hash_type_string' => 'Hash',
    'object_messages.allStickers_param_packs_type_Vector t' => 'Packs',
    'object_messages.allStickers_param_documents_type_Vector t' => 'Documents',
    'object_message_param_fwd_from_id_type_int' => 'Forwarded from ID',
    'object_message_param_fwd_date_type_int' => 'Forwarded date',
    'object_chatLocated' => 'Chat located',
    'object_chatLocated_param_chat_id_type_int' => 'Chat ID',
    'object_chatLocated_param_distance_type_int' => 'Distance',
    'object_messages.messageEmpty' => 'Empty message',
    'object_messages.statedMessages_param_pts_count_type_int' => 'Pts count',
    'object_messages.statedMessage_param_pts_count_type_int' => 'Pts count',
    'object_messages.sentMessage_param_pts_count_type_int' => 'Pts count',
    'object_updateReadMessages_param_pts_count_type_int' => 'Pts count',
    'object_updateShortMessage_param_fwd_from_id_type_int' => 'Fwd from ID',
    'object_updateShortMessage_param_fwd_date_type_int' => 'Fwd date',
    'object_updateShortChatMessage_param_fwd_from_id_type_int' => 'Fwd from ID',
    'object_updateShortChatMessage_param_fwd_date_type_int' => 'Fwd date',
    'object_messages.statedMessagesLinks_param_pts_count_type_int' => 'Pts count',
    'object_messages.statedMessageLink_param_pts_count_type_int' => 'Pts count',
    'object_messages.sentMessageLink_param_pts_count_type_int' => 'Pts count',
    'object_inputGeoChat' => 'Geo chat',
    'object_inputGeoChat_param_chat_id_type_int' => 'Chat ID',
    'object_inputGeoChat_param_access_hash_type_long' => 'Access hash',
    'object_inputNotifyGeoChatPeer' => 'Notify geo chat peer',
    'object_inputNotifyGeoChatPeer_param_peer_type_InputGeoChat' => 'Peer',
    'object_geoChat' => 'Geo chat',
    'object_geoChat_param_id_type_int' => 'ID',
    'object_geoChat_param_access_hash_type_long' => 'Access hash',
    'object_geoChat_param_title_type_string' => 'Title',
    'object_geoChat_param_address_type_string' => 'Address',
    'object_geoChat_param_venue_type_string' => 'Venue',
    'object_geoChat_param_geo_type_GeoPoint' => 'Geo',
    'object_geoChat_param_photo_type_ChatPhoto' => 'Photo',
    'object_geoChat_param_participants_count_type_int' => 'Participants count',
    'object_geoChat_param_date_type_int' => 'Date',
    'object_geoChat_param_checked_in_type_Bool' => 'Checked in?',
    'object_geoChat_param_version_type_int' => 'Version',
    'object_geoChatMessageEmpty' => 'Empty geo chat message',
    'object_geoChatMessageEmpty_param_chat_id_type_int' => 'Chat ID',
    'object_geoChatMessageEmpty_param_id_type_int' => 'ID',
    'object_geoChatMessage' => 'Geo chat message',
    'object_geoChatMessage_param_chat_id_type_int' => 'Chat ID',
    'object_geoChatMessage_param_id_type_int' => 'ID',
    'object_geoChatMessage_param_from_id_type_int' => 'From ID',
    'object_geoChatMessage_param_date_type_int' => 'Date',
    'object_geoChatMessage_param_message_type_string' => 'Message',
    'object_geoChatMessage_param_media_type_MessageMedia' => 'Media',
    'object_geoChatMessageService' => 'Geo chat message service',
    'object_geoChatMessageService_param_chat_id_type_int' => 'Chat ID',
    'object_geoChatMessageService_param_id_type_int' => 'ID',
    'object_geoChatMessageService_param_from_id_type_int' => 'From ID',
    'object_geoChatMessageService_param_date_type_int' => 'Date',
    'object_geoChatMessageService_param_action_type_MessageAction' => 'Action',
    'object_geochats.statedMessage' => 'Stated message',
    'object_geochats.statedMessage_param_message_type_GeoChatMessage' => 'Message',
    'object_geochats.statedMessage_param_chats_type_Vector t' => 'Chats',
    'object_geochats.statedMessage_param_users_type_Vector t' => 'Users',
    'object_geochats.statedMessage_param_seq_type_int' => 'Seq',
    'object_geochats.located' => 'Located',
    'object_geochats.located_param_results_type_Vector t' => 'Results',
    'object_geochats.located_param_messages_type_Vector t' => 'Messages',
    'object_geochats.located_param_chats_type_Vector t' => 'Chats',
    'object_geochats.located_param_users_type_Vector t' => 'Users',
    'object_geochats.messages' => 'Messages',
    'object_geochats.messages_param_messages_type_Vector t' => 'Messages',
    'object_geochats.messages_param_chats_type_Vector t' => 'Chats',
    'object_geochats.messages_param_users_type_Vector t' => 'Users',
    'object_geochats.messagesSlice' => 'Messages slice',
    'object_geochats.messagesSlice_param_count_type_int' => 'Count',
    'object_geochats.messagesSlice_param_messages_type_Vector t' => 'Messages',
    'object_geochats.messagesSlice_param_chats_type_Vector t' => 'Chats',
    'object_geochats.messagesSlice_param_users_type_Vector t' => 'Users',
    'object_messageActionGeoChatCreate' => 'Message action geo chat create',
    'object_messageActionGeoChatCreate_param_title_type_string' => 'Title',
    'object_messageActionGeoChatCreate_param_address_type_string' => 'Address',
    'object_messageActionGeoChatCheckin' => 'Message action geo chat checkin',
    'object_updateNewGeoChatMessage' => 'Update new geo chat message',
    'object_updateNewGeoChatMessage_param_message_type_GeoChatMessage' => 'Message',
    'object_messages.sentMessage_param_media_type_MessageMedia' => 'Media',
    'object_messages.sentMessageLink_param_media_type_MessageMedia' => 'Media',
    'object_inputMediaUploadedPhoto_param_caption_type_string' => 'Caption',
    'object_inputMediaPhoto_param_caption_type_string' => 'Caption',
    'object_inputMediaUploadedVideo_param_caption_type_string' => 'Caption',
    'object_inputMediaUploadedThumbVideo_param_caption_type_string' => 'Caption',
    'object_inputMediaVideo_param_caption_type_string' => 'Caption',
    'object_messageMediaPhoto_param_caption_type_string' => 'Caption',
    'object_messageMediaVideo_param_caption_type_string' => 'Caption',
    'object_botCommand' => 'Bot command',
    'object_botCommand_param_command_type_string' => 'Command',
    'object_botCommand_param_description_type_string' => 'Description',
    'object_botInfoEmpty' => 'Empty bot info',
    'object_botInfo_param_version_type_int' => 'Version',
    'object_botInfo_param_share_text_type_string' => 'Share text',
    'object_help.appChangelogEmpty' => 'Empty app changelog',
    'object_help.appChangelog' => 'App changelog',
    'object_help.appChangelog_param_text_type_string' => 'Text',
    'object_message_param_fwd_from_id_type_Peer' => 'Forwarded from ID',
    'object_updateShortMessage_param_fwd_from_id_type_Peer' => 'Fwd from ID',
    'object_updateShortChatMessage_param_fwd_from_id_type_Peer' => 'Fwd from ID',
    'object_channelFull_param_unread_important_count_type_int' => 'Unread important count',
    'object_dialogChannel' => 'Dialog channel',
    'object_dialogChannel_param_peer_type_Peer' => 'Peer',
    'object_dialogChannel_param_top_message_type_int' => 'Top message',
    'object_dialogChannel_param_top_important_message_type_int' => 'Top important message',
    'object_dialogChannel_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
    'object_dialogChannel_param_unread_count_type_int' => 'Unread count',
    'object_dialogChannel_param_unread_important_count_type_int' => 'Unread important count',
    'object_dialogChannel_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
    'object_dialogChannel_param_pts_type_int' => 'Pts',
    'object_messageGroup' => 'Message group',
    'object_messageGroup_param_min_id_type_int' => 'Min ID',
    'object_messageGroup_param_max_id_type_int' => 'Max ID',
    'object_messageGroup_param_count_type_int' => 'Count',
    'object_messageGroup_param_date_type_int' => 'Date',
    'object_messages.channelMessages_param_collapsed_type_Vector t' => 'Collapsed',
    'object_updateChannelGroup' => 'Update channel group',
    'object_updateChannelGroup_param_channel_id_type_int' => 'Channel ID',
    'object_updateChannelGroup_param_group_type_MessageGroup' => 'Group',
    'object_updates.channelDifferenceTooLong_param_top_important_message_type_int' => 'Top important message',
    'object_updates.channelDifferenceTooLong_param_unread_important_count_type_int' => 'Unread important count',
    'object_channelMessagesFilterCollapsed' => 'Channel messages filter collapsed',
    'object_channelParticipantModerator' => 'Channel participant moderator',
    'object_channelParticipantModerator_param_user_id_type_int' => 'User ID',
    'object_channelParticipantModerator_param_inviter_id_type_int' => 'Inviter ID',
    'object_channelParticipantModerator_param_date_type_int' => 'Date',
    'object_channelParticipantEditor' => 'Channel participant editor',
    'object_channelParticipantEditor_param_user_id_type_int' => 'User ID',
    'object_channelParticipantEditor_param_inviter_id_type_int' => 'Inviter ID',
    'object_channelParticipantEditor_param_date_type_int' => 'Date',
    'object_channelParticipantKicked' => 'Channel participant kicked',
    'object_channelParticipantKicked_param_user_id_type_int' => 'User ID',
    'object_channelParticipantKicked_param_kicked_by_type_int' => 'Kicked by',
    'object_channelParticipantKicked_param_date_type_int' => 'Date',
    'object_channelRoleEmpty' => 'Empty channel role',
    'object_channelRoleModerator' => 'Channel role moderator',
    'object_channelRoleEditor' => 'Channel role editor',
    'object_inputChatEmpty' => 'Empty input chat',
    'object_inputChat' => 'Chat',
    'object_inputChat_param_chat_id_type_int' => 'Chat ID',
    'object_updateReadChannelInbox_param_peer_type_Peer' => 'Peer',
    'object_updateDeleteChannelMessages_param_peer_type_Peer' => 'Peer',
    'object_message_param_unread_type_true' => 'Unread?',
    'object_messageService_param_unread_type_true' => 'Unread?',
    'object_updateShortMessage_param_unread_type_true' => 'Unread?',
    'object_updateShortChatMessage_param_unread_type_true' => 'Unread?',
    'object_stickerSet_param_disabled_type_true' => 'Disabled?',
    'object_updateShortSentMessage_param_unread_type_true' => 'Unread?',
    'object_channel_param_kicked_type_true' => 'Kicked?',
    'object_channel_param_moderator_type_true' => 'Moderator?',
    'object_channelMessagesFilter_param_important_only_type_true' => 'Important only?',
    'object_messageActionChatDeactivate' => 'Message action chat deactivate',
    'object_messageActionChatActivate' => 'Message action chat activate',
    'object_user_param_restiction_reason_type_string' => 'Restiction reason',
    'object_channel_param_restiction_reason_type_string' => 'Restiction reason',
    'object_webPageExternal' => 'Web page external',
    'object_webPageExternal_param_url_type_string' => 'URL',
    'object_webPageExternal_param_display_url_type_string' => 'Display URL',
    'object_webPageExternal_param_type_type_string' => 'Type',
    'object_webPageExternal_param_title_type_string' => 'Title',
    'object_webPageExternal_param_description_type_string' => 'Description',
    'object_webPageExternal_param_thumb_url_type_string' => 'Thumbnail URL',
    'object_webPageExternal_param_content_url_type_string' => 'Content URL',
    'object_webPageExternal_param_w_type_int' => 'Width',
    'object_webPageExternal_param_h_type_int' => 'Height',
    'object_webPageExternal_param_duration_type_int' => 'Duration',
    'object_foundGif_param_webpage_type_WebPage' => 'Webpage',
    'object_inputMediaUploadedDocument_param_caption_type_string' => 'Caption',
    'object_inputMediaUploadedThumbDocument_param_caption_type_string' => 'Caption',
    'object_inputMediaDocument_param_caption_type_string' => 'Caption',
    'object_messageMediaDocument_param_caption_type_string' => 'Caption',
    'object_inputBotInlineMessageMediaAuto_param_caption_type_string' => 'Caption',
    'object_botInlineMessageMediaAuto_param_caption_type_string' => 'Caption',
    'object_botInlineMediaResultDocument' => 'Bot inline media result document',
    'object_botInlineMediaResultDocument_param_id_type_string' => 'ID',
    'object_botInlineMediaResultDocument_param_type_type_string' => 'Type',
    'object_botInlineMediaResultDocument_param_document_type_Document' => 'Document',
    'object_botInlineMediaResultDocument_param_send_message_type_BotInlineMessage' => 'Send message',
    'object_botInlineMediaResultPhoto' => 'Bot inline media result photo',
    'object_botInlineMediaResultPhoto_param_id_type_string' => 'ID',
    'object_botInlineMediaResultPhoto_param_type_type_string' => 'Type',
    'object_botInlineMediaResultPhoto_param_photo_type_Photo' => 'Photo',
    'object_botInlineMediaResultPhoto_param_send_message_type_BotInlineMessage' => 'Send message',
    'object_inputMediaVideo_param_video_type_InputVideo' => 'Video',
    'object_inputMediaAudio_param_audio_type_InputAudio' => 'Audio',
    'object_inputMediaDocument_param_document_id_type_InputDocument' => 'Document ID',
    'object_inputGeoPoint_param_latitude_type_double' => 'Latitude',
    'object_inputGeoPoint_param_longitude_type_double' => 'Longitude',
    'object_geoPoint_param_longitude_type_double' => 'Longitude',
    'object_geoPoint_param_latitude_type_double' => 'Latitude',
    'object_updateNewEncryptedMessage_param_encr_message_type_EncryptedMessage' => 'Encr message',
    'object_updateEncryption_param_encr_chat_type_EncryptedChat' => 'Encr chat',
    'object_updateNotifySettings_param_notify_peer_type_NotifyPeer' => 'Notify peer',
    'object_updateServiceNotification_param_message_text_type_string' => 'Message text',
    'object_updateNewChannelMessage_param_channel_pts_type_int' => 'Channel pts',
    'object_updateNewChannelMessage_param_channel_pts_count_type_int' => 'Channel pts count',
    'object_updateDeleteChannelMessages_param_channel_pts_type_int' => 'Channel pts',
    'object_updateDeleteChannelMessages_param_channel_pts_count_type_int' => 'Channel pts count',
    'object_updates.channelDifferenceEmpty_param_channel_pts_type_int' => 'Channel pts',
    'object_updates.channelDifferenceTooLong_param_channel_pts_type_int' => 'Channel pts',
    'object_updates.channelDifference_param_channel_pts_type_int' => 'Channel pts',
    'object_privacyKeyChatInvite' => 'Privacy key chat invite',
    'object_inputMediaUploadedThumbDocument_param_stickers_type_Vector t' => 'Stickers',
    'object_inputMediaPhotoExternal_param_caption_type_string' => 'Caption',
    'object_inputMediaDocumentExternal_param_caption_type_string' => 'Caption',
    'object_destroy_auth_key_ok' => 'Destroy auth key ok',
    'object_destroy_auth_key_none' => 'Destroy auth key none',
    'object_destroy_auth_key_fail' => 'Destroy auth key fail',
    'object_help.appChangelog_param_message_type_string' => 'Message',
    'object_help.appChangelog_param_media_type_MessageMedia' => 'Media',
    'object_help.appChangelog_param_entities_type_Vector t' => 'Entities',
    'object_pageBlockParagraph' => 'Page block paragraph',
    'object_pageBlockParagraph_param_text_type_RichText' => 'Text',
    'object_pageBlockPreformatted' => 'Page block preformatted',
    'object_pageBlockPreformatted_param_text_type_RichText' => 'Text',
    'object_pageBlockPreformatted_param_language_type_string' => 'Language',
    'object_pageBlockDivider' => 'Page block divider',
    'object_pageBlockAnchor' => 'Page block anchor',
    'object_pageBlockAnchor_param_name_type_string' => 'Name',
    'object_pageBlockCover' => 'Page block cover',
    'object_pageBlockCover_param_cover_type_PageBlock' => 'Cover',
    'object_pagePart_param_videos_type_Vector t' => 'Videos',
    'object_pageFull_param_videos_type_Vector t' => 'Videos',
    'object_phoneCallRequested_param_g_a_type_bytes' => 'G a',
    'object_resPQ_param_pq_type_string' => 'Pq',
    'object_p_q_inner_data_param_pq_type_string' => 'Pq',
    'object_p_q_inner_data_param_p_type_string' => 'P',
    'object_p_q_inner_data_param_q_type_string' => 'Q',
    'object_server_DH_params_ok_param_encrypted_answer_type_string' => 'Encrypted answer',
    'object_server_DH_inner_data_param_dh_prime_type_string' => 'Dh prime',
    'object_server_DH_inner_data_param_g_a_type_string' => 'G a',
    'object_client_DH_inner_data_param_g_b_type_string' => 'G b',
    'object_msgs_state_info_param_info_type_string' => 'Info',
    'object_msgs_all_info_param_info_type_string' => 'Info',
    'object_http_wait' => 'Http wait',
    'object_http_wait_param_max_delay_type_int' => 'Max delay',
    'object_http_wait_param_wait_after_type_int' => 'Wait after',
    'object_http_wait_param_max_wait_type_int' => 'Max wait',
    'object_ipPort' => 'Ip port',
    'object_ipPort_param_ipv4_type_int' => 'Ipv4',
    'object_ipPort_param_port_type_int' => 'Port',
    'object_help.configSimple' => 'Config simple',
    'object_help.configSimple_param_date_type_int' => 'Date',
    'object_help.configSimple_param_expires_type_int' => 'Expires',
    'object_help.configSimple_param_dc_id_type_int' => 'DC ID',
    'object_help.configSimple_param_ip_port_list_type_Vector t' => 'Ip port list',
    'object_inputMessagesFilterMyMentionsUnread' => 'Messages filter my mentions unread',
    'method_initConnection_param_proxy_type_InputClientProxy' => 'The current proxy',
    'method_account.registerDevice_param_secret_type_bytes' => 'Secret',
    'method_account.getAllSecureValues' => 'Get all secure telegram passport values',
    'method_account.getSecureValue' => 'Get secure value for telegram passport',
    'method_account.getSecureValue_param_types_type_Vector t' => 'Get telegram passport secure parameters',
    'method_account.saveSecureValue' => 'Save telegram passport secure value',
    'method_account.saveSecureValue_param_value_type_InputSecureValue' => 'Encrypted value',
    'method_account.saveSecureValue_param_secure_secret_id_type_long' => 'Secret',
    'method_account.deleteSecureValue' => 'Delete secure telegram passport value',
    'method_account.deleteSecureValue_param_types_type_Vector t' => 'The values to delete',
    'method_account.getAuthorizationForm' => 'Bots only: get telegram passport authorization form',
    'method_account.getAuthorizationForm_param_bot_id_type_int' => 'Bot ID',
    'method_account.getAuthorizationForm_param_scope_type_string' => 'Scope',
    'method_account.getAuthorizationForm_param_public_key_type_string' => 'Bot\'s public key',
    'method_account.acceptAuthorization' => 'Accept telegram passport authorization',
    'method_account.acceptAuthorization_param_bot_id_type_int' => 'Bot ID',
    'method_account.acceptAuthorization_param_scope_type_string' => 'Scope',
    'method_account.acceptAuthorization_param_public_key_type_string' => 'The bot\'s RSA public key',
    'method_account.acceptAuthorization_param_value_hashes_type_Vector t' => 'Hashes of the encrypted credentials',
    'method_account.acceptAuthorization_param_credentials_type_SecureCredentialsEncrypted' => 'Encrypted secure credentials',
    'method_account.sendVerifyPhoneCode' => 'Send phone verification code',
    'method_account.sendVerifyPhoneCode_param_allow_flashcall_type_true' => 'Allow phone calls?',
    'method_account.sendVerifyPhoneCode_param_phone_number_type_string' => 'The phone number',
    'method_account.sendVerifyPhoneCode_param_current_number_type_Bool' => 'Is this the current number?',
    'method_account.verifyPhone' => 'Verify phone number',
    'method_account.verifyPhone_param_phone_number_type_string' => 'The phone number',
    'method_account.verifyPhone_param_phone_code_hash_type_string' => 'The phone code hash returned by account.sendVerifyPhoneCode',
    'method_account.verifyPhone_param_phone_code_type_string' => 'The phone code type returned by account.sendVerifyPhoneCode',
    'method_account.sendVerifyEmailCode' => 'Send email verification code',
    'method_account.sendVerifyEmailCode_param_email_type_string' => 'Email',
    'method_account.verifyEmail' => 'Verify email address',
    'method_account.verifyEmail_param_email_type_string' => 'The email address',
    'method_account.verifyEmail_param_code_type_string' => 'The received code',
    'method_users.setSecureValueErrors' => 'Set secure value error for telegram passport',
    'method_users.setSecureValueErrors_param_id_type_InputUser' => 'The user ID',
    'method_users.setSecureValueErrors_param_errors_type_Vector t' => 'The errors',
    'method_messages.search_param_hash_type_int' => 'IDs of messages you already fetched',
    'method_messages.report' => 'Report a message',
    'method_messages.report_param_peer_type_InputPeer' => 'The user that sent the messages',
    'method_messages.report_param_id_type_Vector t' => 'The messages to report',
    'method_messages.report_param_reason_type_ReportReason' => 'The reason why you\'re sending this report',
    'method_messages.getStickers_param_hash_type_int' => 'IDs of previously fetched stickers',
    'method_messages.editMessage_param_media_type_InputMedia' => 'The media to substitute',
    'method_messages.editInlineBotMessage_param_media_type_InputMedia' => 'The media to substitute',
    'method_messages.toggleDialogPin_param_peer_type_InputDialogPeer' => 'The dialog to pin',
    'method_messages.getRecentLocations_param_hash_type_int' => 'IDs of previously fetched locations',
    'method_messages.searchStickerSets' => 'Find a sticker set',
    'method_messages.searchStickerSets_param_exclude_featured_type_true' => 'Exclude featured sticker sets from the search?',
    'method_messages.searchStickerSets_param_q_type_string' => 'The search query',
    'method_messages.searchStickerSets_param_hash_type_int' => 'Ids of stickers you already cached',
    'method_upload.getFileHashes' => 'Get file hashes',
    'method_upload.getFileHashes_param_location_type_InputFileLocation' => 'The file',
    'method_upload.getFileHashes_param_offset_type_int' => 'Offset',
    'method_help.getProxyData' => 'Get information about the current proxy',
    'method_help.getTermsOfServiceUpdate' => 'Get updated TOS',
    'method_help.acceptTermsOfService' => 'Accept telegram\'s TOS',
    'method_help.acceptTermsOfService_param_id_type_DataJSON' => 'TOS',
    'method_help.getDeepLinkInfo' => 'Get deep link info',
    'method_help.getDeepLinkInfo_param_path_type_string' => 'Deep link',
    'object_inputSecureFileLocation' => 'Secure file location',
    'object_inputSecureFileLocation_param_id_type_long' => 'ID',
    'object_inputSecureFileLocation_param_access_hash_type_long' => 'Access hash',
    'object_messageActionBotAllowed' => 'Message action bot allowed',
    'object_messageActionBotAllowed_param_domain_type_string' => 'Domain',
    'object_messageActionSecureValuesSentMe' => 'Message action secure values sent me',
    'object_messageActionSecureValuesSentMe_param_values_type_Vector t' => 'Values',
    'object_messageActionSecureValuesSentMe_param_credentials_type_SecureCredentialsEncrypted' => 'Credentials',
    'object_messageActionSecureValuesSent' => 'Message action secure values sent',
    'object_messageActionSecureValuesSent_param_types_type_Vector t' => 'Types',
    'object_auth.sentCode_param_terms_of_service_type_help.TermsOfService' => 'Terms of service',
    'object_inputPeerNotifySettings_param_silent_type_Bool' => 'Silent?',
    'object_peerNotifySettings_param_silent_type_Bool' => 'Silent?',
    'object_updateDialogPinned_param_peer_type_DialogPeer' => 'Peer',
    'object_upload.fileCdnRedirect_param_file_hashes_type_Vector t' => 'File hashes',
    'object_dcOption_param_secret_type_bytes' => 'Secret',
    'object_config_param_preload_featured_stickers_type_true' => 'Preload featured stickers?',
    'object_config_param_ignore_phone_entities_type_true' => 'Ignore phone entities?',
    'object_config_param_revoke_pm_inbox_type_true' => 'Revoke pm inbox?',
    'object_config_param_blocked_mode_type_true' => 'Blocked mode?',
    'object_config_param_revoke_time_limit_type_int' => 'Revoke time limit',
    'object_config_param_revoke_pm_time_limit_type_int' => 'Revoke pm time limit',
    'object_config_param_autoupdate_url_prefix_type_string' => 'Autoupdate URL prefix',
    'object_messages.stickers_param_hash_type_int' => 'Hash',
    'object_account.noPassword_param_new_secure_salt_type_bytes' => 'New secure salt',
    'object_account.noPassword_param_secure_random_type_bytes' => 'Secure random',
    'object_account.password_param_has_recovery_type_true' => 'Has recovery?',
    'object_account.password_param_has_secure_values_type_true' => 'Has secure values?',
    'object_account.password_param_new_secure_salt_type_bytes' => 'New secure salt',
    'object_account.password_param_secure_random_type_bytes' => 'Secure random',
    'object_account.passwordSettings_param_secure_salt_type_bytes' => 'Secure salt',
    'object_account.passwordSettings_param_secure_secret_type_bytes' => 'Secure secret',
    'object_account.passwordSettings_param_secure_secret_id_type_long' => 'Secure secret ID',
    'object_account.passwordInputSettings_param_new_secure_salt_type_bytes' => 'New secure salt',
    'object_account.passwordInputSettings_param_new_secure_secret_type_bytes' => 'New secure secret',
    'object_account.passwordInputSettings_param_new_secure_secret_id_type_long' => 'New secure secret ID',
    'object_stickerSet_param_installed_date_type_int' => 'Installed date',
    'object_messageEntityPhone' => 'Message entity phone',
    'object_messageEntityPhone_param_offset_type_int' => 'Offset',
    'object_messageEntityPhone_param_length_type_int' => 'Length',
    'object_messageEntityCashtag' => 'Message entity cashtag',
    'object_messageEntityCashtag_param_offset_type_int' => 'Offset',
    'object_messageEntityCashtag_param_length_type_int' => 'Length',
    'object_help.termsOfService_param_popup_type_true' => 'Popup?',
    'object_help.termsOfService_param_id_type_DataJSON' => 'ID',
    'object_help.termsOfService_param_entities_type_Vector t' => 'Entities',
    'object_help.termsOfService_param_min_age_confirm_type_int' => 'Min age confirm',
    'object_inputBotInlineMessageMediaVenue_param_venue_type_type_string' => 'Venue type',
    'object_inputBotInlineResult_param_thumb_type_InputWebDocument' => 'Thumbnail',
    'object_inputBotInlineResult_param_content_type_InputWebDocument' => 'Content',
    'object_botInlineMessageMediaVenue_param_venue_type_type_string' => 'Venue type',
    'object_botInlineResult_param_thumb_type_WebDocument' => 'Thumbnailnail',
    'object_botInlineResult_param_content_type_WebDocument' => 'Content',
    'object_messages.recentStickers_param_packs_type_Vector t' => 'Packs',
    'object_messages.recentStickers_param_dates_type_Vector t' => 'Dates',
    'object_webDocumentNoProxy' => 'Web document no proxy',
    'object_webDocumentNoProxy_param_url_type_string' => 'URL',
    'object_webDocumentNoProxy_param_size_type_int' => 'Size',
    'object_webDocumentNoProxy_param_mime_type_type_string' => 'Mime type',
    'object_webDocumentNoProxy_param_attributes_type_Vector t' => 'Attributes',
    'object_inputWebFileGeoPointLocation' => 'Web file geo point location',
    'object_inputWebFileGeoPointLocation_param_geo_point_type_InputGeoPoint' => 'Geo point',
    'object_inputWebFileGeoPointLocation_param_w_type_int' => 'Width',
    'object_inputWebFileGeoPointLocation_param_h_type_int' => 'Height',
    'object_inputWebFileGeoPointLocation_param_zoom_type_int' => 'Zoom',
    'object_inputWebFileGeoPointLocation_param_scale_type_int' => 'Scale',
    'object_inputWebFileGeoMessageLocation' => 'Web file geo message location',
    'object_inputWebFileGeoMessageLocation_param_peer_type_InputPeer' => 'Peer',
    'object_inputWebFileGeoMessageLocation_param_msg_id_type_int' => 'Msg ID',
    'object_inputWebFileGeoMessageLocation_param_w_type_int' => 'Width',
    'object_inputWebFileGeoMessageLocation_param_h_type_int' => 'Height',
    'object_inputWebFileGeoMessageLocation_param_zoom_type_int' => 'Zoom',
    'object_inputWebFileGeoMessageLocation_param_scale_type_int' => 'Scale',
    'object_channelAdminRights_param_manage_call_type_true' => 'Manage group calls',
    'object_inputDialogPeer' => 'Dialog peer',
    'object_inputDialogPeer_param_peer_type_InputPeer' => 'Peer',
    'object_dialogPeer' => 'Dialog peer',
    'object_dialogPeer_param_peer_type_Peer' => 'Peer',
    'object_messages.foundStickerSetsNotModified' => 'Found sticker sets not modified',
    'object_messages.foundStickerSets' => 'Found sticker sets',
    'object_messages.foundStickerSets_param_hash_type_int' => 'Hash',
    'object_messages.foundStickerSets_param_sets_type_Vector t' => 'Sets',
    'object_fileHash' => 'File hash',
    'object_fileHash_param_offset_type_int' => 'Offset',
    'object_fileHash_param_limit_type_int' => 'Limit',
    'object_fileHash_param_hash_type_bytes' => 'Hash',
    'object_inputClientProxy' => 'Client proxy',
    'object_inputClientProxy_param_address_type_string' => 'Address',
    'object_inputClientProxy_param_port_type_int' => 'Port',
    'object_help.proxyDataEmpty' => 'Empty proxy data',
    'object_help.proxyDataEmpty_param_expires_type_int' => 'Expires',
    'object_help.proxyDataPromo' => 'Proxy data promo',
    'object_help.proxyDataPromo_param_expires_type_int' => 'Expires',
    'object_help.proxyDataPromo_param_peer_type_Peer' => 'Peer',
    'object_help.proxyDataPromo_param_chats_type_Vector t' => 'Chats',
    'object_help.proxyDataPromo_param_users_type_Vector t' => 'Users',
    'object_help.termsOfServiceUpdateEmpty' => 'Empty terms of service update',
    'object_help.termsOfServiceUpdateEmpty_param_expires_type_int' => 'Expires',
    'object_help.termsOfServiceUpdate' => 'Terms of service update',
    'object_help.termsOfServiceUpdate_param_expires_type_int' => 'Expires',
    'object_help.termsOfServiceUpdate_param_terms_of_service_type_help.TermsOfService' => 'Terms of service',
    'object_inputSecureFileUploaded' => 'Secure file uploaded',
    'object_inputSecureFileUploaded_param_id_type_long' => 'ID',
    'object_inputSecureFileUploaded_param_parts_type_int' => 'Parts',
    'object_inputSecureFileUploaded_param_md5_checksum_type_string' => 'Md5 checksum',
    'object_inputSecureFileUploaded_param_file_hash_type_bytes' => 'File hash',
    'object_inputSecureFileUploaded_param_secret_type_bytes' => 'Secret',
    'object_inputSecureFile' => 'Secure file',
    'object_inputSecureFile_param_id_type_long' => 'ID',
    'object_inputSecureFile_param_access_hash_type_long' => 'Access hash',
    'object_secureFileEmpty' => 'Empty secure file',
    'object_secureFile' => 'Secure file',
    'object_secureFile_param_id_type_long' => 'ID',
    'object_secureFile_param_access_hash_type_long' => 'Access hash',
    'object_secureFile_param_size_type_int' => 'Size',
    'object_secureFile_param_dc_id_type_int' => 'DC ID',
    'object_secureFile_param_date_type_int' => 'Date',
    'object_secureFile_param_file_hash_type_bytes' => 'File hash',
    'object_secureFile_param_secret_type_bytes' => 'Secret',
    'object_secureData' => 'Secure data',
    'object_secureData_param_data_type_bytes' => 'Data',
    'object_secureData_param_data_hash_type_bytes' => 'Data hash',
    'object_secureData_param_secret_type_bytes' => 'Secret',
    'object_securePlainPhone' => 'Secure plain phone',
    'object_securePlainPhone_param_phone_type_string' => 'Phone',
    'object_securePlainEmail' => 'Secure plain email',
    'object_securePlainEmail_param_email_type_string' => 'Email',
    'object_secureValueTypePersonalDetails' => 'Secure value type personal details',
    'object_secureValueTypePassport' => 'Secure value type passport',
    'object_secureValueTypeDriverLicense' => 'Secure value type driver license',
    'object_secureValueTypeIdentityCard' => 'Secure value type IDentity card',
    'object_secureValueTypeInternalPassport' => 'Secure value type internal passport',
    'object_secureValueTypeAddress' => 'Secure value type address',
    'object_secureValueTypeUtilityBill' => 'Secure value type utility bill',
    'object_secureValueTypeBankStatement' => 'Secure value type bank statement',
    'object_secureValueTypeRentalAgreement' => 'Secure value type rental agreement',
    'object_secureValueTypePassportRegistration' => 'Secure value type passport registration',
    'object_secureValueTypeTemporaryRegistration' => 'Secure value type temporary registration',
    'object_secureValueTypePhone' => 'Secure value type phone',
    'object_secureValueTypeEmail' => 'Secure value type email',
    'object_secureValue' => 'Secure value',
    'object_secureValue_param_type_type_SecureValueType' => 'Type',
    'object_secureValue_param_data_type_SecureData' => 'Data',
    'object_secureValue_param_front_side_type_SecureFile' => 'Front side',
    'object_secureValue_param_reverse_side_type_SecureFile' => 'Reverse side',
    'object_secureValue_param_selfie_type_SecureFile' => 'Selfie',
    'object_secureValue_param_files_type_Vector t' => 'Files',
    'object_secureValue_param_plain_data_type_SecurePlainData' => 'Plain data',
    'object_secureValue_param_hash_type_bytes' => 'Hash',
    'object_inputSecureValue' => 'Secure value',
    'object_inputSecureValue_param_type_type_SecureValueType' => 'Type',
    'object_inputSecureValue_param_data_type_SecureData' => 'Data',
    'object_inputSecureValue_param_front_side_type_InputSecureFile' => 'Front side',
    'object_inputSecureValue_param_reverse_side_type_InputSecureFile' => 'Reverse side',
    'object_inputSecureValue_param_selfie_type_InputSecureFile' => 'Selfie',
    'object_inputSecureValue_param_files_type_Vector t' => 'Files',
    'object_inputSecureValue_param_plain_data_type_SecurePlainData' => 'Plain data',
    'object_secureValueHash' => 'Secure value hash',
    'object_secureValueHash_param_type_type_SecureValueType' => 'Type',
    'object_secureValueHash_param_hash_type_bytes' => 'Hash',
    'object_secureValueErrorData' => 'Secure value error data',
    'object_secureValueErrorData_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorData_param_data_hash_type_bytes' => 'Data hash',
    'object_secureValueErrorData_param_field_type_string' => 'Field',
    'object_secureValueErrorData_param_text_type_string' => 'Text',
    'object_secureValueErrorFrontSide' => 'Secure value error front side',
    'object_secureValueErrorFrontSide_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorFrontSide_param_file_hash_type_bytes' => 'File hash',
    'object_secureValueErrorFrontSide_param_text_type_string' => 'Text',
    'object_secureValueErrorReverseSide' => 'Secure value error reverse side',
    'object_secureValueErrorReverseSide_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorReverseSide_param_file_hash_type_bytes' => 'File hash',
    'object_secureValueErrorReverseSide_param_text_type_string' => 'Text',
    'object_secureValueErrorSelfie' => 'Secure value error selfie',
    'object_secureValueErrorSelfie_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorSelfie_param_file_hash_type_bytes' => 'File hash',
    'object_secureValueErrorSelfie_param_text_type_string' => 'Text',
    'object_secureValueErrorFile' => 'Secure value error file',
    'object_secureValueErrorFile_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorFile_param_file_hash_type_bytes' => 'File hash',
    'object_secureValueErrorFile_param_text_type_string' => 'Text',
    'object_secureValueErrorFiles' => 'Secure value error files',
    'object_secureValueErrorFiles_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorFiles_param_file_hash_type_Vector t' => 'File hash',
    'object_secureValueErrorFiles_param_text_type_string' => 'Text',
    'object_secureCredentialsEncrypted' => 'Secure credentials encrypted',
    'object_secureCredentialsEncrypted_param_data_type_bytes' => 'Data',
    'object_secureCredentialsEncrypted_param_hash_type_bytes' => 'Hash',
    'object_secureCredentialsEncrypted_param_secret_type_bytes' => 'Secret',
    'object_account.authorizationForm' => 'Telegram passport authorization form',
    'object_account.authorizationForm_param_selfie_required_type_true' => 'Selfie required?',
    'object_account.authorizationForm_param_required_types_type_Vector t' => 'Required types',
    'object_account.authorizationForm_param_values_type_Vector t' => 'Values',
    'object_account.authorizationForm_param_errors_type_Vector t' => 'Errors',
    'object_account.authorizationForm_param_users_type_Vector t' => 'Users',
    'object_account.authorizationForm_param_privacy_policy_url_type_string' => 'Privacy policy URL',
    'object_account.sentEmailCode' => 'Sent email code',
    'object_account.sentEmailCode_param_email_pattern_type_string' => 'Email pattern',
    'object_account.sentEmailCode_param_length_type_int' => 'Length',
    'object_help.deepLinkInfoEmpty' => 'Empty deep link info',
    'object_help.deepLinkInfo' => 'Deep link info',
    'object_help.deepLinkInfo_param_update_app_type_true' => 'Update app?',
    'object_help.deepLinkInfo_param_message_type_string' => 'Message',
    'object_help.deepLinkInfo_param_entities_type_Vector t' => 'Entities',
    'method_invokeWithMessagesRange' => 'Invoke with messages range',
    'method_invokeWithMessagesRange_param_range_type_MessageRange' => 'The range',
    'method_invokeWithMessagesRange_param_query_type_!X' => 'The query',
    'method_invokeWithTakeout' => 'Invoke method from takeout session',
    'method_invokeWithTakeout_param_takeout_id_type_long' => 'The takeout session ID',
    'method_invokeWithTakeout_param_query_type_!X' => 'The query',
    'method_account.initTakeoutSession' => 'Start account exporting session',
    'method_account.initTakeoutSession_param_contacts_type_true' => 'Export contacts?',
    'method_account.initTakeoutSession_param_message_users_type_true' => 'Export users?',
    'method_account.initTakeoutSession_param_message_chats_type_true' => 'Export chats?',
    'method_account.initTakeoutSession_param_message_megagroups_type_true' => 'Export supergroups?',
    'method_account.initTakeoutSession_param_message_channels_type_true' => 'Export channel messages?',
    'method_account.initTakeoutSession_param_files_type_true' => 'Export files?',
    'method_account.initTakeoutSession_param_file_max_size_type_int' => 'Export only files smaller than this size',
    'method_account.finishTakeoutSession' => 'Finish account exporting session',
    'method_account.finishTakeoutSession_param_success_type_true' => 'Did the data export succeed?',
    'method_contacts.getSaved' => 'Get saved contacts',
    'method_messages.getSplitRanges' => 'Get message ranges to fetch',
    'method_channels.getLeftChannels' => 'Get all channels you left',
    'method_channels.getLeftChannels_param_offset_type_int' => 'Offset',
    'object_ipPortSecret' => 'Ip port secret',
    'object_ipPortSecret_param_ipv4_type_int' => 'Ipv4',
    'object_ipPortSecret_param_port_type_int' => 'Port',
    'object_ipPortSecret_param_secret_type_bytes' => 'Secret',
    'object_accessPointRule' => 'Access point rule',
    'object_accessPointRule_param_phone_prefix_rules_type_string' => 'Phone prefix rules',
    'object_accessPointRule_param_dc_id_type_int' => 'DC ID',
    'object_accessPointRule_param_ips_type_vector' => 'Ips',
    'object_help.configSimple_param_rules_type_vector' => 'Rules',
    'object_inputTakeoutFileLocation' => 'Takeout file location',
    'object_savedPhoneContact' => 'Saved phone contact',
    'object_savedPhoneContact_param_phone_type_string' => 'Phone',
    'object_savedPhoneContact_param_first_name_type_string' => 'First name',
    'object_savedPhoneContact_param_last_name_type_string' => 'Last name',
    'object_savedPhoneContact_param_date_type_int' => 'Date',
    'object_account.takeout' => 'Takeout',
    'object_account.takeout_param_id_type_long' => 'ID',
    'method_contacts.toggleTopPeers' => 'Toggle top peers',
    'method_contacts.toggleTopPeers_param_enabled_type_Bool' => 'Enable or disable top peer',
    'method_messages.getDialogs_param_hash_type_int' => 'IDs of previously fetched dialogs',
    'method_messages.markDialogUnread' => 'Mark dialog as unread ',
    'method_messages.markDialogUnread_param_unread_type_true' => 'Should it be marked or unmarked as read',
    'method_messages.markDialogUnread_param_peer_type_InputDialogPeer' => 'The dialog to mark as unread',
    'method_messages.getDialogUnreadMarks' => 'Get dialogs marked as unread manually',
    'object_inputMediaContact_param_vcard_type_string' => 'Vcard',
    'object_messageMediaContact_param_vcard_type_string' => 'Vcard',
    'object_dialog_param_unread_mark_type_true' => 'Unread mark?',
    'object_geoPoint_param_access_hash_type_long' => 'Access hash',
    'object_messages.dialogsNotModified' => 'Dialogs not modified',
    'object_messages.dialogsNotModified_param_count_type_int' => 'Count',
    'object_updateDialogUnreadMark' => 'Update dialog unread mark',
    'object_updateDialogUnreadMark_param_unread_type_true' => 'Unread?',
    'object_updateDialogUnreadMark_param_peer_type_DialogPeer' => 'Peer',
    'object_config_param_dc_txt_domain_name_type_string' => 'DC txt domain name',
    'object_config_param_gif_search_username_type_string' => 'Gif search username',
    'object_config_param_venue_search_username_type_string' => 'Venue search username',
    'object_config_param_img_search_username_type_string' => 'Img search username',
    'object_config_param_static_maps_provider_type_string' => 'Static maps provider',
    'object_config_param_caption_length_max_type_int' => 'Caption length max',
    'object_config_param_message_length_max_type_int' => 'Message length max',
    'object_config_param_webfile_dc_id_type_int' => 'Webfile DC ID',
    'object_inputBotInlineMessageMediaContact_param_vcard_type_string' => 'Vcard',
    'object_botInlineMessageMediaContact_param_vcard_type_string' => 'Vcard',
    'object_contacts.topPeersDisabled' => 'Top peers disabled',
    'object_draftMessageEmpty_param_date_type_int' => 'Date',
    'object_inputWebFileGeoPointLocation_param_access_hash_type_long' => 'Access hash',
    'method_contacts.getContacts_param_hash_type_Vector t' => 'User IDs of previously cached contacts',
    'method_contacts.getTopPeers_param_hash_type_Vector t' => 'Peer IDs of previously cached peers',
    'method_messages.getDialogs_param_hash_type_Vector t' => 'IDs of previously fetched dialogs',
    'method_messages.getHistory_param_hash_type_Vector t' => 'IDs of messages you already fetched',
    'method_messages.search_param_hash_type_Vector t' => 'The IDs of messages you already fetched',
    'method_messages.getStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
    'method_messages.getAllStickers_param_hash_type_Vector t' => 'The hash parameter of the previous result of this method',
    'method_messages.getSavedGifs_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
    'method_messages.getFeaturedStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
    'method_messages.getRecentStickers_param_hash_type_Vector t' => 'IDs the hash parameter of the previous result of this method',
    'method_messages.getMaskStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
    'method_messages.getWebPage_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
    'method_messages.getFavedStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
    'method_messages.getRecentLocations_param_hash_type_Vector t' => 'IDs of locations you already fetched',
    'method_messages.searchStickerSets_param_hash_type_Vector t' => 'The IDs of stickersets you already fetched',
    'method_channels.getParticipants_param_hash_type_Vector t' => 'IDs of previously fetched participants',
    'method_auth.checkPassword_param_password_type_InputCheckPasswordSRP' => 'You cannot use this method directly, use the complete_2fa_login method instead (see https://docs.madelineproto.xyz for more info)',
    'method_account.getPasswordSettings_param_password_type_InputCheckPasswordSRP' => 'You cannot use this method directly; use $MadelineProto->update_2fa($params), instead (see https://docs.madelineproto.xyz for more info)',
    'method_account.updatePasswordSettings_param_password_type_InputCheckPasswordSRP' => 'You cannot use this method directly; use $MadelineProto->update_2fa($params), instead (see https://docs.madelineproto.xyz for more info)',
    'method_account.getTmpPassword_param_password_type_InputCheckPasswordSRP' => 'Password',
    'method_account.confirmPasswordEmail' => 'Confirm password recovery using email',
    'method_account.confirmPasswordEmail_param_code_type_string' => 'Code',
    'method_account.resendPasswordEmail' => 'Resend password recovery email',
    'method_account.cancelPasswordEmail' => 'Cancel password recovery email',
    'method_account.getContactSignUpNotification' => 'Contact signup notification setting value',
    'method_account.setContactSignUpNotification' => 'Set contact sign up notification',
    'method_account.setContactSignUpNotification_param_silent_type_Bool' => 'Silent?',
    'method_account.getNotifyExceptions' => 'Get notification exceptions',
    'method_account.getNotifyExceptions_param_compare_sound_type_true' => 'Compare sound?',
    'method_account.getNotifyExceptions_param_peer_type_InputNotifyPeer' => 'Peer',
    'method_contacts.getContactIDs' => 'Get contacts by IDs',
    'method_contacts.getContactIDs_param_hash_type_Vector t' => 'Previously fetched IDs',
    'method_contacts.deleteByPhones' => 'Delete contacts by phones',
    'method_contacts.deleteByPhones_param_phones_type_Vector t' => 'Phones',
    'method_messages.sendInlineBotResult_param_hide_via_type_true' => 'Hide "via @bot"',
    'method_messages.clearAllDrafts' => 'Clear all drafts',
    'method_messages.updatePinnedMessage' => 'Update pinned message (private chat only)',
    'method_messages.updatePinnedMessage_param_silent_type_true' => 'Silent?',
    'method_messages.updatePinnedMessage_param_peer_type_InputPeer' => 'Peer',
    'method_messages.updatePinnedMessage_param_id_type_int' => 'Message ID',
    'method_messages.sendVote' => 'Send vote',
    'method_messages.sendVote_param_peer_type_InputPeer' => 'Peer',
    'method_messages.sendVote_param_msg_id_type_int' => 'Message ID',
    'method_messages.sendVote_param_options_type_Vector t' => 'Options',
    'method_messages.getPollResults' => 'Get poll results',
    'method_messages.getPollResults_param_peer_type_InputPeer' => 'Peer',
    'method_messages.getPollResults_param_msg_id_type_int' => 'Message ID',
    'method_messages.getOnlines' => 'Get online users',
    'method_messages.getOnlines_param_peer_type_InputPeer' => 'Peer',
    'method_messages.getStatsURL' => 'Get stats URL',
    'method_messages.getStatsURL_param_peer_type_InputPeer' => 'Peer',
    'method_help.getAppUpdate_param_source_type_string' => 'Source',
    'method_help.getAppConfig' => 'Get app config',
    'method_help.getPassportConfig' => 'Get passport config',
    'method_help.getPassportConfig_param_hash_type_Vector t' => 'Hash',
    'method_help.getSupportName' => 'Get support name',
    'method_help.getUserInfo' => 'Get user info',
    'method_help.getUserInfo_param_user_id_type_InputUser' => 'User ID',
    'method_help.editUserInfo' => 'Edit user info',
    'method_help.editUserInfo_param_user_id_type_InputUser' => 'User ID',
    'method_help.editUserInfo_param_message_type_string' => 'Message',
    'method_help.editUserInfo_param_entities_type_Vector t' => 'Entities',
    'method_langpack.getLangPack_param_lang_pack_type_string' => 'Lang pack',
    'method_langpack.getStrings_param_lang_pack_type_string' => 'Lang pack',
    'method_langpack.getDifference_param_lang_code_type_string' => 'Lang code',
    'method_langpack.getLanguages_param_lang_pack_type_string' => 'Lang pack',
    'method_langpack.getLanguage' => 'Get language',
    'method_langpack.getLanguage_param_lang_pack_type_string' => 'Lang pack',
    'method_langpack.getLanguage_param_lang_code_type_string' => 'Lang code',
    'object_inputMediaGeoLive_param_stopped_type_true' => 'Stopped?',
    'object_inputMediaPoll' => 'Media poll',
    'object_inputMediaPoll_param_poll_type_Poll' => 'Poll',
    'object_inputPhoto_param_file_reference_type_bytes' => 'File reference',
    'object_inputFileLocation_param_file_reference_type_bytes' => 'File reference',
    'object_inputDocumentFileLocation_param_file_reference_type_bytes' => 'File reference',
    'object_fileLocation_param_file_reference_type_bytes' => 'File reference',
    'object_chatFull_param_pinned_msg_id_type_int' => 'Pinned msg ID',
    'object_channelFull_param_can_view_stats_type_true' => 'Can view stats?',
    'object_channelFull_param_online_count_type_int' => 'Online count',
    'object_message_param_from_scheduled_type_true' => 'From scheduled?',
    'object_messageMediaPoll' => 'Message media poll',
    'object_messageMediaPoll_param_poll_type_Poll' => 'Poll',
    'object_messageMediaPoll_param_results_type_PollResults' => 'Results',
    'object_messageActionContactSignUp' => 'Message action contact sign up',
    'object_photo_param_file_reference_type_bytes' => 'File reference',
    'object_inputNotifyBroadcasts' => 'Notify broadcasts',
    'object_inputReportReasonChildAbuse' => 'Report reason child abuse',
    'object_inputReportReasonCopyright' => 'Report reason copyright',
    'object_userFull_param_can_pin_message_type_true' => 'Can pin message?',
    'object_userFull_param_pinned_msg_id_type_int' => 'Pinned msg ID',
    'object_messages.channelMessages_param_inexact_type_true' => 'Inexact?',
    'object_updateLangPackTooLong_param_lang_code_type_string' => 'Lang code',
    'object_updateUserPinnedMessage' => 'Update user pinned message',
    'object_updateUserPinnedMessage_param_user_id_type_int' => 'User ID',
    'object_updateUserPinnedMessage_param_id_type_int' => 'ID',
    'object_updateChatPinnedMessage' => 'Update chat pinned message',
    'object_updateChatPinnedMessage_param_chat_id_type_int' => 'Chat ID',
    'object_updateChatPinnedMessage_param_id_type_int' => 'ID',
    'object_updateMessagePoll' => 'Update message poll',
    'object_updateMessagePoll_param_poll_id_type_long' => 'Poll ID',
    'object_updateMessagePoll_param_poll_type_Poll' => 'Poll',
    'object_updateMessagePoll_param_results_type_PollResults' => 'Results',
    'object_config_param_pfs_enabled_type_true' => 'Pfs enabled?',
    'object_config_param_base_lang_pack_version_type_int' => 'Base lang pack version',
    'object_help.appUpdate_param_popup_type_true' => 'Popup?',
    'object_help.appUpdate_param_version_type_string' => 'Version',
    'object_help.appUpdate_param_entities_type_Vector t' => 'Entities',
    'object_help.appUpdate_param_document_type_Document' => 'Document',
    'object_inputDocument_param_file_reference_type_bytes' => 'File reference',
    'object_document_param_file_reference_type_bytes' => 'File reference',
    'object_notifyBroadcasts' => 'Notify broadcasts',
    'object_inputPrivacyKeyPhoneP2P' => 'Privacy key phone p2p',
    'object_privacyKeyPhoneP2P' => 'Privacy key phone p2p',
    'object_authorization_param_current_type_true' => 'Current?',
    'object_authorization_param_official_app_type_true' => 'Official app?',
    'object_authorization_param_password_pending_type_true' => 'Password pending?',
    'object_account.password_param_has_password_type_true' => 'Has password?',
    'object_account.password_param_current_algo_type_PasswordKdfAlgo' => 'Current algo',
    'object_account.password_param_srp_B_type_bytes' => 'Srp b',
    'object_account.password_param_srp_id_type_long' => 'Srp ID',
    'object_account.password_param_new_algo_type_PasswordKdfAlgo' => 'New algo',
    'object_account.password_param_new_secure_algo_type_SecurePasswordKdfAlgo' => 'New secure algo',
    'object_account.passwordSettings_param_secure_settings_type_SecureSecretSettings' => 'Secure settings',
    'object_account.passwordInputSettings_param_new_algo_type_PasswordKdfAlgo' => 'New algo',
    'object_account.passwordInputSettings_param_new_secure_settings_type_SecureSecretSettings' => 'New secure settings',
    'object_textSubscript' => 'Text subscript',
    'object_textSubscript_param_text_type_RichText' => 'Text',
    'object_textSuperscript' => 'Text superscript',
    'object_textSuperscript_param_text_type_RichText' => 'Text',
    'object_textMarked' => 'Text marked',
    'object_textMarked_param_text_type_RichText' => 'Text',
    'object_textPhone' => 'Text phone',
    'object_textPhone_param_text_type_RichText' => 'Text',
    'object_textPhone_param_phone_type_string' => 'Phone',
    'object_textImage' => 'Text image',
    'object_textImage_param_document_id_type_long' => 'Document ID',
    'object_textImage_param_w_type_int' => 'Width',
    'object_textImage_param_h_type_int' => 'Height',
    'object_textAnchor' => 'Text anchor',
    'object_textAnchor_param_text_type_RichText' => 'Text',
    'object_textAnchor_param_name_type_string' => 'Name',
    'object_pageBlockPhoto_param_caption_type_PageCaption' => 'Caption',
    'object_pageBlockPhoto_param_url_type_string' => 'URL',
    'object_pageBlockPhoto_param_webpage_id_type_long' => 'Webpage ID',
    'object_pageBlockVideo_param_caption_type_PageCaption' => 'Caption',
    'object_pageBlockEmbed_param_caption_type_PageCaption' => 'Caption',
    'object_pageBlockEmbedPost_param_caption_type_PageCaption' => 'Caption',
    'object_pageBlockCollage_param_caption_type_PageCaption' => 'Caption',
    'object_pageBlockSlideshow_param_caption_type_PageCaption' => 'Caption',
    'object_pageBlockAudio_param_caption_type_PageCaption' => 'Caption',
    'object_pageBlockKicker' => 'Page block kicker',
    'object_pageBlockKicker_param_text_type_RichText' => 'Text',
    'object_pageBlockTable' => 'Page block table',
    'object_pageBlockTable_param_bordered_type_true' => 'Bordered?',
    'object_pageBlockTable_param_striped_type_true' => 'Striped?',
    'object_pageBlockTable_param_title_type_RichText' => 'Title',
    'object_pageBlockTable_param_rows_type_Vector t' => 'Rows',
    'object_pageBlockOrderedList' => 'Page block ordered list',
    'object_pageBlockOrderedList_param_items_type_Vector t' => 'Items',
    'object_pageBlockDetails' => 'Page block details',
    'object_pageBlockDetails_param_open_type_true' => 'Open?',
    'object_pageBlockDetails_param_blocks_type_Vector t' => 'Blocks',
    'object_pageBlockDetails_param_title_type_RichText' => 'Title',
    'object_pageBlockRelatedArticles' => 'Page block related articles',
    'object_pageBlockRelatedArticles_param_title_type_RichText' => 'Title',
    'object_pageBlockRelatedArticles_param_articles_type_Vector t' => 'Articles',
    'object_pageBlockMap' => 'Page block map',
    'object_pageBlockMap_param_geo_type_GeoPoint' => 'Geo',
    'object_pageBlockMap_param_zoom_type_int' => 'Zoom',
    'object_pageBlockMap_param_w_type_int' => 'Width',
    'object_pageBlockMap_param_h_type_int' => 'Height',
    'object_pageBlockMap_param_caption_type_PageCaption' => 'Caption',
    'object_phoneCall_param_p2p_allowed_type_true' => 'P2p allowed?',
    'object_langPackLanguage_param_official_type_true' => 'Official?',
    'object_langPackLanguage_param_rtl_type_true' => 'Rtl?',
    'object_langPackLanguage_param_beta_type_true' => 'Beta?',
    'object_langPackLanguage_param_base_lang_code_type_string' => 'Base lang code',
    'object_langPackLanguage_param_plural_code_type_string' => 'Plural code',
    'object_langPackLanguage_param_strings_count_type_int' => 'Strings count',
    'object_langPackLanguage_param_translated_count_type_int' => 'Translated count',
    'object_langPackLanguage_param_translations_url_type_string' => 'Translations URL',
    'object_secureValue_param_translation_type_Vector t' => 'Translation',
    'object_inputSecureValue_param_translation_type_Vector t' => 'Translation',
    'object_secureValueError' => 'Secure value error',
    'object_secureValueError_param_type_type_SecureValueType' => 'Type',
    'object_secureValueError_param_hash_type_bytes' => 'Hash',
    'object_secureValueError_param_text_type_string' => 'Text',
    'object_secureValueErrorTranslationFile' => 'Secure value error translation file',
    'object_secureValueErrorTranslationFile_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorTranslationFile_param_file_hash_type_bytes' => 'File hash',
    'object_secureValueErrorTranslationFile_param_text_type_string' => 'Text',
    'object_secureValueErrorTranslationFiles' => 'Secure value error translation files',
    'object_secureValueErrorTranslationFiles_param_type_type_SecureValueType' => 'Type',
    'object_secureValueErrorTranslationFiles_param_file_hash_type_Vector t' => 'File hash',
    'object_secureValueErrorTranslationFiles_param_text_type_string' => 'Text',
    'object_passwordKdfAlgoUnknown' => 'Password kdf algo unknown',
    'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow' => 'Password kdf algo sha256sha256pbkdf2hmacsh a512iter100000 sha256 mod pow',
    'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_salt1_type_bytes' => 'Salt1',
    'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_salt2_type_bytes' => 'Salt2',
    'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_g_type_int' => 'G',
    'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_p_type_bytes' => 'P',
    'object_securePasswordKdfAlgoUnknown' => 'Secure password kdf algo unknown',
    'object_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000' => 'Secure password kdf algo pbkdf2hmacsh a512iter100000',
    'object_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000_param_salt_type_bytes' => 'Salt',
    'object_securePasswordKdfAlgoSHA512' => 'Secure password kdf algo sha512',
    'object_securePasswordKdfAlgoSHA512_param_salt_type_bytes' => 'Salt',
    'object_secureSecretSettings' => 'Secure secret settings',
    'object_secureSecretSettings_param_secure_algo_type_SecurePasswordKdfAlgo' => 'Secure algo',
    'object_secureSecretSettings_param_secure_secret_type_bytes' => 'Secure secret',
    'object_secureSecretSettings_param_secure_secret_id_type_long' => 'Secure secret ID',
    'object_inputCheckPasswordEmpty' => 'Empty input check password',
    'object_inputCheckPasswordSRP' => 'Check password srp',
    'object_inputCheckPasswordSRP_param_srp_id_type_long' => 'Srp ID',
    'object_inputCheckPasswordSRP_param_A_type_bytes' => 'A',
    'object_inputCheckPasswordSRP_param_M1_type_bytes' => 'M1',
    'object_secureRequiredType' => 'Secure required type',
    'object_secureRequiredType_param_native_names_type_true' => 'Native names?',
    'object_secureRequiredType_param_selfie_required_type_true' => 'Selfie required?',
    'object_secureRequiredType_param_translation_required_type_true' => 'Translation required?',
    'object_secureRequiredType_param_type_type_SecureValueType' => 'Type',
    'object_secureRequiredTypeOneOf' => 'Secure required type one of',
    'object_secureRequiredTypeOneOf_param_types_type_Vector t' => 'Types',
    'object_help.passportConfigNotModified' => 'Passport config not modified',
    'object_help.passportConfig' => 'Passport config',
    'object_help.passportConfig_param_hash_type_int' => 'Hash',
    'object_help.passportConfig_param_countries_langs_type_DataJSON' => 'Countries langs',
    'object_inputAppEvent_param_data_type_JSONValue' => 'Data',
    'object_jsonObjectValue' => 'Json object value',
    'object_jsonObjectValue_param_key_type_string' => 'Key',
    'object_jsonObjectValue_param_value_type_JSONValue' => 'Value',
    'object_jsonNull' => 'Json null',
    'object_jsonBool' => 'Json bool',
    'object_jsonBool_param_value_type_Bool' => 'Value?',
    'object_jsonNumber' => 'Json number',
    'object_jsonNumber_param_value_type_double' => 'Value',
    'object_jsonString' => 'Json string',
    'object_jsonString_param_value_type_string' => 'Value',
    'object_jsonArray' => 'Json array',
    'object_jsonArray_param_value_type_Vector t' => 'Value',
    'object_jsonObject' => 'Json object',
    'object_jsonObject_param_value_type_Vector t' => 'Value',
    'object_pageTableCell' => 'Page table cell',
    'object_pageTableCell_param_header_type_true' => 'Header?',
    'object_pageTableCell_param_align_center_type_true' => 'Align center?',
    'object_pageTableCell_param_align_right_type_true' => 'Align right?',
    'object_pageTableCell_param_valign_middle_type_true' => 'Valign middle?',
    'object_pageTableCell_param_valign_bottom_type_true' => 'Valign bottom?',
    'object_pageTableCell_param_text_type_RichText' => 'Text',
    'object_pageTableCell_param_colspan_type_int' => 'Colspan',
    'object_pageTableCell_param_rowspan_type_int' => 'Rowspan',
    'object_pageTableRow' => 'Page table row',
    'object_pageTableRow_param_cells_type_Vector t' => 'Cells',
    'object_pageCaption' => 'Page caption',
    'object_pageCaption_param_text_type_RichText' => 'Text',
    'object_pageCaption_param_credit_type_RichText' => 'Credit',
    'object_pageListItemText' => 'Page list item text',
    'object_pageListItemText_param_text_type_RichText' => 'Text',
    'object_pageListItemBlocks' => 'Page list item blocks',
    'object_pageListItemBlocks_param_blocks_type_Vector t' => 'Blocks',
    'object_pageListOrderedItemText' => 'Page list ordered item text',
    'object_pageListOrderedItemText_param_num_type_string' => 'Num',
    'object_pageListOrderedItemText_param_text_type_RichText' => 'Text',
    'object_pageListOrderedItemBlocks' => 'Page list ordered item blocks',
    'object_pageListOrderedItemBlocks_param_num_type_string' => 'Num',
    'object_pageListOrderedItemBlocks_param_blocks_type_Vector t' => 'Blocks',
    'object_pageRelatedArticle' => 'Page related article',
    'object_pageRelatedArticle_param_url_type_string' => 'URL',
    'object_pageRelatedArticle_param_webpage_id_type_long' => 'Webpage ID',
    'object_pageRelatedArticle_param_title_type_string' => 'Title',
    'object_pageRelatedArticle_param_description_type_string' => 'Description',
    'object_pageRelatedArticle_param_photo_id_type_long' => 'Photo ID',
    'object_pageRelatedArticle_param_author_type_string' => 'Author',
    'object_pageRelatedArticle_param_published_date_type_int' => 'Published date',
    'object_page' => 'Page',
    'object_page_param_part_type_true' => 'Part?',
    'object_page_param_rtl_type_true' => 'Rtl?',
    'object_page_param_v2_type_true' => 'V2?',
    'object_page_param_url_type_string' => 'URL',
    'object_page_param_blocks_type_Vector t' => 'Blocks',
    'object_page_param_photos_type_Vector t' => 'Photos',
    'object_page_param_documents_type_Vector t' => 'Documents',
    'object_help.supportName' => 'Support name',
    'object_help.supportName_param_name_type_string' => 'Name',
    'object_help.userInfoEmpty' => 'Empty user info',
    'object_help.userInfo' => 'User info',
    'object_help.userInfo_param_message_type_string' => 'Message',
    'object_help.userInfo_param_entities_type_Vector t' => 'Entities',
    'object_help.userInfo_param_author_type_string' => 'Author',
    'object_help.userInfo_param_date_type_int' => 'Date',
    'object_pollAnswer' => 'Poll answer',
    'object_pollAnswer_param_text_type_string' => 'Text',
    'object_pollAnswer_param_option_type_bytes' => 'Option',
    'object_poll' => 'Poll',
    'object_poll_param_id_type_long' => 'ID',
    'object_poll_param_closed_type_true' => 'Closed?',
    'object_poll_param_question_type_string' => 'Question',
    'object_poll_param_answers_type_Vector t' => 'Answers',
    'object_pollAnswerVoters' => 'Poll answer voters',
    'object_pollAnswerVoters_param_chosen_type_true' => 'Chosen?',
    'object_pollAnswerVoters_param_option_type_bytes' => 'Option',
    'object_pollAnswerVoters_param_voters_type_int' => 'Voters',
    'object_pollResults' => 'Poll results',
    'object_pollResults_param_min_type_true' => 'Min?',
    'object_pollResults_param_results_type_Vector t' => 'Results',
    'object_pollResults_param_total_voters_type_int' => 'Total voters',
    'object_chatOnlines' => 'Chat onlines',
    'object_chatOnlines_param_onlines_type_int' => 'Onlines',
    'object_statsURL' => 'Stats URL',
    'object_statsURL_param_url_type_string' => 'URL',
  ),
);

    // THIS WILL BE OVERWRITTEN BY $lang["en"]
    public static $current_lang = array (
  'req_pq' => 'Requesting pq...',
  'done' => 'Done!',
  'cdn_reupload' => 'File is not stored on CDN, requesting reupload!',
  'stored_on_cdn' => 'File is stored on CDN!',
  'serializing_madelineproto' => 'Serializing MadelineProto...',
  'phpseclib_fork' => 'Please install this fork of phpseclib: https://github.com/danog/phpseclib',
  'inst_dc' => 'Istantiating DataCenter...',
  'load_rsa' => 'Loading RSA keys...',
  'TL_translation' => 'Translating TL schemas...',
  'dh_prime_check_0' => 'Executing dh_prime checks (0/3)...',
  'nearest_dc' => 'We\'re in %s, nearest DC is %d.',
  'serialization_ofd' => 'Serialization is out of date, reconstructing object!',
  'getupdates_deserialization' => 'Getting updates after deserialization...',
  'shutdown_reader_pool' => 'Shutting down reader pool, %d jobs left',
  'threading_on' => 'THREADING IS ENABLED',
  'socket_reader' => 'Socket reader on DC %s: ',
  'socket_status_1' => 'CREATING',
  'socket_status_2' => 'SUBMITTING',
  'socket_status_3' => 'WAITING',
  'socket_status_4' => 'READY',
  'socket_status_5' => 'WORKING',
  'api_not_set' => 'You must provide an api key and an api id, get your own @ my.telegram.org',
  'session_corrupted' => 'The session is corrupted!',
  'reset_session_seqno' => 'Resetting session id and seq_no in DC %s...',
  'gen_perm_auth_key' => 'Generating permanent authorization key for DC %s...',
  'gen_temp_auth_key' => 'Generating temporary authorization key for DC %s...',
  'copy_auth_dcs' => 'Copying authorization from DC %s to DC %s...',
  'write_client_info' => 'Writing client info (also executing %s)...',
  'config_updated' => 'Updated config!',
  'length_not_4' => 'Length is not equal to 4',
  'length_not_8' => 'Length is not equal to 8',
  'value_bigger_than_2147483647' => 'Provided value %s is bigger than 2147483647',
  'value_smaller_than_2147483648' => 'Provided value %s is smaller than -2147483648',
  'value_bigger_than_9223372036854775807' => 'Provided value %s is bigger than 9223372036854775807',
  'value_smaller_than_9223372036854775808' => 'Provided value %s is smaller than -9223372036854775808',
  'value_bigger_than_4294967296' => 'Provided value %s is bigger than 4294967296',
  'value_smaller_than_0' => 'Provided value %s is smaller than 0',
  'encode_double_error' => 'Could not properly encode double',
  'file_not_exist' => 'File does not exist',
  'deserialization_error' => 'An error occurred on deserialization',
  'rsa_init' => 'Istantiating \\phpseclib\\Crypt\\RSA...',
  'loading_key' => 'Loading key...',
  'computing_fingerprint' => 'Computing fingerprint...',
  'rsa_encrypting' => 'Encrypting with rsa key...',
  'rpc_tg_error' => 'Telegram returned an RPC error: %s (%s), caused by %s:%sTL trace:',
  'v_error' => '506c656173652075706461746520746f20746865206c61746573742076657273696f6e206f66204d6164656c696e6550726f746f2e',
  'v_tgerror' => '506c6561736520757064617465207068702d6c69627467766f6970',
  'no_mode_specified' => 'No mode was specified!',
  'constructor_function_uncalled' => 'The constructor function wasn\'t called! Please call the constructor function before using this method.',
  'proxy_class_invalid' => 'Invalid proxy class provided!',
  'socket_con_error' => 'Connection: couldn\'t connect to socket.',
  'protocol_not_implemented' => 'Connection: This protocol isn\'t implemented yet.',
  'protocol_invalid' => 'Connection: invalid protocol specified.',
  'nothing_in_socket' => 'Nothing in the socket!',
  'wrong_length_read' => 'WARNING: Wrong length was read (should\'ve read %s, read %s)!',
  'no_data_in_socket' => 'No data in the socket!',
  'dc_con_start' => 'Connecting to DC %s...',
  'dc_con_stop' => 'Disconnecting from DC %s...',
  'dc_con_test_start' => 'Connecting to DC %s (%s server, %s, %s)...',
  'script_not_exist' => 'Provided script does not exist',
  'apifactory_start' => 'Running APIFactory...',
  'madelineproto_ready' => 'MadelineProto is ready!',
  'logout_error' => 'An error occurred while logging out!',
  'logout_ok' => 'Logged out successfully!',
  'already_logged_in' => 'This instance of MadelineProto is already logged in. Logging out first...',
  'login_ok' => 'Logged in successfully!',
  'login_user' => 'Logging in as a normal user...',
  'login_bot' => 'Logging in as a bot...',
  'login_code_sending' => 'Sending code...',
  'login_code_sent' => 'Code sent successfully! Once you receive the code you should use the complete_phone_login function.',
  'login_code_uncalled' => 'I\'m not waiting for the code! Please call the phone_login method first',
  'login_2fa_enabled' => '2FA enabled, you will have to call the complete_2fa_login function...',
  'login_need_signup' => 'An account has not been created for this number, you will have to call the complete_signup function...',
  'login_auth_key' => 'Logging in using auth key...',
  'not_logged_in' => 'I\'m not logged in!',
  'signup_uncalled' => 'I\'m not waiting to signup! Please call the phone_login and the complete_phone_login methods first!',
  'signing_up' => 'Signing up as a normal user...',
  'signup_ok' => 'Signed up in successfully!',
  '2fa_uncalled' => 'I\'m not waiting for the password! Please call the phone_login and the complete_phone_login methods first!',
  'getting_dialogs' => 'Getting dialogs...',
  'libtgvoip_required' => 'The php-libtgvoip extension is required to accept and manage calls. See daniil.it/MadelineProto for more info.',
  'peer_not_in_db' => 'This peer is not present in the internal peer database',
  'calling_user' => 'Calling %s...',
  'generating_a' => 'Generating a...',
  'generating_g_a' => 'Generating g_a...',
  'call_error_1' => 'Could not find and accept call %s',
  'accepting_call' => 'Accepting call from %s...',
  'generating_b' => 'Generating b...',
  'call_already_accepted' => 'Call %s already accepted',
  'call_already_declined' => 'Call %s already declined',
  'call_error_2' => 'Could not find and confirm call %s',
  'call_confirming' => 'Confirming call from %s...',
  'call_error_3' => 'Could not find and complete call %s',
  'call_completing' => 'Completing call from %s...',
  'invalid_g_a' => 'Invalid g_a!',
  'fingerprint_invalid' => 'Invalid key fingerprint!',
  'call_discarding' => 'Discarding call %s...',
  'call_set_rating' => 'Setting rating for call %s...',
  'call_debug_saving' => 'Saving debug data for call %s...',
  'TL_loading' => 'Loading TL schemes...',
  'file_parsing' => 'Parsing %s...',
  'crc32_mismatch' => 'CRC32 mismatch (%s, %s) for %s',
  'src_file_invalid' => 'Invalid source file was provided: ',
  'translating_obj' => 'Translating objects...',
  'translating_methods' => 'Translating methods...',
  'bool_error' => 'Could not extract boolean',
  'not_numeric' => 'Given value isn\'t numeric',
  'long_not_16' => 'Given value is not 16 bytes long',
  'long_not_32' => 'Given value is not 32 bytes long',
  'long_not_64' => 'Given value is not 64 bytes long',
  'array_invalid' => 'You didn\'t provide a valid array',
  'predicate_not_set' => 'Predicate (value under _) was not set!',
  'type_extract_error' => 'Could not extract type "%s"',
  'method_not_found' => 'Could not find method: ',
  'params_missing' => 'Missing required parameter',
  'sec_peer_not_in_db' => 'This secret peer is not present in the internal peer database',
  'stream_handle_invalid' => 'An invalid stream handle was provided.',
  'length_too_big' => 'Length is too big',
  'deserialize_not_str' => 'Deserialize: Generated value isn\'t a string',
  'type_extract_error_id' => 'Could not extract type: %s with id %s',
  'vector_invalid' => 'Invalid vector constructor: ',
  'constructor_not_found' => 'Constructor not found for type: ',
  'rand_bytes_too_small' => 'Random_bytes is too small!',
  'botapi_conversion_error' => 'Can\'t convert %s to a bot API object',
  'non_text_conversion' => 'Can\'t convert non text messages yet!',
  'last_byte_invalid' => 'Invalid last byte',
  'file_type_invalid' => 'Invalid file type detected (%s)',
  'recreate_temp_auth_key' => 'I had to recreate the temporary authorization key',
  'resetting_auth_key' => 'WARNING: Resetting auth key...',
  'shutting_down_reader_pool' => 'Shutting down reader pool ',
  'shutting_down_handler_pool' => 'Shutting down handler pool for dc %s, %d jobs left',
  'secret_chat_skipping' => 'I do not have the secret chat %s in the database, skipping message...',
  'fingerprint_mismatch' => 'Key fingerprint mismatch',
  'msg_data_length_too_big' => 'Message_data_length is too big',
  'length_not_divisible_16' => 'Length of decrypted data is not divisible by 16',
  'msg_key_mismatch' => 'Msg_key mismatch',
  'rand_bytes_too_short' => 'Random_bytes is too short!',
  'resending_unsupported' => 'Resending of messages is not yet supported',
  'unrecognized_dec_msg' => 'Unrecognized decrypted message received: ',
  'method_req_pq' => 'Requests PQ for factorization',
  'method_req_pq_param_nonce_type_int128' => 'Random number for cryptographic security',
  'method_req_pq_multi' => 'Requests PQ for factorization (new version)',
  'method_req_pq_multi_param_nonce_type_int128' => 'Random number for cryptographic security',
  'method_req_DH_params' => 'Requests Diffie-hellman parameters for key exchange',
  'method_req_DH_params_param_nonce_type_int128' => 'Random number for cryptographic security',
  'method_req_DH_params_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'method_req_DH_params_param_p_type_bytes' => 'Factorized p from pq',
  'method_req_DH_params_param_q_type_bytes' => 'Factorized q from pq',
  'method_req_DH_params_param_public_key_fingerprint_type_long' => 'Server RSA fingerprint',
  'method_req_DH_params_param_encrypted_data_type_bytes' => 'Encrypted key exchange message',
  'method_set_client_DH_params' => 'Sets client diffie-hellman parameters',
  'method_set_client_DH_params_param_nonce_type_int128' => 'Random number for cryptographic security',
  'method_set_client_DH_params_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'method_set_client_DH_params_param_encrypted_data_type_bytes' => 'Encrypted key exchange message',
  'method_rpc_drop_answer' => 'Do not send answer to provided request',
  'method_rpc_drop_answer_param_req_msg_id_type_long' => 'The message ID of the request',
  'method_get_future_salts' => 'Get future salts',
  'method_get_future_salts_param_num_type_int' => 'How many salts should be fetched',
  'method_ping' => 'Pings the server',
  'method_ping_param_ping_id_type_long' => 'Ping ID',
  'method_ping_delay_disconnect' => 'Pings the server and causes disconection if the same method is not called within ping_disconnect_delay',
  'method_ping_delay_disconnect_param_ping_id_type_long' => 'Ping ID',
  'method_ping_delay_disconnect_param_disconnect_delay_type_int' => 'Disconection delay',
  'method_destroy_session' => 'Destroy the current MTProto session',
  'method_destroy_session_param_session_id_type_long' => 'The session to destroy',
  'method_http_wait' => 'Makes the server send messages waiting in the buffer',
  'method_http_wait_param_max_delay_type_int' => 'Denotes the maximum number of milliseconds that has elapsed between the first message for this session and the transmission of an HTTP response',
  'method_http_wait_param_wait_after_type_int' => 'After the receipt of the latest message for a particular session, the server waits another wait_after milliseconds in case there are more messages. If there are no additional messages, the result is transmitted (a container with all the messages).',
  'method_http_wait_param_max_wait_type_int' => 'If more messages appear, the wait_after timer is reset.',
  'method_invokeAfterMsg' => 'Invokes a query after successfull completion of one of the previous queries.',
  'method_invokeAfterMsg_param_msg_id_type_long' => 'Message identifier on which a current query depends',
  'method_invokeAfterMsg_param_query_type_!X' => 'The query itself',
  'method_invokeAfterMsgs' => 'Result type returned by a current query.',
  'method_invokeAfterMsgs_param_msg_ids_type_Vector t' => 'List of messages on which a current query depends',
  'method_invokeAfterMsgs_param_query_type_!X' => 'The query itself',
  'method_initConnection' => 'Initializes connection and save information on the user\'s device and application.',
  'method_initConnection_param_api_id_type_int' => 'Application identifier',
  'method_initConnection_param_device_model_type_string' => 'Device model',
  'method_initConnection_param_system_version_type_string' => 'System version',
  'method_initConnection_param_app_version_type_string' => 'App version',
  'method_initConnection_param_system_lang_code_type_string' => 'Language code',
  'method_initConnection_param_lang_pack_type_string' => 'Language pack to use',
  'method_initConnection_param_lang_code_type_string' => 'Language code to set',
  'method_initConnection_param_query_type_!X' => 'Nested query',
  'method_invokeWithLayer' => 'Invoke this method with layer X',
  'method_invokeWithLayer_param_layer_type_int' => 'The layer version',
  'method_invokeWithLayer_param_query_type_!X' => 'The query',
  'method_invokeWithoutUpdates' => 'Invoke with method without returning updates in the socket',
  'method_invokeWithoutUpdates_param_query_type_!X' => 'The query',
  'method_auth.checkPhone' => 'Check if this phone number is registered on telegram',
  'method_auth.checkPhone_param_phone_number_type_string' => 'The phone number to check',
  'method_auth.sendCode' => 'Use phone_login instead',
  'method_auth.sendCode_param_allow_flashcall_type_true' => 'Use phone_login instead',
  'method_auth.sendCode_param_phone_number_type_string' => 'Use phone_login instead',
  'method_auth.sendCode_param_current_number_type_Bool' => 'Use phone_login instead',
  'method_auth.sendCode_param_api_id_type_int' => 'Use phone_login instead',
  'method_auth.sendCode_param_api_hash_type_string' => 'Use phone_login instead',
  'method_auth.signUp' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signUp_param_phone_number_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signUp_param_phone_code_hash_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signUp_param_phone_code_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signUp_param_first_name_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signUp_param_last_name_type_string' => 'You cannot use this method directly, use the complete_signup method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signIn' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signIn_param_phone_number_type_string' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signIn_param_phone_code_hash_type_string' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.signIn_param_phone_code_type_string' => 'You cannot use this method directly, use the complete_phone_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.logOut' => 'You cannot use this method directly, use the logout method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.resetAuthorizations' => 'Delete all logged-in sessions.',
  'method_auth.sendInvites' => 'Invite friends to telegram!',
  'method_auth.sendInvites_param_phone_numbers_type_Vector t' => 'Phone numbers to invite',
  'method_auth.sendInvites_param_message_type_string' => 'The message to send',
  'method_auth.exportAuthorization' => 'You cannot use this method directly, use $MadelineProto->export_authorization() instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
  'method_auth.exportAuthorization_param_dc_id_type_int' => 'You cannot use this method directly, use $MadelineProto->export_authorization() instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
  'method_auth.importAuthorization' => 'You cannot use this method directly, use $MadelineProto->import_authorization($authorization) instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
  'method_auth.importAuthorization_param_id_type_int' => 'You cannot use this method directly, use $MadelineProto->import_authorization($authorization) instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
  'method_auth.importAuthorization_param_bytes_type_bytes' => 'You cannot use this method directly, use $MadelineProto->import_authorization($authorization) instead, see https://docs.madelineproto.xyz/docs/LOGIN.html',
  'method_auth.bindTempAuthKey' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
  'method_auth.bindTempAuthKey_param_perm_auth_key_id_type_long' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
  'method_auth.bindTempAuthKey_param_nonce_type_long' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
  'method_auth.bindTempAuthKey_param_expires_at_type_int' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
  'method_auth.bindTempAuthKey_param_encrypted_message_type_bytes' => 'You cannot use this method directly, instead modify the PFS and default_temp_auth_key_expires_in settings, see https://docs.madelineproto.xyz/docs/SETTINGS.html for more info',
  'method_auth.importBotAuthorization' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.importBotAuthorization_param_api_id_type_int' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.importBotAuthorization_param_api_hash_type_string' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.importBotAuthorization_param_bot_auth_token_type_string' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.checkPassword' => 'You cannot use this method directly, use the complete_2fa_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.checkPassword_param_password_hash_type_bytes' => 'You cannot use this method directly, use the complete_2fa_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.requestPasswordRecovery' => 'Send an email to recover the 2FA password',
  'method_auth.recoverPassword' => 'Use the code that was emailed to you after running $MadelineProto->auth->requestPasswordRecovery to login to your account',
  'method_auth.recoverPassword_param_code_type_string' => 'The code that was emailed to you',
  'method_auth.resendCode' => 'Resend the SMS verification code',
  'method_auth.resendCode_param_phone_number_type_string' => 'The phone number',
  'method_auth.resendCode_param_phone_code_hash_type_string' => 'The phone code hash',
  'method_auth.cancelCode' => 'Invalidate sent phone code',
  'method_auth.cancelCode_param_phone_number_type_string' => 'Phone number',
  'method_auth.cancelCode_param_phone_code_hash_type_string' => 'Phone code hash',
  'method_auth.dropTempAuthKeys' => 'Delete all temporary authorization keys except the ones provided',
  'method_auth.dropTempAuthKeys_param_except_auth_keys_type_Vector t' => 'The temporary authorization keys to keep',
  'method_account.registerDevice' => 'Register device for push notifications',
  'method_account.registerDevice_param_token_type_type_int' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone, 6 - Blackberry, and other, see source code of official apps for more info',
  'method_account.registerDevice_param_token_type_string' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone,6 - Blackberry, and other, see source code of official apps for more info',
  'method_account.registerDevice_param_app_sandbox_type_Bool' => 'Should the app run in a sandbox?',
  'method_account.registerDevice_param_other_uids_type_Vector t' => 'Other UIDs',
  'method_account.unregisterDevice' => 'Stop sending PUSH notifications to app',
  'method_account.unregisterDevice_param_token_type_type_int' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone,6 - Blackberry, and other, see source code of official apps for more info',
  'method_account.unregisterDevice_param_token_type_string' => 'Device token type. Possible values: 1 - APNS, 2 - GCM, 3 - MPNS, 4 - Simple Push, 5 - Ubuntu Phone,6 - Blackberry, and other, see source code of official apps for more info',
  'method_account.unregisterDevice_param_other_uids_type_Vector t' => 'Other UIDs',
  'method_account.updateNotifySettings' => 'Change notification settings',
  'method_account.updateNotifySettings_param_peer_type_InputNotifyPeer' => 'The peers to which the notification settings should be applied',
  'method_account.updateNotifySettings_param_settings_type_InputPeerNotifySettings' => 'Notification settings',
  'method_account.getNotifySettings' => 'Get notification settings',
  'method_account.getNotifySettings_param_peer_type_InputNotifyPeer' => 'Notification source ',
  'method_account.resetNotifySettings' => 'Reset all notification settings',
  'method_account.updateProfile' => 'Update profile info',
  'method_account.updateProfile_param_first_name_type_string' => 'The first name',
  'method_account.updateProfile_param_last_name_type_string' => 'The last name',
  'method_account.updateProfile_param_about_type_string' => 'The bio/about field',
  'method_account.updateStatus' => 'Update online status',
  'method_account.updateStatus_param_offline_type_Bool' => 'Offline to set the status to offline',
  'method_account.getWallPapers' => 'Returns a list of available wallpapers.',
  'method_account.reportPeer' => 'Report for spam',
  'method_account.reportPeer_param_peer_type_InputPeer' => 'The peer to report',
  'method_account.reportPeer_param_reason_type_ReportReason' => 'Why are you reporting this peer',
  'method_account.checkUsername' => 'Check if this username is available',
  'method_account.checkUsername_param_username_type_string' => 'The username to check',
  'method_account.updateUsername' => 'Update this user\'s username',
  'method_account.updateUsername_param_username_type_string' => 'The new username',
  'method_account.getPrivacy' => 'Get privacy settings',
  'method_account.getPrivacy_param_key_type_InputPrivacyKey' => 'Privacy setting key',
  'method_account.setPrivacy' => 'Set privacy settings',
  'method_account.setPrivacy_param_key_type_InputPrivacyKey' => 'Privacy setting',
  'method_account.setPrivacy_param_rules_type_Vector t' => 'Privacy settings',
  'method_account.deleteAccount' => 'Delete this account',
  'method_account.deleteAccount_param_reason_type_string' => 'Why are you going away? :(',
  'method_account.getAccountTTL' => 'Get account TTL',
  'method_account.setAccountTTL' => 'Set account TTL',
  'method_account.setAccountTTL_param_ttl_type_AccountDaysTTL' => 'Time To Live of account',
  'method_account.sendChangePhoneCode' => 'Change the phone number',
  'method_account.sendChangePhoneCode_param_allow_flashcall_type_true' => 'Can the code be sent using a flash call instead of an SMS?',
  'method_account.sendChangePhoneCode_param_phone_number_type_string' => 'New phone number',
  'method_account.sendChangePhoneCode_param_current_number_type_Bool' => 'Current phone number',
  'method_account.changePhone' => 'Change the phone number associated to this account',
  'method_account.changePhone_param_phone_number_type_string' => 'Phone number',
  'method_account.changePhone_param_phone_code_hash_type_string' => 'Phone code hash returned by account.sendChangePhoneCode',
  'method_account.changePhone_param_phone_code_type_string' => 'The phone code sent by account.sendChangePhoneCode',
  'method_account.updateDeviceLocked' => 'Disable all notifications for a certain period',
  'method_account.updateDeviceLocked_param_period_type_int' => 'For how long should notifications be disabled',
  'method_account.getAuthorizations' => 'Get all logged-in authorizations',
  'method_account.resetAuthorization' => 'Delete a certain session',
  'method_account.resetAuthorization_param_hash_type_long' => 'The session hash, obtained from $MadelineProto->account->getAuthorizations',
  'method_account.getPassword' => 'Get the current password',
  'method_account.getPasswordSettings' => 'Get the current 2FA settings',
  'method_account.getPasswordSettings_param_current_password_hash_type_bytes' => 'Use only if you have set a 2FA password: `$current_salt = $MadelineProto->account->getPassword()[\'current_salt\']; $current_password_hash = hash(\'sha256\', $current_salt.$password.$current_salt, true);`',
  'method_account.updatePasswordSettings' => 'You cannot use this method directly; use $MadelineProto->update_2fa($params), instead (see https://docs.madelineproto.xyz for more info)',
  'method_account.updatePasswordSettings_param_current_password_hash_type_bytes' => 'Use only if you have set a 2FA password: `$current_salt = $MadelineProto->account->getPassword()[\'current_salt\']; $current_password_hash = hash(\'sha256\', $current_salt.$password.$current_salt, true);`',
  'method_account.updatePasswordSettings_param_new_settings_type_account.PasswordInputSettings' => 'New 2FA settings',
  'method_account.sendConfirmPhoneCode' => 'Send confirmation phone code',
  'method_account.sendConfirmPhoneCode_param_allow_flashcall_type_true' => 'Can telegram call you instead of sending an SMS?',
  'method_account.sendConfirmPhoneCode_param_hash_type_string' => 'The hash',
  'method_account.sendConfirmPhoneCode_param_current_number_type_Bool' => 'The current phone number',
  'method_account.confirmPhone' => 'Confirm this phone number is associated to this account, obtain phone_code_hash from sendConfirmPhoneCode',
  'method_account.confirmPhone_param_phone_code_hash_type_string' => 'Obtain phone_code_hash from sendConfirmPhoneCode',
  'method_account.confirmPhone_param_phone_code_type_string' => 'The code sent by sendConfirmPhoneCode',
  'method_account.getTmpPassword' => 'Get temporary password for buying products through bots',
  'method_account.getTmpPassword_param_password_hash_type_bytes' => 'The password hash',
  'method_account.getTmpPassword_param_period_type_int' => 'The validity period',
  'method_account.getWebAuthorizations' => 'Get telegram web login authorizations',
  'method_account.resetWebAuthorization' => 'Delete a certain telegram web login authorization',
  'method_account.resetWebAuthorization_param_hash_type_long' => 'The authorization\'s hash',
  'method_account.resetWebAuthorizations' => 'Reset all telegram web login authorizations',
  'method_users.getUsers' => 'Get info about users',
  'method_users.getUsers_param_id_type_Vector t' => 'The ids of the users',
  'method_users.getFullUser' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_users.getFullUser_param_id_type_InputUser' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_contacts.getStatuses' => 'Get online status of all users',
  'method_contacts.getContacts' => 'Get all contacts',
  'method_contacts.getContacts_param_hash_type_int' => 'User ids of contacts previously fetched with this method',
  'method_contacts.importContacts' => 'Add phone number as contact',
  'method_contacts.importContacts_param_contacts_type_Vector t' => 'The numbers to import',
  'method_contacts.deleteContact' => 'Delete a contact',
  'method_contacts.deleteContact_param_id_type_InputUser' => 'The contact to delete',
  'method_contacts.deleteContacts' => 'Delete multiple contacts',
  'method_contacts.deleteContacts_param_id_type_Vector t' => 'The contacts to delete',
  'method_contacts.block' => 'Block a user',
  'method_contacts.block_param_id_type_InputUser' => 'The user to block',
  'method_contacts.unblock' => 'Unblock a user',
  'method_contacts.unblock_param_id_type_InputUser' => 'The user to unblock',
  'method_contacts.getBlocked' => 'Get blocked users',
  'method_contacts.getBlocked_param_offset_type_int' => 'Initially 0, then set to the number of blocked contacts previously fetched',
  'method_contacts.getBlocked_param_limit_type_int' => 'How many blocked contacts to fetch',
  'method_contacts.exportCard' => 'Export contact as card',
  'method_contacts.importCard' => 'Import card as contact',
  'method_contacts.importCard_param_export_card_type_Vector t' => 'The card',
  'method_contacts.search' => 'Search contacts',
  'method_contacts.search_param_q_type_string' => 'The search query',
  'method_contacts.search_param_limit_type_int' => 'How many results should be returned',
  'method_contacts.resolveUsername' => 'You cannot use this method directly, use the resolve_username, get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_contacts.resolveUsername_param_username_type_string' => 'You cannot use this method directly, use the resolve_username, get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_contacts.getTopPeers' => 'Get most used chats',
  'method_contacts.getTopPeers_param_correspondents_type_true' => 'Fetch users?',
  'method_contacts.getTopPeers_param_bots_pm_type_true' => 'Fetch bots?',
  'method_contacts.getTopPeers_param_bots_inline_type_true' => 'Fetch inline bots?',
  'method_contacts.getTopPeers_param_phone_calls_type_true' => 'Fetch phone calls?',
  'method_contacts.getTopPeers_param_groups_type_true' => 'Fetch groups?',
  'method_contacts.getTopPeers_param_channels_type_true' => 'Fetch channels and supergroups?',
  'method_contacts.getTopPeers_param_offset_type_int' => 'Initially 0, then `$offset += $contacts_TopPeers[\'categories\'][\'count\'];`',
  'method_contacts.getTopPeers_param_limit_type_int' => 'How many results to fetch',
  'method_contacts.getTopPeers_param_hash_type_int' => 'Peer ids previously fetched with this method',
  'method_contacts.resetTopPeerRating' => 'Reset top peer rating for a certain category/peer',
  'method_contacts.resetTopPeerRating_param_category_type_TopPeerCategory' => 'The category ',
  'method_contacts.resetTopPeerRating_param_peer_type_InputPeer' => 'The peer',
  'method_contacts.resetSaved' => 'Reset saved contacts',
  'method_messages.getMessages' => 'Get messages',
  'method_messages.getMessages_param_id_type_Vector t' => 'The IDs of messages to fetch (only for users and normal groups)',
  'method_messages.getDialogs' => 'Gets list of chats: you should use $MadelineProto->get_dialogs() instead: https://docs.madelineproto.xyz/docs/DIALOGS.html',
  'method_messages.getDialogs_param_exclude_pinned_type_true' => 'Do not fetch pinned chats',
  'method_messages.getDialogs_param_offset_date_type_int' => 'End($res[\'messages\'])[\'date\'];',
  'method_messages.getDialogs_param_offset_id_type_int' => 'End($res[\'messages\'])[\'id\'];',
  'method_messages.getDialogs_param_offset_peer_type_InputPeer' => 'End($res[\'dialogs\'])[\'peer\'];',
  'method_messages.getDialogs_param_limit_type_int' => 'Number of dialogs to fetch',
  'method_messages.getHistory' => 'Get previous messages of a group',
  'method_messages.getHistory_param_peer_type_InputPeer' => 'The chat',
  'method_messages.getHistory_param_offset_id_type_int' => 'The last fetched message ID, initially 0',
  'method_messages.getHistory_param_offset_date_type_int' => 'The date of the last previously fetched message, initially 0',
  'method_messages.getHistory_param_add_offset_type_int' => 'Additional offset, can be 0',
  'method_messages.getHistory_param_limit_type_int' => 'Number of messages to fetch',
  'method_messages.getHistory_param_max_id_type_int' => 'Maximum message ID to fetch',
  'method_messages.getHistory_param_min_id_type_int' => 'Minumum message ID to fetch',
  'method_messages.getHistory_param_hash_type_int' => 'List of IDs of already parsed messages',
  'method_messages.search' => 'Search peers or messages',
  'method_messages.search_param_peer_type_InputPeer' => 'Where to search',
  'method_messages.search_param_q_type_string' => 'What to search',
  'method_messages.search_param_from_id_type_InputUser' => 'Show only messages from a certain user?',
  'method_messages.search_param_filter_type_MessagesFilter' => 'Message filter',
  'method_messages.search_param_min_date_type_int' => 'Minumum date of results to fetch',
  'method_messages.search_param_max_date_type_int' => 'Maximum date of results to fetch',
  'method_messages.search_param_offset_id_type_int' => 'Message ID offset',
  'method_messages.search_param_add_offset_type_int' => 'Additional offset, can be 0',
  'method_messages.search_param_limit_type_int' => 'Number of results to return',
  'method_messages.search_param_max_id_type_int' => 'Maximum message id to return',
  'method_messages.search_param_min_id_type_int' => 'Minumum message id to return',
  'method_messages.readHistory' => 'Mark messages as read',
  'method_messages.readHistory_param_peer_type_InputPeer' => 'Where to mark messages as read',
  'method_messages.readHistory_param_max_id_type_int' => 'Maximum message ID to mark as read',
  'method_messages.deleteHistory' => 'Delete chat history',
  'method_messages.deleteHistory_param_just_clear_type_true' => 'Only clear it from your side',
  'method_messages.deleteHistory_param_peer_type_InputPeer' => 'Where to clear it',
  'method_messages.deleteHistory_param_max_id_type_int' => 'Maximum message id of messages to delete',
  'method_messages.deleteMessages' => 'Delete messages',
  'method_messages.deleteMessages_param_revoke_type_true' => 'Delete the messages for everyone?',
  'method_messages.deleteMessages_param_id_type_Vector t' => 'IDs of messages to delete, use channels->deleteMessages for supergroups',
  'method_messages.receivedMessages' => 'Mark messages as read',
  'method_messages.receivedMessages_param_max_id_type_int' => 'Maximum message id of messages to mark as read',
  'method_messages.setTyping' => 'Change typing status',
  'method_messages.setTyping_param_peer_type_InputPeer' => 'Where to change typing status',
  'method_messages.setTyping_param_action_type_SendMessageAction' => 'Typing status',
  'method_messages.sendMessage' => 'Send a message',
  'method_messages.sendMessage_param_no_webpage_type_true' => 'Disable webpage preview?',
  'method_messages.sendMessage_param_silent_type_true' => 'Disable notifications?',
  'method_messages.sendMessage_param_background_type_true' => 'Disable background notifications?',
  'method_messages.sendMessage_param_clear_draft_type_true' => 'Clear the message draft of this chat?',
  'method_messages.sendMessage_param_peer_type_InputPeer' => 'The chat where to send this message',
  'method_messages.sendMessage_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
  'method_messages.sendMessage_param_message_type_string' => 'The message to send',
  'method_messages.sendMessage_param_reply_markup_type_ReplyMarkup' => 'Keyboards to send',
  'method_messages.sendMessage_param_entities_type_Vector t' => 'Entities to send (for styled text)',
  'method_messages.sendMedia' => 'Send a media',
  'method_messages.sendMedia_param_silent_type_true' => 'Disable notifications?',
  'method_messages.sendMedia_param_background_type_true' => 'Disable background notifications?',
  'method_messages.sendMedia_param_clear_draft_type_true' => 'Clear the message draft of this chat?',
  'method_messages.sendMedia_param_peer_type_InputPeer' => 'Where to send the media',
  'method_messages.sendMedia_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
  'method_messages.sendMedia_param_media_type_InputMedia' => 'The media to send',
  'method_messages.sendMedia_param_message_type_string' => 'The caption',
  'method_messages.sendMedia_param_reply_markup_type_ReplyMarkup' => 'Keyboards to send',
  'method_messages.sendMedia_param_entities_type_Vector t' => 'Entities for styled text',
  'method_messages.forwardMessages' => 'Forward messages',
  'method_messages.forwardMessages_param_silent_type_true' => 'Disable notifications',
  'method_messages.forwardMessages_param_background_type_true' => 'Disable background notifications',
  'method_messages.forwardMessages_param_with_my_score_type_true' => 'If forwarding a game, forward your score, too',
  'method_messages.forwardMessages_param_grouped_type_true' => 'Set to true if forwarding albums',
  'method_messages.forwardMessages_param_from_peer_type_InputPeer' => 'From where to forward the messages',
  'method_messages.forwardMessages_param_id_type_Vector t' => 'The message IDs',
  'method_messages.forwardMessages_param_to_peer_type_InputPeer' => 'Where to forward the messages',
  'method_messages.reportSpam' => 'Report a peer for spam',
  'method_messages.reportSpam_param_peer_type_InputPeer' => 'The peer to report',
  'method_messages.hideReportSpam' => 'Hide report spam popup',
  'method_messages.hideReportSpam_param_peer_type_InputPeer' => 'Where to hide the popup',
  'method_messages.getPeerSettings' => 'Get the settings of  apeer',
  'method_messages.getPeerSettings_param_peer_type_InputPeer' => 'The peer',
  'method_messages.getChats' => 'Get info about chats',
  'method_messages.getChats_param_id_type_Vector t' => 'The MTProto IDs of chats to fetch info about',
  'method_messages.getFullChat' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_messages.getFullChat_param_chat_id_type_InputPeer' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_messages.editChatTitle' => 'Edit the title of a normal chat (not supergroup)',
  'method_messages.editChatTitle_param_chat_id_type_InputPeer' => 'The ID of the chat',
  'method_messages.editChatTitle_param_title_type_string' => 'The new title',
  'method_messages.editChatPhoto' => 'Edit the photo of a normal chat (not supergroup)',
  'method_messages.editChatPhoto_param_chat_id_type_InputPeer' => 'The ID of the chat',
  'method_messages.editChatPhoto_param_photo_type_InputChatPhoto' => 'The new phto',
  'method_messages.addChatUser' => 'Add a user to a normal chat (use channels->inviteToChannel for supergroups)',
  'method_messages.addChatUser_param_chat_id_type_InputPeer' => 'The chat where to invite users',
  'method_messages.addChatUser_param_user_id_type_InputUser' => 'The user to invite',
  'method_messages.addChatUser_param_fwd_limit_type_int' => 'Number of old messages the user will see',
  'method_messages.deleteChatUser' => 'Delete a user from a chat (not supergroup)',
  'method_messages.deleteChatUser_param_chat_id_type_InputPeer' => 'The ID of the chat',
  'method_messages.deleteChatUser_param_user_id_type_InputUser' => 'The user to delete (pass @me to leave the chat)',
  'method_messages.createChat' => 'Create a chat (not supergroup)',
  'method_messages.createChat_param_users_type_Vector t' => 'The users to add to the chat',
  'method_messages.createChat_param_title_type_string' => 'The new chat\'s title',
  'method_messages.getDhConfig' => 'You cannot use this method directly, instead use $MadelineProto->get_dh_config();',
  'method_messages.getDhConfig_param_version_type_int' => 'You cannot use this method directly, instead use $MadelineProto->get_dh_config();',
  'method_messages.getDhConfig_param_random_length_type_int' => 'You cannot use this method directly, instead use $MadelineProto->get_dh_config();',
  'method_messages.requestEncryption' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.requestEncryption_param_user_id_type_InputUser' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.requestEncryption_param_g_a_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.acceptEncryption' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.acceptEncryption_param_peer_type_InputEncryptedChat' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.acceptEncryption_param_g_b_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.acceptEncryption_param_key_fingerprint_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.discardEncryption' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.discardEncryption_param_chat_id_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling secret chats',
  'method_messages.setEncryptedTyping' => 'Send typing notification to secret chat',
  'method_messages.setEncryptedTyping_param_peer_type_InputEncryptedChat' => 'The secret chat where to send the notification',
  'method_messages.setEncryptedTyping_param_typing_type_Bool' => 'Set to true to enable the notification, false to disable it',
  'method_messages.readEncryptedHistory' => 'Mark messages as read in secret chats',
  'method_messages.readEncryptedHistory_param_peer_type_InputEncryptedChat' => 'The secret chat where to mark messages as read',
  'method_messages.readEncryptedHistory_param_max_date_type_int' => 'Maximum date of messages to mark',
  'method_messages.sendEncrypted' => 'Send message to secret chat',
  'method_messages.sendEncrypted_param_peer_type_InputEncryptedChat' => 'The chat where to send the message',
  'method_messages.sendEncrypted_param_message_type_DecryptedMessage' => 'The message to send',
  'method_messages.sendEncryptedFile' => 'Send a file to a secret chat',
  'method_messages.sendEncryptedFile_param_peer_type_InputEncryptedChat' => 'The chat where to send the file',
  'method_messages.sendEncryptedFile_param_message_type_DecryptedMessage' => 'The message with the file',
  'method_messages.sendEncryptedFile_param_file_type_InputEncryptedFile' => 'The file (optional)',
  'method_messages.sendEncryptedService' => 'Send a service message to a secret chat',
  'method_messages.sendEncryptedService_param_peer_type_InputEncryptedChat' => 'The chat where to send the service message',
  'method_messages.sendEncryptedService_param_message_type_DecryptedMessage' => 'The service message',
  'method_messages.receivedQueue' => 'You cannot use this method directly',
  'method_messages.receivedQueue_param_max_qts_type_int' => 'You cannot use this method directly',
  'method_messages.reportEncryptedSpam' => 'Report for spam a secret chat',
  'method_messages.reportEncryptedSpam_param_peer_type_InputEncryptedChat' => 'The chat to report',
  'method_messages.readMessageContents' => 'Mark message as read',
  'method_messages.readMessageContents_param_id_type_Vector t' => 'The messages to mark as read (only users and normal chats, not supergroups)',
  'method_messages.getStickers' => 'Get stickers',
  'method_messages.getStickers_param_emoticon_type_string' => 'Search by emoji',
  'method_messages.getStickers_param_hash_type_string' => 'Previously fetched sticker IDs',
  'method_messages.getAllStickers' => 'Get all stickerpacks',
  'method_messages.getAllStickers_param_hash_type_int' => '0 or $result[\'hash\']',
  'method_messages.getWebPagePreview' => 'Get webpage preview',
  'method_messages.getWebPagePreview_param_message_type_string' => 'Extract preview from this message',
  'method_messages.getWebPagePreview_param_entities_type_Vector t' => 'Entities for styled text',
  'method_messages.exportChatInvite' => 'Export chat invite ',
  'method_messages.exportChatInvite_param_chat_id_type_InputPeer' => 'The chat id ',
  'method_messages.checkChatInvite' => 'Check if an invitation link is valid',
  'method_messages.checkChatInvite_param_hash_type_string' => 'The invite link in t.me/joinchat/aflakf format',
  'method_messages.importChatInvite' => 'Import chat invite',
  'method_messages.importChatInvite_param_hash_type_string' => 'The invite link in t.me/joinchat/aflakf format',
  'method_messages.getStickerSet' => 'Get a stickerset',
  'method_messages.getStickerSet_param_stickerset_type_InputStickerSet' => 'The stickerset to get',
  'method_messages.installStickerSet' => 'Add a sticker set',
  'method_messages.installStickerSet_param_stickerset_type_InputStickerSet' => 'The sticker set to add',
  'method_messages.installStickerSet_param_archived_type_Bool' => 'Archive this set?',
  'method_messages.uninstallStickerSet' => 'Remove a sticker set',
  'method_messages.uninstallStickerSet_param_stickerset_type_InputStickerSet' => 'The sticker set to remove',
  'method_messages.startBot' => 'Start a bot',
  'method_messages.startBot_param_bot_type_InputUser' => 'The bot\'s ID or username',
  'method_messages.startBot_param_peer_type_InputPeer' => 'Where to start the bot (@me or group ID/username)',
  'method_messages.startBot_param_start_param_type_string' => 'The bot\'s start parameter',
  'method_messages.getMessagesViews' => 'Get and increase message views',
  'method_messages.getMessagesViews_param_peer_type_InputPeer' => 'The chat where the message is located',
  'method_messages.getMessagesViews_param_id_type_Vector t' => 'The IDs messages to get',
  'method_messages.getMessagesViews_param_increment_type_Bool' => 'Increase message views?',
  'method_messages.toggleChatAdmins' => 'Enable all users are admins in normal groups (not supergroups)',
  'method_messages.toggleChatAdmins_param_chat_id_type_InputPeer' => 'Group ID',
  'method_messages.toggleChatAdmins_param_enabled_type_Bool' => 'Enable all users are admins',
  'method_messages.editChatAdmin' => 'Edit admin permissions',
  'method_messages.editChatAdmin_param_chat_id_type_InputPeer' => 'The chat ID (no supergroups)',
  'method_messages.editChatAdmin_param_user_id_type_InputUser' => 'The user ID',
  'method_messages.editChatAdmin_param_is_admin_type_Bool' => 'Should the user be admin?',
  'method_messages.migrateChat' => 'Convert chat to supergroup',
  'method_messages.migrateChat_param_chat_id_type_InputPeer' => 'The chat to convert',
  'method_messages.searchGlobal' => 'Global message search',
  'method_messages.searchGlobal_param_q_type_string' => 'The query',
  'method_messages.searchGlobal_param_offset_date_type_int' => '0 or the date offset',
  'method_messages.searchGlobal_param_offset_peer_type_InputPeer' => '0 or the peer offset',
  'method_messages.searchGlobal_param_offset_id_type_int' => '0 or the message ID offset',
  'method_messages.searchGlobal_param_limit_type_int' => 'The number of results to return',
  'method_messages.reorderStickerSets' => 'Reorder sticker sets',
  'method_messages.reorderStickerSets_param_masks_type_true' => 'Reorder masks?',
  'method_messages.reorderStickerSets_param_order_type_Vector t' => 'The order',
  'method_messages.getDocumentByHash' => 'Get document by SHA256 hash',
  'method_messages.getDocumentByHash_param_sha256_type_bytes' => '`hash(\'sha256\', $filename, true);`',
  'method_messages.getDocumentByHash_param_size_type_int' => 'The file size',
  'method_messages.getDocumentByHash_param_mime_type_type_string' => 'The mime type of the file',
  'method_messages.searchGifs' => 'Search gifs',
  'method_messages.searchGifs_param_q_type_string' => 'The search query',
  'method_messages.searchGifs_param_offset_type_int' => 'The offset ',
  'method_messages.getSavedGifs' => 'Get saved gifs',
  'method_messages.getSavedGifs_param_hash_type_int' => '0 or $result[\'hash\']',
  'method_messages.saveGif' => 'Save a GIF',
  'method_messages.saveGif_param_id_type_InputDocument' => 'The GIF to save',
  'method_messages.saveGif_param_unsave_type_Bool' => 'Remove the gif?',
  'method_messages.getInlineBotResults' => 'Call inline bot',
  'method_messages.getInlineBotResults_param_bot_type_InputUser' => 'The bot to call',
  'method_messages.getInlineBotResults_param_peer_type_InputPeer' => 'The chat where to call the bot',
  'method_messages.getInlineBotResults_param_geo_point_type_InputGeoPoint' => 'The current location',
  'method_messages.getInlineBotResults_param_query_type_string' => 'The query to send to the bot',
  'method_messages.getInlineBotResults_param_offset_type_string' => 'The offset to send to the bot',
  'method_messages.setInlineBotResults' => 'Bots only: set the results of an inline query',
  'method_messages.setInlineBotResults_param_gallery_type_true' => 'Is this a gallery?',
  'method_messages.setInlineBotResults_param_private_type_true' => 'Is this result private (not cached)?',
  'method_messages.setInlineBotResults_param_query_id_type_long' => 'Query ID',
  'method_messages.setInlineBotResults_param_results_type_Vector t' => 'Results',
  'method_messages.setInlineBotResults_param_cache_time_type_int' => 'Cache time',
  'method_messages.setInlineBotResults_param_next_offset_type_string' => 'The next offset',
  'method_messages.setInlineBotResults_param_switch_pm_type_InlineBotSwitchPM' => 'Switch to PM?',
  'method_messages.sendInlineBotResult' => 'Send inline bot result obtained with messages.getInlineBotResults to the chat',
  'method_messages.sendInlineBotResult_param_silent_type_true' => 'Disable notifications?',
  'method_messages.sendInlineBotResult_param_background_type_true' => 'Disable background notifications?',
  'method_messages.sendInlineBotResult_param_clear_draft_type_true' => 'Clear the message draft?',
  'method_messages.sendInlineBotResult_param_peer_type_InputPeer' => 'Where to send the message',
  'method_messages.sendInlineBotResult_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
  'method_messages.sendInlineBotResult_param_query_id_type_long' => 'The inline query ID',
  'method_messages.sendInlineBotResult_param_id_type_string' => 'The ID of one of the inline results',
  'method_messages.getMessageEditData' => 'Check if about to edit a message or a media caption',
  'method_messages.getMessageEditData_param_peer_type_InputPeer' => 'The chat',
  'method_messages.getMessageEditData_param_id_type_int' => 'The message ID',
  'method_messages.editMessage' => 'Edit a message',
  'method_messages.editMessage_param_no_webpage_type_true' => 'Disable webpage preview',
  'method_messages.editMessage_param_stop_geo_live_type_true' => 'Stop live location',
  'method_messages.editMessage_param_peer_type_InputPeer' => 'The chat',
  'method_messages.editMessage_param_id_type_int' => 'The message ID',
  'method_messages.editMessage_param_message_type_string' => 'The new message',
  'method_messages.editMessage_param_reply_markup_type_ReplyMarkup' => 'The new keyboard',
  'method_messages.editMessage_param_entities_type_Vector t' => 'The new entities (for styled text)',
  'method_messages.editMessage_param_geo_point_type_InputGeoPoint' => 'The new location',
  'method_messages.editInlineBotMessage' => 'Edit a sent inline message',
  'method_messages.editInlineBotMessage_param_no_webpage_type_true' => 'Disable webpage preview',
  'method_messages.editInlineBotMessage_param_stop_geo_live_type_true' => 'Stop live location',
  'method_messages.editInlineBotMessage_param_id_type_InputBotInlineMessageID' => 'The message ID',
  'method_messages.editInlineBotMessage_param_message_type_string' => 'The new message',
  'method_messages.editInlineBotMessage_param_reply_markup_type_ReplyMarkup' => 'The new keyboard',
  'method_messages.editInlineBotMessage_param_entities_type_Vector t' => 'The new entities (for styled text)',
  'method_messages.editInlineBotMessage_param_geo_point_type_InputGeoPoint' => 'The new location',
  'method_messages.getBotCallbackAnswer' => 'Get the callback answer of a bot (after clicking a button)',
  'method_messages.getBotCallbackAnswer_param_game_type_true' => 'Is this a game?',
  'method_messages.getBotCallbackAnswer_param_peer_type_InputPeer' => 'The chat',
  'method_messages.getBotCallbackAnswer_param_msg_id_type_int' => 'The message ID',
  'method_messages.getBotCallbackAnswer_param_data_type_bytes' => 'The data to send to the bot',
  'method_messages.setBotCallbackAnswer' => 'Bots only: set the callback answer (after a button was clicked)',
  'method_messages.setBotCallbackAnswer_param_alert_type_true' => 'Is this an alert?',
  'method_messages.setBotCallbackAnswer_param_query_id_type_long' => 'The query ID',
  'method_messages.setBotCallbackAnswer_param_message_type_string' => 'The message',
  'method_messages.setBotCallbackAnswer_param_url_type_string' => 'The URL',
  'method_messages.setBotCallbackAnswer_param_cache_time_type_int' => 'Cache time',
  'method_messages.getPeerDialogs' => 'Get dialog info of peers',
  'method_messages.getPeerDialogs_param_peers_type_Vector t' => 'The peers',
  'method_messages.saveDraft' => 'Save a message draft',
  'method_messages.saveDraft_param_no_webpage_type_true' => 'Disable webpage preview',
  'method_messages.saveDraft_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
  'method_messages.saveDraft_param_peer_type_InputPeer' => 'The chat',
  'method_messages.saveDraft_param_message_type_string' => 'The message',
  'method_messages.saveDraft_param_entities_type_Vector t' => 'The entities (for styled text)',
  'method_messages.getAllDrafts' => 'Get all message drafts',
  'method_messages.getFeaturedStickers' => 'Get featured stickers',
  'method_messages.getFeaturedStickers_param_hash_type_int' => '0 or $result[\'hash\']',
  'method_messages.readFeaturedStickers' => 'Mark new featured stickers as read',
  'method_messages.readFeaturedStickers_param_id_type_Vector t' => 'The stickers to mark as read',
  'method_messages.getRecentStickers' => 'Get recent stickers',
  'method_messages.getRecentStickers_param_attached_type_true' => 'Get stickers attached to image?',
  'method_messages.getRecentStickers_param_hash_type_int' => '0 or $result[\'hash\']',
  'method_messages.saveRecentSticker' => 'Add a sticker to recent stickers',
  'method_messages.saveRecentSticker_param_attached_type_true' => 'Get stickers attached to image?',
  'method_messages.saveRecentSticker_param_id_type_InputDocument' => 'The sticker',
  'method_messages.saveRecentSticker_param_unsave_type_Bool' => 'Remove the sticker from recent stickers?',
  'method_messages.clearRecentStickers' => 'Clear all recent stickers',
  'method_messages.clearRecentStickers_param_attached_type_true' => 'Clear recent stickers attached to images?',
  'method_messages.getArchivedStickers' => 'Get all archived stickers',
  'method_messages.getArchivedStickers_param_masks_type_true' => 'Get masks?',
  'method_messages.getArchivedStickers_param_offset_id_type_long' => 'Sticker ID offset',
  'method_messages.getArchivedStickers_param_limit_type_int' => 'Number of stickers to fetch',
  'method_messages.getMaskStickers' => 'Get masks',
  'method_messages.getMaskStickers_param_hash_type_int' => '0 or $result[\'hash\']',
  'method_messages.getAttachedStickers' => 'Get stickers attachable to images',
  'method_messages.getAttachedStickers_param_media_type_InputStickeredMedia' => 'The stickered media',
  'method_messages.setGameScore' => 'Set the game score',
  'method_messages.setGameScore_param_edit_message_type_true' => 'Should the message with the game be edited?',
  'method_messages.setGameScore_param_force_type_true' => 'Force setting the game score',
  'method_messages.setGameScore_param_peer_type_InputPeer' => 'The chat where the game was sent',
  'method_messages.setGameScore_param_id_type_int' => 'The message ID',
  'method_messages.setGameScore_param_user_id_type_InputUser' => 'The user that set the score',
  'method_messages.setGameScore_param_score_type_int' => 'The score',
  'method_messages.setInlineGameScore' => 'Set the game score of an inline message',
  'method_messages.setInlineGameScore_param_edit_message_type_true' => 'Should the message with the game be edited?',
  'method_messages.setInlineGameScore_param_force_type_true' => 'Force setting the game score',
  'method_messages.setInlineGameScore_param_id_type_InputBotInlineMessageID' => 'The ID of the inline message',
  'method_messages.setInlineGameScore_param_user_id_type_InputUser' => 'The user that set the score',
  'method_messages.setInlineGameScore_param_score_type_int' => 'The score',
  'method_messages.getGameHighScores' => 'Get high scores of a game',
  'method_messages.getGameHighScores_param_peer_type_InputPeer' => 'The chat',
  'method_messages.getGameHighScores_param_id_type_int' => 'The message ID',
  'method_messages.getGameHighScores_param_user_id_type_InputUser' => 'The user that set the high scores',
  'method_messages.getInlineGameHighScores' => 'Get high scores of a game sent in an inline message',
  'method_messages.getInlineGameHighScores_param_id_type_InputBotInlineMessageID' => 'The inline message',
  'method_messages.getInlineGameHighScores_param_user_id_type_InputUser' => 'The user that set the high scores',
  'method_messages.getCommonChats' => 'Get chats in common with a user',
  'method_messages.getCommonChats_param_user_id_type_InputUser' => 'The user',
  'method_messages.getCommonChats_param_max_id_type_int' => 'The maximum chat ID to fetch',
  'method_messages.getCommonChats_param_limit_type_int' => 'Number of results to fetch',
  'method_messages.getAllChats' => 'Get all chats (not supergroups or channels)',
  'method_messages.getAllChats_param_except_ids_type_Vector t' => 'Do not fetch these chats (MTProto id)',
  'method_messages.getWebPage' => 'Get webpage preview',
  'method_messages.getWebPage_param_url_type_string' => 'URL',
  'method_messages.getWebPage_param_hash_type_int' => '0 or $result[\'hash\']',
  'method_messages.toggleDialogPin' => 'Pin or unpin dialog',
  'method_messages.toggleDialogPin_param_pinned_type_true' => 'Pin or unpin the dialog?',
  'method_messages.toggleDialogPin_param_peer_type_InputPeer' => 'The peer to pin',
  'method_messages.reorderPinnedDialogs' => 'Reorder pinned dialogs',
  'method_messages.reorderPinnedDialogs_param_force_type_true' => 'Force reordering',
  'method_messages.reorderPinnedDialogs_param_order_type_Vector t' => 'New order',
  'method_messages.getPinnedDialogs' => 'Get pinned dialogs',
  'method_messages.setBotShippingResults' => 'Bots only: set shipping results',
  'method_messages.setBotShippingResults_param_query_id_type_long' => 'Query ID',
  'method_messages.setBotShippingResults_param_error_type_string' => 'Error',
  'method_messages.setBotShippingResults_param_shipping_options_type_Vector t' => 'Shipping options',
  'method_messages.setBotPrecheckoutResults' => 'Bots only: set precheckout results',
  'method_messages.setBotPrecheckoutResults_param_success_type_true' => 'Success?',
  'method_messages.setBotPrecheckoutResults_param_query_id_type_long' => 'Query ID',
  'method_messages.setBotPrecheckoutResults_param_error_type_string' => 'Error',
  'method_messages.uploadMedia' => 'Upload a file without sending it to anyone',
  'method_messages.uploadMedia_param_peer_type_InputPeer' => 'Nothing',
  'method_messages.uploadMedia_param_media_type_InputMedia' => 'The media to upload',
  'method_messages.sendScreenshotNotification' => 'Send screenshot notification',
  'method_messages.sendScreenshotNotification_param_peer_type_InputPeer' => 'Where to send the notification',
  'method_messages.sendScreenshotNotification_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
  'method_messages.getFavedStickers' => 'Get favorite stickers',
  'method_messages.getFavedStickers_param_hash_type_int' => '0 or $result[\'hash\']',
  'method_messages.faveSticker' => 'Add a sticker to favorites',
  'method_messages.faveSticker_param_id_type_InputDocument' => 'The sticker to add to favorites',
  'method_messages.faveSticker_param_unfave_type_Bool' => 'Remove it from favorites?',
  'method_messages.getUnreadMentions' => 'Get unread mentions',
  'method_messages.getUnreadMentions_param_peer_type_InputPeer' => 'The chat where to get unread mentions',
  'method_messages.getUnreadMentions_param_offset_id_type_int' => 'The offset',
  'method_messages.getUnreadMentions_param_add_offset_type_int' => 'The additional offset',
  'method_messages.getUnreadMentions_param_limit_type_int' => 'The number of results to fetch',
  'method_messages.getUnreadMentions_param_max_id_type_int' => 'The maximum message ID to fetch',
  'method_messages.getUnreadMentions_param_min_id_type_int' => 'The minumum message ID to fetch',
  'method_messages.readMentions' => 'Mark mentions as read',
  'method_messages.readMentions_param_peer_type_InputPeer' => 'The chat',
  'method_messages.getRecentLocations' => 'Get recent locations',
  'method_messages.getRecentLocations_param_peer_type_InputPeer' => 'The chat where to search locations',
  'method_messages.getRecentLocations_param_limit_type_int' => 'Number of results to return',
  'method_messages.sendMultiMedia' => 'Send an album',
  'method_messages.sendMultiMedia_param_silent_type_true' => 'Disable notifications?',
  'method_messages.sendMultiMedia_param_background_type_true' => 'Disable background notification?',
  'method_messages.sendMultiMedia_param_clear_draft_type_true' => 'Clear draft?',
  'method_messages.sendMultiMedia_param_peer_type_InputPeer' => 'Where to send the album',
  'method_messages.sendMultiMedia_param_reply_to_msg_id_type_int' => 'Reply to message by ID',
  'method_messages.sendMultiMedia_param_multi_media_type_Vector t' => 'The album',
  'method_messages.uploadEncryptedFile' => 'Upload a secret chat file without sending it to anyone',
  'method_messages.uploadEncryptedFile_param_peer_type_InputEncryptedChat' => 'The chat where to upload the media',
  'method_messages.uploadEncryptedFile_param_file_type_InputEncryptedFile' => 'The file',
  'method_updates.getState' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getDifference' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getDifference_param_pts_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getDifference_param_pts_total_limit_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getDifference_param_date_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getDifference_param_qts_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getChannelDifference' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getChannelDifference_param_force_type_true' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getChannelDifference_param_channel_type_InputChannel' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getChannelDifference_param_filter_type_ChannelMessagesFilter' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getChannelDifference_param_pts_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_updates.getChannelDifference_param_limit_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_photos.updateProfilePhoto' => 'Change the profile photo',
  'method_photos.updateProfilePhoto_param_id_type_InputPhoto' => 'The photo to use',
  'method_photos.uploadProfilePhoto' => 'Upload profile photo',
  'method_photos.uploadProfilePhoto_param_file_type_InputFile' => 'The photo',
  'method_photos.deletePhotos' => 'Delete profile photos',
  'method_photos.deletePhotos_param_id_type_Vector t' => 'The profile photos to delete',
  'method_photos.getUserPhotos' => 'Get the profile photos of a user',
  'method_photos.getUserPhotos_param_user_id_type_InputUser' => 'The user',
  'method_photos.getUserPhotos_param_offset_type_int' => 'Offset',
  'method_photos.getUserPhotos_param_max_id_type_long' => 'Maximum ID of photo to return',
  'method_photos.getUserPhotos_param_limit_type_int' => 'Number of photos to return',
  'method_upload.saveFilePart' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveFilePart_param_file_id_type_long' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveFilePart_param_file_part_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveFilePart_param_bytes_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getFile' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getFile_param_location_type_InputFileLocation' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getFile_param_offset_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getFile_param_limit_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveBigFilePart' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveBigFilePart_param_file_id_type_long' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveBigFilePart_param_file_part_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveBigFilePart_param_file_total_parts_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.saveBigFilePart_param_bytes_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getWebFile' => 'Download a file through telegram',
  'method_upload.getWebFile_param_location_type_InputWebFileLocation' => 'The file',
  'method_upload.getWebFile_param_offset_type_int' => 'The offset in bytes',
  'method_upload.getWebFile_param_limit_type_int' => 'The number of bytes to fetch',
  'method_upload.getCdnFile' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getCdnFile_param_file_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getCdnFile_param_offset_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getCdnFile_param_limit_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.reuploadCdnFile' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.reuploadCdnFile_param_file_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.reuploadCdnFile_param_request_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getCdnFileHashes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getCdnFileHashes_param_file_token_type_bytes' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_upload.getCdnFileHashes_param_offset_type_int' => 'You cannot use this method directly, use the upload, download_to_stream, download_to_file, download_to_dir methods instead; see https://docs.madelineproto.xyz for more info',
  'method_help.getConfig' => 'Get server configuration',
  'method_help.getNearestDc' => 'Get nearest datacenter',
  'method_help.getAppUpdate' => 'Get info about app updates',
  'method_help.saveAppLog' => 'Log data for developer of this app',
  'method_help.saveAppLog_param_events_type_Vector t' => 'Event list',
  'method_help.getInviteText' => 'Get invitation text',
  'method_help.getSupport' => 'Get info of support user',
  'method_help.getAppChangelog' => 'Get the changelog of this app',
  'method_help.getAppChangelog_param_prev_app_version_type_string' => 'Previous app version',
  'method_help.getTermsOfService' => 'Get terms of service',
  'method_help.setBotUpdatesStatus' => 'Set the update status of webhook',
  'method_help.setBotUpdatesStatus_param_pending_updates_count_type_int' => 'Pending update count',
  'method_help.setBotUpdatesStatus_param_message_type_string' => 'Message',
  'method_help.getCdnConfig' => 'Get CDN configuration',
  'method_help.getRecentMeUrls' => 'Get recent t.me URLs',
  'method_help.getRecentMeUrls_param_referer_type_string' => 'Referrer',
  'method_channels.readHistory' => 'Mark channel/supergroup history as read',
  'method_channels.readHistory_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.readHistory_param_max_id_type_int' => 'Maximum message ID to mark as read',
  'method_channels.deleteMessages' => 'Delete channel/supergroup messages',
  'method_channels.deleteMessages_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.deleteMessages_param_id_type_Vector t' => 'The IDs of messages to delete',
  'method_channels.deleteUserHistory' => 'Delete all messages of a user in a channel/supergroup',
  'method_channels.deleteUserHistory_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.deleteUserHistory_param_user_id_type_InputUser' => 'The user',
  'method_channels.reportSpam' => 'Report a message in a supergroup/channel for spam',
  'method_channels.reportSpam_param_channel_type_InputChannel' => 'The channel',
  'method_channels.reportSpam_param_user_id_type_InputUser' => 'The user that sent the messages',
  'method_channels.reportSpam_param_id_type_Vector t' => 'The IDs of messages to report',
  'method_channels.getMessages' => 'Get channel/supergroup messages',
  'method_channels.getMessages_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.getMessages_param_id_type_Vector t' => 'The message IDs',
  'method_channels.getParticipants' => 'Get channel/supergroup participants (you should use `$MadelineProto->get_pwr_chat($id)` instead)',
  'method_channels.getParticipants_param_channel_type_InputChannel' => 'The channel',
  'method_channels.getParticipants_param_filter_type_ChannelParticipantsFilter' => 'Member filter',
  'method_channels.getParticipants_param_offset_type_int' => 'Offset',
  'method_channels.getParticipants_param_limit_type_int' => 'Limit',
  'method_channels.getParticipants_param_hash_type_int' => 'Sorted list of IDs of participants you already fetched',
  'method_channels.getParticipant' => 'Get info about a certain channel/supergroup participant',
  'method_channels.getParticipant_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.getParticipant_param_user_id_type_InputUser' => 'The user to fetch info about',
  'method_channels.getChannels' => 'Get info about multiple channels/supergroups',
  'method_channels.getChannels_param_id_type_Vector t' => 'The channel/supergroup MTProto IDs',
  'method_channels.getFullChannel' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_channels.getFullChannel_param_channel_type_InputChannel' => 'You cannot use this method directly, use the get_pwr_chat, get_info, get_full_info methods instead (see https://docs.madelineproto.xyz for more info)',
  'method_channels.createChannel' => 'Create channel/supergroup',
  'method_channels.createChannel_param_broadcast_type_true' => 'Set this to true to create a channel',
  'method_channels.createChannel_param_megagroup_type_true' => 'Set this to true to create a supergroup',
  'method_channels.createChannel_param_title_type_string' => 'Supergroup/channel title',
  'method_channels.createChannel_param_about_type_string' => 'About text',
  'method_channels.editAbout' => 'Edit the about text of a channel/supergroup',
  'method_channels.editAbout_param_channel_type_InputChannel' => 'The channel',
  'method_channels.editAbout_param_about_type_string' => 'The new about text',
  'method_channels.editAdmin' => 'Edit admin permissions of a user in a channel/supergroup',
  'method_channels.editAdmin_param_channel_type_InputChannel' => 'The channel',
  'method_channels.editAdmin_param_user_id_type_InputUser' => 'The user',
  'method_channels.editAdmin_param_admin_rights_type_ChannelAdminRights' => 'The new admin rights',
  'method_channels.editTitle' => 'Edit the title of a supergroup/channel',
  'method_channels.editTitle_param_channel_type_InputChannel' => 'The channel',
  'method_channels.editTitle_param_title_type_string' => 'The new channel/supergroup title',
  'method_channels.editPhoto' => 'Edit the photo of a supergroup/channel',
  'method_channels.editPhoto_param_channel_type_InputChannel' => 'The channel',
  'method_channels.editPhoto_param_photo_type_InputChatPhoto' => 'The new photo',
  'method_channels.checkUsername' => 'Check if this username is free and can be assigned to a channel/supergroup',
  'method_channels.checkUsername_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.checkUsername_param_username_type_string' => 'The new username for this channel/supergroup',
  'method_channels.updateUsername' => 'Update the username of a supergroup/channel',
  'method_channels.updateUsername_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.updateUsername_param_username_type_string' => 'The new username',
  'method_channels.joinChannel' => 'Join a channel/supergroup',
  'method_channels.joinChannel_param_channel_type_InputChannel' => 'The channel/supergroup to join',
  'method_channels.leaveChannel' => 'Leave a channel/supergroup',
  'method_channels.leaveChannel_param_channel_type_InputChannel' => 'The channel/supergroup to leave',
  'method_channels.inviteToChannel' => 'Add users to channel/supergroup',
  'method_channels.inviteToChannel_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.inviteToChannel_param_users_type_Vector t' => 'The users to add',
  'method_channels.exportInvite' => 'Export the invite link of a channel',
  'method_channels.exportInvite_param_channel_type_InputChannel' => 'The channel',
  'method_channels.deleteChannel' => 'Delete a channel/supergroup',
  'method_channels.deleteChannel_param_channel_type_InputChannel' => 'The channel/supergroup to delete',
  'method_channels.toggleInvites' => 'Allow or disallow any user to invite users to this channel/supergroup',
  'method_channels.toggleInvites_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.toggleInvites_param_enabled_type_Bool' => 'Allow or disallow',
  'method_channels.exportMessageLink' => 'Get the link of a message in a channel',
  'method_channels.exportMessageLink_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.exportMessageLink_param_id_type_int' => 'The ID of the message',
  'method_channels.exportMessageLink_param_grouped_type_Bool' => 'Is this an album?',
  'method_channels.toggleSignatures' => 'Toggle channel signatures',
  'method_channels.toggleSignatures_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.toggleSignatures_param_enabled_type_Bool' => 'Enable or disable channel signatures?',
  'method_channels.updatePinnedMessage' => 'Set the pinned message of a channel/supergroup',
  'method_channels.updatePinnedMessage_param_silent_type_true' => 'Pin silently',
  'method_channels.updatePinnedMessage_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.updatePinnedMessage_param_id_type_int' => 'The ID of the message to pin',
  'method_channels.getAdminedPublicChannels' => 'Get all supergroups/channels where you\'re admin',
  'method_channels.editBanned' => 'Kick or ban a user from a channel/supergroup',
  'method_channels.editBanned_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.editBanned_param_user_id_type_InputUser' => 'The user to kick/ban',
  'method_channels.editBanned_param_banned_rights_type_ChannelBannedRights' => 'Banned/kicked permissions',
  'method_channels.getAdminLog' => 'Get admin log of a channel/supergroup',
  'method_channels.getAdminLog_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.getAdminLog_param_q_type_string' => 'Search query',
  'method_channels.getAdminLog_param_events_filter_type_ChannelAdminLogEventsFilter' => 'Event filter',
  'method_channels.getAdminLog_param_admins_type_Vector t' => 'Fetch only actions from these admins',
  'method_channels.getAdminLog_param_max_id_type_long' => 'Maximum message ID to fetch',
  'method_channels.getAdminLog_param_min_id_type_long' => 'Minimum message ID to fetch',
  'method_channels.getAdminLog_param_limit_type_int' => 'Number of results to fetch',
  'method_channels.setStickers' => 'Set the supergroup/channel stickerpack',
  'method_channels.setStickers_param_channel_type_InputChannel' => 'The channel/supergoup',
  'method_channels.setStickers_param_stickerset_type_InputStickerSet' => 'The stickerset',
  'method_channels.readMessageContents' => 'Mark channel/supergroup messages as read',
  'method_channels.readMessageContents_param_channel_type_InputChannel' => 'The channel',
  'method_channels.readMessageContents_param_id_type_Vector t' => 'List of message IDs',
  'method_channels.deleteHistory' => 'Delete the history of a supergroup/channel',
  'method_channels.deleteHistory_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.deleteHistory_param_max_id_type_int' => 'Maximum message ID to delete',
  'method_channels.togglePreHistoryHidden' => 'Enable or disable hidden history for new channel/supergroup users',
  'method_channels.togglePreHistoryHidden_param_channel_type_InputChannel' => 'The channel/supergroup',
  'method_channels.togglePreHistoryHidden_param_enabled_type_Bool' => 'Enable or disable hidden history for new channel/supergroup users',
  'method_bots.sendCustomRequest' => 'Send a custom request to the bot API',
  'method_bots.sendCustomRequest_param_custom_method_type_string' => 'The method to call',
  'method_bots.sendCustomRequest_param_params_type_DataJSON' => 'Method parameters',
  'method_bots.answerWebhookJSONQuery' => 'Send webhook request via bot API',
  'method_bots.answerWebhookJSONQuery_param_query_id_type_long' => 'The query ID',
  'method_bots.answerWebhookJSONQuery_param_data_type_DataJSON' => 'The parameters',
  'method_payments.getPaymentForm' => 'Get payment form',
  'method_payments.getPaymentForm_param_msg_id_type_int' => 'Message ID',
  'method_payments.getPaymentReceipt' => 'Get payment receipt',
  'method_payments.getPaymentReceipt_param_msg_id_type_int' => 'The message ID',
  'method_payments.validateRequestedInfo' => 'Validate requested payment info',
  'method_payments.validateRequestedInfo_param_save_type_true' => 'Save payment info?',
  'method_payments.validateRequestedInfo_param_msg_id_type_int' => 'The message ID',
  'method_payments.validateRequestedInfo_param_info_type_PaymentRequestedInfo' => 'The requested payment info',
  'method_payments.sendPaymentForm' => 'Bots only: send payment form',
  'method_payments.sendPaymentForm_param_msg_id_type_int' => 'Message ID',
  'method_payments.sendPaymentForm_param_requested_info_id_type_string' => 'ID of requested info',
  'method_payments.sendPaymentForm_param_shipping_option_id_type_string' => 'Shipping option ID',
  'method_payments.sendPaymentForm_param_credentials_type_InputPaymentCredentials' => 'Payment credentials',
  'method_payments.getSavedInfo' => 'Get saved payments info',
  'method_payments.clearSavedInfo' => 'Clear saved payments info',
  'method_payments.clearSavedInfo_param_credentials_type_true' => 'Clear credentials?',
  'method_payments.clearSavedInfo_param_info_type_true' => 'Clear payment info?',
  'method_stickers.createStickerSet' => 'Create stickerset',
  'method_stickers.createStickerSet_param_masks_type_true' => 'Masks?',
  'method_stickers.createStickerSet_param_user_id_type_InputUser' => 'The user ID associated to this stickerset',
  'method_stickers.createStickerSet_param_title_type_string' => 'The stickerset title',
  'method_stickers.createStickerSet_param_short_name_type_string' => 'The stickerset short name',
  'method_stickers.createStickerSet_param_stickers_type_Vector t' => 'The stickers to add',
  'method_stickers.removeStickerFromSet' => 'Remove sticker from stickerset',
  'method_stickers.removeStickerFromSet_param_sticker_type_InputDocument' => 'The sticker to remove',
  'method_stickers.changeStickerPosition' => 'Change sticker position in photo',
  'method_stickers.changeStickerPosition_param_sticker_type_InputDocument' => 'The sticker',
  'method_stickers.changeStickerPosition_param_position_type_int' => 'New position',
  'method_stickers.addStickerToSet' => 'Add sticker to stickerset',
  'method_stickers.addStickerToSet_param_stickerset_type_InputStickerSet' => 'The stickerset',
  'method_stickers.addStickerToSet_param_sticker_type_InputStickerSetItem' => 'The sticker',
  'method_phone.getCallConfig' => 'Get call configuration',
  'method_phone.requestCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.requestCall_param_user_id_type_InputUser' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.requestCall_param_g_a_hash_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.requestCall_param_protocol_type_PhoneCallProtocol' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.acceptCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.acceptCall_param_peer_type_InputPhoneCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.acceptCall_param_g_b_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.acceptCall_param_protocol_type_PhoneCallProtocol' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.confirmCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.confirmCall_param_peer_type_InputPhoneCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.confirmCall_param_g_a_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.confirmCall_param_key_fingerprint_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.confirmCall_param_protocol_type_PhoneCallProtocol' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.receivedCall' => 'Notify server that you received a call (server will refuse all incoming calls until the current call is over)',
  'method_phone.receivedCall_param_peer_type_InputPhoneCall' => 'The phone call you received',
  'method_phone.discardCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.discardCall_param_peer_type_InputPhoneCall' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.discardCall_param_duration_type_int' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.discardCall_param_reason_type_PhoneCallDiscardReason' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.discardCall_param_connection_id_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.setCallRating' => 'Set phone call rating',
  'method_phone.setCallRating_param_peer_type_InputPhoneCall' => 'The phone call',
  'method_phone.setCallRating_param_rating_type_int' => 'Rating (1-5 stars)',
  'method_phone.setCallRating_param_comment_type_string' => 'An optional comment',
  'method_phone.saveCallDebug' => 'Save call debugging info',
  'method_phone.saveCallDebug_param_peer_type_InputPhoneCall' => 'The call',
  'method_phone.saveCallDebug_param_debug_type_DataJSON' => 'Debugging info',
  'method_langpack.getLangPack' => 'Get language pack',
  'method_langpack.getLangPack_param_lang_code_type_string' => 'Language code',
  'method_langpack.getStrings' => 'Get language pack strings',
  'method_langpack.getStrings_param_lang_code_type_string' => 'Language code',
  'method_langpack.getStrings_param_keys_type_Vector t' => 'Keys',
  'method_langpack.getDifference' => 'Get language pack updates',
  'method_langpack.getDifference_param_from_version_type_int' => 'Previous version',
  'method_langpack.getLanguages' => 'Get available languages',
  'method_auth.sendCode_param_sms_type_type_int' => 'You cannot use this method directly, use the phone_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.sendCode_param_lang_code_type_string' => 'You cannot use this method directly, use the phone_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.sendCall' => 'Send verification phone call',
  'method_auth.sendCall_param_phone_number_type_string' => 'The phone number',
  'method_auth.sendCall_param_phone_code_hash_type_string' => 'The phone code hash',
  'method_account.registerDevice_param_device_model_type_string' => 'Device model',
  'method_account.registerDevice_param_system_version_type_string' => 'System version',
  'method_account.registerDevice_param_app_version_type_string' => 'App version',
  'method_account.registerDevice_param_lang_code_type_string' => 'Language code',
  'method_contacts.getContacts_param_hash_type_string' => 'List of contact user IDs you already cached',
  'method_contacts.importContacts_param_replace_type_Bool' => 'Replace contacts?',
  'method_contacts.getSuggested' => 'Get suggested contacts',
  'method_contacts.getSuggested_param_limit_type_int' => 'Number of results to return',
  'method_messages.getDialogs_param_offset_type_int' => 'Offset',
  'method_messages.getDialogs_param_max_id_type_int' => 'Maximum ID of result to return',
  'method_messages.getHistory_param_offset_type_int' => 'Message ID offset',
  'method_messages.search_param_offset_type_int' => 'Offset ',
  'method_messages.readHistory_param_offset_type_int' => 'Offset',
  'method_messages.readHistory_param_read_contents_type_Bool' => 'Mark messages as read?',
  'method_messages.deleteHistory_param_offset_type_int' => 'Offset',
  'method_messages.forwardMessages_param_peer_type_InputPeer' => 'Peer',
  'method_photos.updateProfilePhoto_param_crop_type_InputPhotoCrop' => 'Cropping info',
  'method_photos.uploadProfilePhoto_param_caption_type_string' => 'Caption type',
  'method_photos.uploadProfilePhoto_param_geo_point_type_InputGeoPoint' => 'Location',
  'method_photos.uploadProfilePhoto_param_crop_type_InputPhotoCrop' => 'Cropping info',
  'method_help.getAppUpdate_param_device_model_type_string' => 'Device model',
  'method_help.getAppUpdate_param_system_version_type_string' => 'System version',
  'method_help.getAppUpdate_param_app_version_type_string' => 'App version',
  'method_help.getAppUpdate_param_lang_code_type_string' => 'Langauge code',
  'method_help.getInviteText_param_lang_code_type_string' => 'Language',
  'method_photos.getUserPhotos_param_max_id_type_int' => 'Maximum ID of photo to return',
  'method_messages.forwardMessage' => 'Forward message',
  'method_messages.forwardMessage_param_peer_type_InputPeer' => 'From where to forward the message',
  'method_messages.forwardMessage_param_id_type_int' => 'The message ID',
  'method_messages.sendBroadcast' => 'Send a message to all users in the chat list',
  'method_messages.sendBroadcast_param_contacts_type_Vector t' => 'The users to which send the message',
  'method_messages.sendBroadcast_param_message_type_string' => 'The message',
  'method_messages.sendBroadcast_param_media_type_InputMedia' => 'The media',
  'method_auth.sendSms' => 'Send SMS verification code',
  'method_auth.sendSms_param_phone_number_type_string' => 'Phone number',
  'method_auth.sendSms_param_phone_code_hash_type_string' => 'Phone code ash',
  'method_invokeWithLayer18' => 'Invoke this method with layer 18',
  'method_invokeWithLayer18_param_query_type_!X' => 'The method call',
  'method_messages.getAllStickers_param_hash_type_string' => 'Previously fetched stickers',
  'method_geochats.getLocated' => 'Get nearby geochats',
  'method_geochats.getLocated_param_geo_point_type_InputGeoPoint' => 'Current location',
  'method_geochats.getLocated_param_radius_type_int' => 'Radius',
  'method_geochats.getLocated_param_limit_type_int' => 'Number of results to return',
  'method_geochats.getRecents' => 'Get recent geochats',
  'method_geochats.getRecents_param_offset_type_int' => 'Offset',
  'method_geochats.getRecents_param_limit_type_int' => 'Number of results to return',
  'method_geochats.checkin' => 'Join a geochat',
  'method_geochats.checkin_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.getFullChat' => 'Get full info about a geochat',
  'method_geochats.getFullChat_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.editChatTitle' => 'Edit geochat title',
  'method_geochats.editChatTitle_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.editChatTitle_param_title_type_string' => 'The new title',
  'method_geochats.editChatTitle_param_address_type_string' => 'The new address',
  'method_geochats.editChatPhoto' => 'Edit geochat photo',
  'method_geochats.editChatPhoto_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.editChatPhoto_param_photo_type_InputChatPhoto' => 'The new photo',
  'method_geochats.search' => 'Search messages in geocha',
  'method_geochats.search_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.search_param_q_type_string' => 'The search query',
  'method_geochats.search_param_filter_type_MessagesFilter' => 'Search filter',
  'method_geochats.search_param_min_date_type_int' => 'Minumum date',
  'method_geochats.search_param_max_date_type_int' => 'Maximum date',
  'method_geochats.search_param_offset_type_int' => 'Offset',
  'method_geochats.search_param_max_id_type_int' => 'Maximum message ID',
  'method_geochats.search_param_limit_type_int' => 'Number of results to return',
  'method_geochats.getHistory' => 'Get geochat history',
  'method_geochats.getHistory_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.getHistory_param_offset_type_int' => 'Offset',
  'method_geochats.getHistory_param_max_id_type_int' => 'Maximum message ID',
  'method_geochats.getHistory_param_limit_type_int' => 'Number of results to return',
  'method_geochats.setTyping' => 'Send typing notification to geochat',
  'method_geochats.setTyping_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.setTyping_param_typing_type_Bool' => 'Typing or not typing',
  'method_geochats.sendMessage' => 'Send message to geochat',
  'method_geochats.sendMessage_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.sendMessage_param_message_type_string' => 'The message',
  'method_geochats.sendMedia' => 'Send media to geochat',
  'method_geochats.sendMedia_param_peer_type_InputGeoChat' => 'The geochat',
  'method_geochats.sendMedia_param_media_type_InputMedia' => 'The media',
  'method_geochats.createGeoChat' => 'Create geochat',
  'method_geochats.createGeoChat_param_title_type_string' => 'Geochat title',
  'method_geochats.createGeoChat_param_geo_point_type_InputGeoPoint' => 'Geochat location',
  'method_geochats.createGeoChat_param_address_type_string' => 'Geochat address',
  'method_geochats.createGeoChat_param_venue_type_string' => 'Geochat venue ',
  'method_account.setPassword' => 'Set 2FA password',
  'method_account.setPassword_param_current_password_hash_type_bytes' => 'Use only if you have set a 2FA password: `$current_salt = $MadelineProto->account->getPassword()[\'current_salt\']; $current_password_hash = hash(\'sha256\', $current_salt.$password.$current_salt, true);`',
  'method_account.setPassword_param_new_salt_type_bytes' => 'New salt',
  'method_account.setPassword_param_new_password_hash_type_bytes' => '`hash(\'sha256\', $new_salt.$new_password.$new_salt, true)`',
  'method_account.setPassword_param_hint_type_string' => 'Hint',
  'method_messages.installStickerSet_param_disabled_type_Bool' => 'Disable stickerset?',
  'method_messages.startBot_param_chat_id_type_InputPeer' => 'Chat ID',
  'method_help.getAppChangelog_param_device_model_type_string' => 'Device model',
  'method_help.getAppChangelog_param_system_version_type_string' => 'System version',
  'method_help.getAppChangelog_param_app_version_type_string' => 'App version',
  'method_help.getAppChangelog_param_lang_code_type_string' => 'Language code',
  'method_channels.getDialogs' => 'Get channel dialogs',
  'method_channels.getDialogs_param_offset_type_int' => 'Offset',
  'method_channels.getDialogs_param_limit_type_int' => 'Number of results to return',
  'method_channels.getImportantHistory' => 'Get important channel/supergroup history',
  'method_channels.getImportantHistory_param_channel_type_InputChannel' => 'The supergroup/channel',
  'method_channels.getImportantHistory_param_offset_id_type_int' => 'Message ID offset',
  'method_channels.getImportantHistory_param_add_offset_type_int' => 'Additional offset',
  'method_channels.getImportantHistory_param_limit_type_int' => 'Number of results to return',
  'method_channels.getImportantHistory_param_max_id_type_int' => 'Maximum message ID',
  'method_channels.getImportantHistory_param_min_id_type_int' => 'Minumum message ID',
  'method_channels.createChannel_param_users_type_Vector t' => 'Users to add to channel',
  'method_channels.editAdmin_param_role_type_ChannelParticipantRole' => 'User role',
  'method_channels.toggleComments' => 'Enable channel comments',
  'method_channels.toggleComments_param_channel_type_InputChannel' => 'The channel ',
  'method_channels.toggleComments_param_enabled_type_Bool' => 'Enable or disable comments',
  'method_channels.kickFromChannel' => 'Kick user from channel',
  'method_channels.kickFromChannel_param_channel_type_InputChannel' => 'The channel',
  'method_channels.kickFromChannel_param_user_id_type_InputUser' => 'The user to kick',
  'method_channels.kickFromChannel_param_kicked_type_Bool' => 'Kick or unkick?',
  'method_messages.getChannelDialogs' => 'Get channel/supergruop dialogs',
  'method_messages.getChannelDialogs_param_offset_type_int' => 'Offset',
  'method_messages.getChannelDialogs_param_limit_type_int' => 'Number of results to return',
  'method_messages.getImportantHistory' => 'Get important message history',
  'method_messages.getImportantHistory_param_peer_type_InputPeer' => 'Peer',
  'method_messages.getImportantHistory_param_max_id_type_int' => 'Maximum message ID to fetch',
  'method_messages.getImportantHistory_param_min_id_type_int' => 'Minumum message ID to fetch',
  'method_messages.getImportantHistory_param_limit_type_int' => 'Number of results to fetch',
  'method_messages.readChannelHistory' => 'Mark channel/supergroup history as read',
  'method_messages.readChannelHistory_param_peer_type_InputPeer' => 'The channel/supergruop',
  'method_messages.readChannelHistory_param_max_id_type_int' => 'Maximum message ID to mark as read',
  'method_messages.createChannel' => 'Create channel',
  'method_messages.createChannel_param_title_type_string' => 'Channel/supergroup title',
  'method_messages.deleteChannelMessages' => 'Delete channel messages',
  'method_messages.deleteChannelMessages_param_peer_type_InputPeer' => 'The channel/supergroup',
  'method_messages.deleteChannelMessages_param_id_type_Vector t' => 'The IDs of messages to delete',
  'method_updates.getChannelDifference_param_peer_type_InputPeer' => 'You cannot use this method directly, see https://docs.madelineproto.xyz for more info on handling updates',
  'method_messages.search_param_important_only_type_true' => 'Show only important messages',
  'method_messages.sendMessage_param_broadcast_type_true' => 'Broadcast this message',
  'method_messages.sendMedia_param_broadcast_type_true' => 'Broadcast this message',
  'method_messages.forwardMessages_param_broadcast_type_true' => 'Broadcast this message',
  'method_messages.deactivateChat' => 'Deactivate chat',
  'method_messages.deactivateChat_param_chat_id_type_InputPeer' => 'The chat to deactivate',
  'method_messages.deactivateChat_param_enabled_type_Bool' => 'Activate or deactivate?',
  'method_help.getTermsOfService_param_lang_code_type_string' => 'Language code',
  'method_messages.sendInlineBotResult_param_broadcast_type_true' => 'Broadcast this message?',
  'method_channels.getImportantHistory_param_offset_date_type_int' => 'Date offset',
  'method_messages.getUnusedStickers' => 'Get unused stickers',
  'method_messages.getUnusedStickers_param_limit_type_int' => 'Number of results to return',
  'method_destroy_auth_key' => 'Destroy current authorization key',
  'method_phone.requestCall_param_g_a_type_bytes' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_phone.acceptCall_param_key_fingerprint_type_long' => 'You cannot use this method directly, see https://docs.madelineproto.xyz#calls for more info on handling calls',
  'method_req_DH_params_param_p_type_string' => 'Factorized p from pq',
  'method_req_DH_params_param_q_type_string' => 'Factorized q from pq',
  'method_req_DH_params_param_encrypted_data_type_string' => 'Encrypted message',
  'method_set_client_DH_params_param_encrypted_data_type_string' => 'Encrypted message',
  'method_contest.saveDeveloperInfo' => 'Save developer info for telegram contest',
  'method_contest.saveDeveloperInfo_param_vk_id_type_int' => 'VK user ID',
  'method_contest.saveDeveloperInfo_param_name_type_string' => 'Name',
  'method_contest.saveDeveloperInfo_param_phone_number_type_string' => 'Phone number',
  'method_contest.saveDeveloperInfo_param_age_type_int' => 'Age',
  'method_contest.saveDeveloperInfo_param_city_type_string' => 'City',
  'method_auth.importBotAuthorization_param_a_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.importBotAuthorization_param_b_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.importBotAuthorization_param_c_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_auth.importBotAuthorization_param_d_type_true' => 'You cannot use this method directly, use the bot_login method instead (see https://docs.madelineproto.xyz for more info)',
  'object_vector' => 'Array',
  'object_resPQ' => 'Contains pq to factorize',
  'object_resPQ_param_nonce_type_int128' => 'Nonce',
  'object_resPQ_param_server_nonce_type_int128' => 'Server nonce',
  'object_resPQ_param_pq_type_bytes' => 'PQ ',
  'object_resPQ_param_server_public_key_fingerprints_type_Vector t' => 'RSA key fingerprints',
  'object_p_q_inner_data' => 'PQ inner data',
  'object_p_q_inner_data_param_pq_type_bytes' => 'PQ',
  'object_p_q_inner_data_param_p_type_bytes' => 'P',
  'object_p_q_inner_data_param_q_type_bytes' => 'Q',
  'object_p_q_inner_data_param_nonce_type_int128' => 'Nonce',
  'object_p_q_inner_data_param_server_nonce_type_int128' => 'Nonce',
  'object_p_q_inner_data_param_new_nonce_type_int256' => 'Nonce',
  'object_p_q_inner_data_temp' => 'Inner data temp',
  'object_p_q_inner_data_temp_param_pq_type_bytes' => 'Pq',
  'object_p_q_inner_data_temp_param_p_type_bytes' => 'P',
  'object_p_q_inner_data_temp_param_q_type_bytes' => 'Q',
  'object_p_q_inner_data_temp_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_p_q_inner_data_temp_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_p_q_inner_data_temp_param_new_nonce_type_int256' => 'New nonce',
  'object_p_q_inner_data_temp_param_expires_in_type_int' => 'Expires in',
  'object_server_DH_params_fail' => 'Server params fail',
  'object_server_DH_params_fail_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_server_DH_params_fail_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_server_DH_params_fail_param_new_nonce_hash_type_int128' => 'New nonce hash',
  'object_server_DH_params_ok' => 'Server params ok',
  'object_server_DH_params_ok_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_server_DH_params_ok_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_server_DH_params_ok_param_encrypted_answer_type_bytes' => 'Encrypted answer',
  'object_server_DH_inner_data' => 'Server inner data',
  'object_server_DH_inner_data_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_server_DH_inner_data_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_server_DH_inner_data_param_g_type_int' => 'G',
  'object_server_DH_inner_data_param_dh_prime_type_bytes' => 'Dh prime',
  'object_server_DH_inner_data_param_g_a_type_bytes' => 'G a',
  'object_server_DH_inner_data_param_server_time_type_int' => 'Server time',
  'object_client_DH_inner_data' => 'Client inner data',
  'object_client_DH_inner_data_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_client_DH_inner_data_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_client_DH_inner_data_param_retry_id_type_long' => 'Retry ID',
  'object_client_DH_inner_data_param_g_b_type_bytes' => 'G b',
  'object_dh_gen_ok' => 'Dh gen ok',
  'object_dh_gen_ok_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_dh_gen_ok_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_dh_gen_ok_param_new_nonce_hash1_type_int128' => 'New nonce hash1',
  'object_dh_gen_retry' => 'Dh gen retry',
  'object_dh_gen_retry_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_dh_gen_retry_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_dh_gen_retry_param_new_nonce_hash2_type_int128' => 'New nonce hash2',
  'object_dh_gen_fail' => 'Dh gen fail',
  'object_dh_gen_fail_param_nonce_type_int128' => 'Random number for cryptographic security',
  'object_dh_gen_fail_param_server_nonce_type_int128' => 'Random number for cryptographic security, given by server',
  'object_dh_gen_fail_param_new_nonce_hash3_type_int128' => 'New nonce hash3',
  'object_rpc_result' => 'Rpc result',
  'object_rpc_result_param_req_msg_id_type_long' => 'Req msg ID',
  'object_rpc_result_param_result_type_Object' => 'Result',
  'object_rpc_error' => 'Rpc error',
  'object_rpc_error_param_error_code_type_int' => 'Error code',
  'object_rpc_error_param_error_message_type_string' => 'Error message',
  'object_rpc_answer_unknown' => 'Rpc answer unknown',
  'object_rpc_answer_dropped_running' => 'Rpc answer dropped running',
  'object_rpc_answer_dropped' => 'Rpc answer dropped',
  'object_rpc_answer_dropped_param_msg_id_type_long' => 'Msg ID',
  'object_rpc_answer_dropped_param_seq_no_type_int' => 'Seq no',
  'object_rpc_answer_dropped_param_bytes_type_int' => 'Bytes',
  'object_future_salt' => 'Future salt',
  'object_future_salt_param_valid_since_type_int' => 'Valid since',
  'object_future_salt_param_valid_until_type_int' => 'Valid until',
  'object_future_salt_param_salt_type_long' => 'Salt',
  'object_future_salts' => 'Future salts',
  'object_future_salts_param_req_msg_id_type_long' => 'Req msg ID',
  'object_future_salts_param_now_type_int' => 'Now',
  'object_future_salts_param_salts_type_vector' => 'Salts',
  'object_pong' => 'Pong',
  'object_pong_param_msg_id_type_long' => 'Msg ID',
  'object_pong_param_ping_id_type_long' => 'Ping ID',
  'object_destroy_session_ok' => 'Destroy session ok',
  'object_destroy_session_ok_param_session_id_type_long' => 'Session ID',
  'object_destroy_session_none' => 'Destroy session none',
  'object_destroy_session_none_param_session_id_type_long' => 'Session ID',
  'object_new_session_created' => 'New session created',
  'object_new_session_created_param_first_msg_id_type_long' => 'First msg ID',
  'object_new_session_created_param_unique_id_type_long' => 'Unique ID',
  'object_new_session_created_param_server_salt_type_long' => 'Server salt',
  'object_msg_container' => 'Msg container',
  'object_msg_container_param_messages_type_vector' => 'Messages',
  'object_MTmessage' => 'MTProto message',
  'object_MTmessage_param_msg_id_type_long' => 'Message ID',
  'object_MTmessage_param_seqno_type_int' => 'Seqno',
  'object_MTmessage_param_bytes_type_int' => 'Message body',
  'object_MTmessage_param_body_type_Object' => 'Message body',
  'object_msg_copy' => 'Msg copy',
  'object_msg_copy_param_orig_message_type_MTMessage' => 'Orig message',
  'object_gzip_packed' => 'Gzip packed',
  'object_gzip_packed_param_packed_data_type_bytes' => 'Packed data',
  'object_msgs_ack' => 'Msgs ack',
  'object_msgs_ack_param_msg_ids_type_Vector t' => 'Msg IDs',
  'object_bad_msg_notification' => 'Bad msg notification',
  'object_bad_msg_notification_param_bad_msg_id_type_long' => 'Bad msg ID',
  'object_bad_msg_notification_param_bad_msg_seqno_type_int' => 'Bad msg seqno',
  'object_bad_msg_notification_param_error_code_type_int' => 'Error code',
  'object_bad_server_salt' => 'Bad server salt',
  'object_bad_server_salt_param_bad_msg_id_type_long' => 'Bad msg ID',
  'object_bad_server_salt_param_bad_msg_seqno_type_int' => 'Bad msg seqno',
  'object_bad_server_salt_param_error_code_type_int' => 'Error code',
  'object_bad_server_salt_param_new_server_salt_type_long' => 'New server salt',
  'object_msg_resend_req' => 'Msg resend req',
  'object_msg_resend_req_param_msg_ids_type_Vector t' => 'Msg IDs',
  'object_msgs_state_req' => 'Msgs state req',
  'object_msgs_state_req_param_msg_ids_type_Vector t' => 'Msg IDs',
  'object_msgs_state_info' => 'Msgs state info',
  'object_msgs_state_info_param_req_msg_id_type_long' => 'Req msg ID',
  'object_msgs_state_info_param_info_type_bytes' => 'Info',
  'object_msgs_all_info' => 'Msgs all info',
  'object_msgs_all_info_param_msg_ids_type_Vector t' => 'Msg IDs',
  'object_msgs_all_info_param_info_type_bytes' => 'Info',
  'object_msg_detailed_info' => 'Msg detailed info',
  'object_msg_detailed_info_param_msg_id_type_long' => 'Msg ID',
  'object_msg_detailed_info_param_answer_msg_id_type_long' => 'Answer msg ID',
  'object_msg_detailed_info_param_bytes_type_int' => 'Bytes',
  'object_msg_detailed_info_param_status_type_int' => 'Status',
  'object_msg_new_detailed_info' => 'Msg new detailed info',
  'object_msg_new_detailed_info_param_answer_msg_id_type_long' => 'Answer msg ID',
  'object_msg_new_detailed_info_param_bytes_type_int' => 'Bytes',
  'object_msg_new_detailed_info_param_status_type_int' => 'Status',
  'object_bind_auth_key_inner' => 'Bind auth key inner',
  'object_bind_auth_key_inner_param_nonce_type_long' => 'Nonce',
  'object_bind_auth_key_inner_param_temp_auth_key_id_type_long' => 'Temp auth key ID',
  'object_bind_auth_key_inner_param_perm_auth_key_id_type_long' => 'Perm auth key ID',
  'object_bind_auth_key_inner_param_temp_session_id_type_long' => 'Temp session ID',
  'object_bind_auth_key_inner_param_expires_at_type_int' => 'Expires at',
  'object_boolFalse' => 'Bool false',
  'object_boolTrue' => 'Bool true',
  'object_true' => 'True',
  'object_error' => 'Error',
  'object_error_param_code_type_int' => 'Code',
  'object_error_param_text_type_string' => 'Text',
  'object_null' => 'Null',
  'object_inputPeerEmpty' => 'Empty input peer',
  'object_inputPeerSelf' => 'Peer self',
  'object_inputPeerChat' => 'Peer chat',
  'object_inputPeerChat_param_chat_id_type_int' => 'Chat ID',
  'object_inputPeerUser' => 'Peer user',
  'object_inputPeerUser_param_user_id_type_int' => 'User ID',
  'object_inputPeerUser_param_access_hash_type_long' => 'Access hash',
  'object_inputPeerChannel' => 'Peer channel',
  'object_inputPeerChannel_param_channel_id_type_int' => 'Channel ID',
  'object_inputPeerChannel_param_access_hash_type_long' => 'Access hash',
  'object_inputUserEmpty' => 'Empty input user',
  'object_inputUserSelf' => 'User self',
  'object_inputUser' => 'User',
  'object_inputUser_param_user_id_type_int' => 'User ID',
  'object_inputUser_param_access_hash_type_long' => 'Access hash',
  'object_inputPhoneContact' => 'Phone contact',
  'object_inputPhoneContact_param_client_id_type_long' => 'Client ID',
  'object_inputPhoneContact_param_phone_type_string' => 'Phone',
  'object_inputPhoneContact_param_first_name_type_string' => 'First name',
  'object_inputPhoneContact_param_last_name_type_string' => 'Last name',
  'object_inputFile' => 'File',
  'object_inputFile_param_id_type_long' => 'ID',
  'object_inputFile_param_parts_type_int' => 'Parts',
  'object_inputFile_param_name_type_string' => 'Name',
  'object_inputFile_param_md5_checksum_type_string' => 'Md5 checksum',
  'object_inputFileBig' => 'File big',
  'object_inputFileBig_param_id_type_long' => 'ID',
  'object_inputFileBig_param_parts_type_int' => 'Parts',
  'object_inputFileBig_param_name_type_string' => 'Name',
  'object_inputMediaEmpty' => 'Empty input media',
  'object_inputMediaUploadedPhoto' => 'Media uploaded photo',
  'object_inputMediaUploadedPhoto_param_file_type_InputFile' => 'File',
  'object_inputMediaUploadedPhoto_param_stickers_type_Vector t' => 'Stickers',
  'object_inputMediaUploadedPhoto_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_inputMediaPhoto' => 'Media photo',
  'object_inputMediaPhoto_param_id_type_InputPhoto' => 'ID',
  'object_inputMediaPhoto_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_inputMediaGeoPoint' => 'Media geo point',
  'object_inputMediaGeoPoint_param_geo_point_type_InputGeoPoint' => 'Geo point',
  'object_inputMediaContact' => 'Media contact',
  'object_inputMediaContact_param_phone_number_type_string' => 'Phone number',
  'object_inputMediaContact_param_first_name_type_string' => 'First name',
  'object_inputMediaContact_param_last_name_type_string' => 'Last name',
  'object_inputMediaUploadedDocument' => 'Media uploaded document',
  'object_inputMediaUploadedDocument_param_nosound_video_type_true' => 'Nosound video?',
  'object_inputMediaUploadedDocument_param_file_type_InputFile' => 'File',
  'object_inputMediaUploadedDocument_param_thumb_type_InputFile' => 'Thumbnail',
  'object_inputMediaUploadedDocument_param_mime_type_type_string' => 'Mime type',
  'object_inputMediaUploadedDocument_param_attributes_type_Vector t' => 'Attributes',
  'object_inputMediaUploadedDocument_param_stickers_type_Vector t' => 'Stickers',
  'object_inputMediaUploadedDocument_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_inputMediaDocument' => 'Media document',
  'object_inputMediaDocument_param_id_type_InputDocument' => 'ID',
  'object_inputMediaDocument_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_inputMediaVenue' => 'Media venue',
  'object_inputMediaVenue_param_geo_point_type_InputGeoPoint' => 'Geo point',
  'object_inputMediaVenue_param_title_type_string' => 'Title',
  'object_inputMediaVenue_param_address_type_string' => 'Address',
  'object_inputMediaVenue_param_provider_type_string' => 'Provider',
  'object_inputMediaVenue_param_venue_id_type_string' => 'Venue ID',
  'object_inputMediaVenue_param_venue_type_type_string' => 'Venue type',
  'object_inputMediaGifExternal' => 'Media gif external',
  'object_inputMediaGifExternal_param_url_type_string' => 'URL',
  'object_inputMediaGifExternal_param_q_type_string' => 'Q',
  'object_inputMediaPhotoExternal' => 'Media photo external',
  'object_inputMediaPhotoExternal_param_url_type_string' => 'URL',
  'object_inputMediaPhotoExternal_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_inputMediaDocumentExternal' => 'Media document external',
  'object_inputMediaDocumentExternal_param_url_type_string' => 'URL',
  'object_inputMediaDocumentExternal_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_inputMediaGame' => 'Media game',
  'object_inputMediaGame_param_id_type_InputGame' => 'ID',
  'object_inputMediaInvoice' => 'Media invoice',
  'object_inputMediaInvoice_param_title_type_string' => 'Title',
  'object_inputMediaInvoice_param_description_type_string' => 'Description',
  'object_inputMediaInvoice_param_photo_type_InputWebDocument' => 'Photo',
  'object_inputMediaInvoice_param_invoice_type_Invoice' => 'Invoice',
  'object_inputMediaInvoice_param_payload_type_bytes' => 'Payload',
  'object_inputMediaInvoice_param_provider_type_string' => 'Provider',
  'object_inputMediaInvoice_param_provider_data_type_DataJSON' => 'Provider data',
  'object_inputMediaInvoice_param_start_param_type_string' => 'Start param',
  'object_inputMediaGeoLive' => 'Media geo live',
  'object_inputMediaGeoLive_param_geo_point_type_InputGeoPoint' => 'Geo point',
  'object_inputMediaGeoLive_param_period_type_int' => 'Period',
  'object_inputChatPhotoEmpty' => 'Empty input chat photo',
  'object_inputChatUploadedPhoto' => 'Chat uploaded photo',
  'object_inputChatUploadedPhoto_param_file_type_InputFile' => 'File',
  'object_inputChatPhoto' => 'Chat photo',
  'object_inputChatPhoto_param_id_type_InputPhoto' => 'ID',
  'object_inputGeoPointEmpty' => 'Empty input geo point',
  'object_inputGeoPoint' => 'Geo point',
  'object_inputGeoPoint_param_lat_type_double' => 'Lat',
  'object_inputGeoPoint_param_long_type_double' => 'Long',
  'object_inputPhotoEmpty' => 'Empty input photo',
  'object_inputPhoto' => 'Photo',
  'object_inputPhoto_param_id_type_long' => 'ID',
  'object_inputPhoto_param_access_hash_type_long' => 'Access hash',
  'object_inputFileLocation' => 'File location',
  'object_inputFileLocation_param_volume_id_type_long' => 'Volume ID',
  'object_inputFileLocation_param_local_id_type_int' => 'Local ID',
  'object_inputFileLocation_param_secret_type_long' => 'Secret',
  'object_inputEncryptedFileLocation' => 'Encrypted file location',
  'object_inputEncryptedFileLocation_param_id_type_long' => 'ID',
  'object_inputEncryptedFileLocation_param_access_hash_type_long' => 'Access hash',
  'object_inputDocumentFileLocation' => 'Document file location',
  'object_inputDocumentFileLocation_param_id_type_long' => 'ID',
  'object_inputDocumentFileLocation_param_access_hash_type_long' => 'Access hash',
  'object_inputDocumentFileLocation_param_version_type_int' => 'Version',
  'object_inputAppEvent' => 'App event',
  'object_inputAppEvent_param_time_type_double' => 'Time',
  'object_inputAppEvent_param_type_type_string' => 'Type',
  'object_inputAppEvent_param_peer_type_long' => 'Peer',
  'object_inputAppEvent_param_data_type_string' => 'Data',
  'object_peerUser' => 'Peer user',
  'object_peerUser_param_user_id_type_int' => 'User ID',
  'object_peerChat' => 'Peer chat',
  'object_peerChat_param_chat_id_type_int' => 'Chat ID',
  'object_peerChannel' => 'Peer channel',
  'object_peerChannel_param_channel_id_type_int' => 'Channel ID',
  'object_storage.fileUnknown' => 'File unknown',
  'object_storage.filePartial' => 'File partial',
  'object_storage.fileJpeg' => 'File jpeg',
  'object_storage.fileGif' => 'File gif',
  'object_storage.filePng' => 'File png',
  'object_storage.filePdf' => 'File pdf',
  'object_storage.fileMp3' => 'File mp3',
  'object_storage.fileMov' => 'File mov',
  'object_storage.fileMp4' => 'File mp4',
  'object_storage.fileWebp' => 'File webp',
  'object_fileLocationUnavailable' => 'File location unavailable',
  'object_fileLocationUnavailable_param_volume_id_type_long' => 'Volume ID',
  'object_fileLocationUnavailable_param_local_id_type_int' => 'Local ID',
  'object_fileLocationUnavailable_param_secret_type_long' => 'Secret',
  'object_fileLocation' => 'File location',
  'object_fileLocation_param_dc_id_type_int' => 'DC ID',
  'object_fileLocation_param_volume_id_type_long' => 'Volume ID',
  'object_fileLocation_param_local_id_type_int' => 'Local ID',
  'object_fileLocation_param_secret_type_long' => 'Secret',
  'object_userEmpty' => 'Empty user',
  'object_userEmpty_param_id_type_int' => 'ID',
  'object_user' => 'User',
  'object_user_param_self_type_true' => 'Self?',
  'object_user_param_contact_type_true' => 'Contact?',
  'object_user_param_mutual_contact_type_true' => 'Mutual contact?',
  'object_user_param_deleted_type_true' => 'Deleted?',
  'object_user_param_bot_type_true' => 'Bot?',
  'object_user_param_bot_chat_history_type_true' => 'Bot chat history?',
  'object_user_param_bot_nochats_type_true' => 'Bot nochats?',
  'object_user_param_verified_type_true' => 'Verified?',
  'object_user_param_restricted_type_true' => 'Restricted?',
  'object_user_param_min_type_true' => 'Min?',
  'object_user_param_bot_inline_geo_type_true' => 'Bot inline geo?',
  'object_user_param_id_type_int' => 'ID',
  'object_user_param_access_hash_type_long' => 'Access hash',
  'object_user_param_first_name_type_string' => 'First name',
  'object_user_param_last_name_type_string' => 'Last name',
  'object_user_param_username_type_string' => 'Username',
  'object_user_param_phone_type_string' => 'Phone',
  'object_user_param_photo_type_UserProfilePhoto' => 'Photo',
  'object_user_param_status_type_UserStatus' => 'Status',
  'object_user_param_bot_info_version_type_int' => 'Bot info version',
  'object_user_param_restriction_reason_type_string' => 'Restriction reason',
  'object_user_param_bot_inline_placeholder_type_string' => 'Bot inline placeholder',
  'object_user_param_lang_code_type_string' => 'Lang code',
  'object_userProfilePhotoEmpty' => 'Empty user profile photo',
  'object_userProfilePhoto' => 'User profile photo',
  'object_userProfilePhoto_param_photo_id_type_long' => 'Photo ID',
  'object_userProfilePhoto_param_photo_small_type_FileLocation' => 'Photo small',
  'object_userProfilePhoto_param_photo_big_type_FileLocation' => 'Photo big',
  'object_chatEmpty' => 'Empty chat',
  'object_chatEmpty_param_id_type_int' => 'ID',
  'object_chat' => 'Chat',
  'object_chat_param_creator_type_true' => 'Creator?',
  'object_chat_param_kicked_type_true' => 'Kicked?',
  'object_chat_param_left_type_true' => 'Left?',
  'object_chat_param_admins_enabled_type_true' => 'Admins enabled?',
  'object_chat_param_admin_type_true' => 'Admin?',
  'object_chat_param_deactivated_type_true' => 'Deactivated?',
  'object_chat_param_id_type_int' => 'ID',
  'object_chat_param_title_type_string' => 'Title',
  'object_chat_param_photo_type_ChatPhoto' => 'Photo',
  'object_chat_param_participants_count_type_int' => 'Participants count',
  'object_chat_param_date_type_int' => 'Date',
  'object_chat_param_version_type_int' => 'Version',
  'object_chat_param_migrated_to_type_InputChannel' => 'Migrated to',
  'object_chatForbidden' => 'Chat forbidden',
  'object_chatForbidden_param_id_type_int' => 'ID',
  'object_chatForbidden_param_title_type_string' => 'Title',
  'object_channel' => 'Channel',
  'object_channel_param_creator_type_true' => 'Creator?',
  'object_channel_param_left_type_true' => 'Left?',
  'object_channel_param_editor_type_true' => 'Editor?',
  'object_channel_param_broadcast_type_true' => 'Broadcast?',
  'object_channel_param_verified_type_true' => 'Verified?',
  'object_channel_param_megagroup_type_true' => 'Megagroup?',
  'object_channel_param_restricted_type_true' => 'Restricted?',
  'object_channel_param_democracy_type_true' => 'Democracy?',
  'object_channel_param_signatures_type_true' => 'Signatures?',
  'object_channel_param_min_type_true' => 'Min?',
  'object_channel_param_id_type_int' => 'ID',
  'object_channel_param_access_hash_type_long' => 'Access hash',
  'object_channel_param_title_type_string' => 'Title',
  'object_channel_param_username_type_string' => 'Username',
  'object_channel_param_photo_type_ChatPhoto' => 'Photo',
  'object_channel_param_date_type_int' => 'Date',
  'object_channel_param_version_type_int' => 'Version',
  'object_channel_param_restriction_reason_type_string' => 'Restriction reason',
  'object_channel_param_admin_rights_type_ChannelAdminRights' => 'Admin rights',
  'object_channel_param_banned_rights_type_ChannelBannedRights' => 'Banned rights',
  'object_channel_param_participants_count_type_int' => 'Participants count',
  'object_channelForbidden' => 'Forbidden channel',
  'object_channelForbidden_param_broadcast_type_true' => 'Broadcast?',
  'object_channelForbidden_param_megagroup_type_true' => 'Megagroup?',
  'object_channelForbidden_param_id_type_int' => 'ID',
  'object_channelForbidden_param_access_hash_type_long' => 'Access hash',
  'object_channelForbidden_param_title_type_string' => 'Title',
  'object_channelForbidden_param_until_date_type_int' => 'Until date',
  'object_chatFull' => 'Chat full',
  'object_chatFull_param_id_type_int' => 'ID',
  'object_chatFull_param_participants_type_ChatParticipants' => 'Participants',
  'object_chatFull_param_chat_photo_type_Photo' => 'Chat photo',
  'object_chatFull_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
  'object_chatFull_param_exported_invite_type_ExportedChatInvite' => 'Exported invite',
  'object_chatFull_param_bot_info_type_Vector t' => 'Bot info',
  'object_channelFull' => 'Full channel',
  'object_channelFull_param_can_view_participants_type_true' => 'Can view participants?',
  'object_channelFull_param_can_set_username_type_true' => 'Can set username?',
  'object_channelFull_param_can_set_stickers_type_true' => 'Can set group stickerset?',
  'object_channelFull_param_hidden_prehistory_type_true' => 'Hidden prehistory?',
  'object_channelFull_param_id_type_int' => 'ID',
  'object_channelFull_param_about_type_string' => 'About',
  'object_channelFull_param_participants_count_type_int' => 'Participants count',
  'object_channelFull_param_admins_count_type_int' => 'Admins count',
  'object_channelFull_param_kicked_count_type_int' => 'Kicked count',
  'object_channelFull_param_banned_count_type_int' => 'Banned count',
  'object_channelFull_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
  'object_channelFull_param_read_outbox_max_id_type_int' => 'Read outbox max ID',
  'object_channelFull_param_unread_count_type_int' => 'Unread count',
  'object_channelFull_param_chat_photo_type_Photo' => 'Chat photo',
  'object_channelFull_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
  'object_channelFull_param_exported_invite_type_ExportedChatInvite' => 'Exported invite',
  'object_channelFull_param_bot_info_type_Vector t' => 'Bot info',
  'object_channelFull_param_migrated_from_chat_id_type_int' => 'Migrated from chat ID',
  'object_channelFull_param_migrated_from_max_id_type_int' => 'Migrated from max ID',
  'object_channelFull_param_pinned_msg_id_type_int' => 'Pinned msg ID',
  'object_channelFull_param_stickerset_type_StickerSet' => 'Stickerset',
  'object_channelFull_param_available_min_id_type_int' => 'Available min ID',
  'object_chatParticipant' => 'Chat participant',
  'object_chatParticipant_param_user_id_type_int' => 'User ID',
  'object_chatParticipant_param_inviter_id_type_int' => 'Inviter ID',
  'object_chatParticipant_param_date_type_int' => 'Date',
  'object_chatParticipantCreator' => 'Chat participant creator',
  'object_chatParticipantCreator_param_user_id_type_int' => 'User ID',
  'object_chatParticipantAdmin' => 'Chat participant admin',
  'object_chatParticipantAdmin_param_user_id_type_int' => 'User ID',
  'object_chatParticipantAdmin_param_inviter_id_type_int' => 'Inviter ID',
  'object_chatParticipantAdmin_param_date_type_int' => 'Date',
  'object_chatParticipantsForbidden' => 'Chat participants forbidden',
  'object_chatParticipantsForbidden_param_chat_id_type_int' => 'Chat ID',
  'object_chatParticipantsForbidden_param_self_participant_type_ChatParticipant' => 'Self participant',
  'object_chatParticipants' => 'Chat participants',
  'object_chatParticipants_param_chat_id_type_int' => 'Chat ID',
  'object_chatParticipants_param_participants_type_Vector t' => 'Participants',
  'object_chatParticipants_param_version_type_int' => 'Version',
  'object_chatPhotoEmpty' => 'Empty chat photo',
  'object_chatPhoto' => 'Chat photo',
  'object_chatPhoto_param_photo_small_type_FileLocation' => 'Photo small',
  'object_chatPhoto_param_photo_big_type_FileLocation' => 'Photo big',
  'object_messageEmpty' => 'Empty message',
  'object_messageEmpty_param_id_type_int' => 'ID',
  'object_message' => 'Message',
  'object_message_param_out_type_true' => 'Out?',
  'object_message_param_mentioned_type_true' => 'Mentioned?',
  'object_message_param_media_unread_type_true' => 'Media unread?',
  'object_message_param_silent_type_true' => 'Silent?',
  'object_message_param_post_type_true' => 'Post?',
  'object_message_param_id_type_int' => 'ID',
  'object_message_param_from_id_type_int' => 'From ID',
  'object_message_param_to_id_type_Peer' => 'To ID',
  'object_message_param_fwd_from_type_MessageFwdHeader' => 'Forwarded from',
  'object_message_param_via_bot_id_type_int' => 'Via bot ID',
  'object_message_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
  'object_message_param_date_type_int' => 'Date',
  'object_message_param_message_type_string' => 'Message',
  'object_message_param_media_type_MessageMedia' => 'Media',
  'object_message_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_message_param_entities_type_Vector t' => 'Entities',
  'object_message_param_views_type_int' => 'Views',
  'object_message_param_edit_date_type_int' => 'Edit date',
  'object_message_param_post_author_type_string' => 'Post author',
  'object_message_param_grouped_id_type_long' => 'Grouped ID',
  'object_messageService' => 'Message service',
  'object_messageService_param_out_type_true' => 'Out?',
  'object_messageService_param_mentioned_type_true' => 'Mentioned?',
  'object_messageService_param_media_unread_type_true' => 'Media unread?',
  'object_messageService_param_silent_type_true' => 'Silent?',
  'object_messageService_param_post_type_true' => 'Post?',
  'object_messageService_param_id_type_int' => 'ID',
  'object_messageService_param_from_id_type_int' => 'From ID',
  'object_messageService_param_to_id_type_Peer' => 'To ID',
  'object_messageService_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
  'object_messageService_param_date_type_int' => 'Date',
  'object_messageService_param_action_type_MessageAction' => 'Action',
  'object_messageMediaEmpty' => 'Empty message media',
  'object_messageMediaPhoto' => 'Message media photo',
  'object_messageMediaPhoto_param_photo_type_Photo' => 'Photo',
  'object_messageMediaPhoto_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_messageMediaGeo' => 'Message media geo',
  'object_messageMediaGeo_param_geo_type_GeoPoint' => 'Geo',
  'object_messageMediaContact' => 'Message media contact',
  'object_messageMediaContact_param_phone_number_type_string' => 'Phone number',
  'object_messageMediaContact_param_first_name_type_string' => 'First name',
  'object_messageMediaContact_param_last_name_type_string' => 'Last name',
  'object_messageMediaContact_param_user_id_type_int' => 'User ID',
  'object_messageMediaUnsupported' => 'Message media unsupported',
  'object_messageMediaDocument' => 'Message media document',
  'object_messageMediaDocument_param_document_type_Document' => 'Document',
  'object_messageMediaDocument_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_messageMediaWebPage' => 'Message media web page',
  'object_messageMediaWebPage_param_webpage_type_WebPage' => 'Webpage',
  'object_messageMediaVenue' => 'Message media venue',
  'object_messageMediaVenue_param_geo_type_GeoPoint' => 'Geo',
  'object_messageMediaVenue_param_title_type_string' => 'Title',
  'object_messageMediaVenue_param_address_type_string' => 'Address',
  'object_messageMediaVenue_param_provider_type_string' => 'Provider',
  'object_messageMediaVenue_param_venue_id_type_string' => 'Venue ID',
  'object_messageMediaVenue_param_venue_type_type_string' => 'Venue type',
  'object_messageMediaGame' => 'Message media game',
  'object_messageMediaGame_param_game_type_Game' => 'Game',
  'object_messageMediaInvoice' => 'Message media invoice',
  'object_messageMediaInvoice_param_shipping_address_requested_type_true' => 'Shipping address requested?',
  'object_messageMediaInvoice_param_test_type_true' => 'Test?',
  'object_messageMediaInvoice_param_title_type_string' => 'Title',
  'object_messageMediaInvoice_param_description_type_string' => 'Description',
  'object_messageMediaInvoice_param_photo_type_WebDocument' => 'Photo',
  'object_messageMediaInvoice_param_receipt_msg_id_type_int' => 'Receipt msg ID',
  'object_messageMediaInvoice_param_currency_type_string' => 'Currency',
  'object_messageMediaInvoice_param_total_amount_type_long' => 'Total amount',
  'object_messageMediaInvoice_param_start_param_type_string' => 'Start param',
  'object_messageMediaGeoLive' => 'Message media geo live',
  'object_messageMediaGeoLive_param_geo_type_GeoPoint' => 'Geo',
  'object_messageMediaGeoLive_param_period_type_int' => 'Period',
  'object_messageActionEmpty' => 'Empty message action',
  'object_messageActionChatCreate' => 'Message action chat create',
  'object_messageActionChatCreate_param_title_type_string' => 'Title',
  'object_messageActionChatCreate_param_users_type_Vector t' => 'Users',
  'object_messageActionChatEditTitle' => 'Message action chat edit title',
  'object_messageActionChatEditTitle_param_title_type_string' => 'Title',
  'object_messageActionChatEditPhoto' => 'Message action chat edit photo',
  'object_messageActionChatEditPhoto_param_photo_type_Photo' => 'Photo',
  'object_messageActionChatDeletePhoto' => 'Message action chat delete photo',
  'object_messageActionChatAddUser' => 'Message action chat add user',
  'object_messageActionChatAddUser_param_users_type_Vector t' => 'Users',
  'object_messageActionChatDeleteUser' => 'Message action chat delete user',
  'object_messageActionChatDeleteUser_param_user_id_type_int' => 'User ID',
  'object_messageActionChatJoinedByLink' => 'Message action chat joined by link',
  'object_messageActionChatJoinedByLink_param_inviter_id_type_int' => 'Inviter ID',
  'object_messageActionChannelCreate' => 'Message action channel create',
  'object_messageActionChannelCreate_param_title_type_string' => 'Title',
  'object_messageActionChatMigrateTo' => 'Message action chat migrate to',
  'object_messageActionChatMigrateTo_param_channel_id_type_int' => 'Channel ID',
  'object_messageActionChannelMigrateFrom' => 'Message action channel migrate from',
  'object_messageActionChannelMigrateFrom_param_title_type_string' => 'Title',
  'object_messageActionChannelMigrateFrom_param_chat_id_type_int' => 'Chat ID',
  'object_messageActionPinMessage' => 'Message action pin message',
  'object_messageActionHistoryClear' => 'Message action history clear',
  'object_messageActionGameScore' => 'Message action game score',
  'object_messageActionGameScore_param_game_id_type_long' => 'Game ID',
  'object_messageActionGameScore_param_score_type_int' => 'Score',
  'object_messageActionPaymentSentMe' => 'Message action payment sent me',
  'object_messageActionPaymentSentMe_param_currency_type_string' => 'Currency',
  'object_messageActionPaymentSentMe_param_total_amount_type_long' => 'Total amount',
  'object_messageActionPaymentSentMe_param_payload_type_bytes' => 'Payload',
  'object_messageActionPaymentSentMe_param_info_type_PaymentRequestedInfo' => 'Info',
  'object_messageActionPaymentSentMe_param_shipping_option_id_type_string' => 'Shipping option ID',
  'object_messageActionPaymentSentMe_param_charge_type_PaymentCharge' => 'Charge',
  'object_messageActionPaymentSent' => 'Message action payment sent',
  'object_messageActionPaymentSent_param_currency_type_string' => 'Currency',
  'object_messageActionPaymentSent_param_total_amount_type_long' => 'Total amount',
  'object_messageActionPhoneCall' => 'Message action phone call',
  'object_messageActionPhoneCall_param_call_id_type_long' => 'Call ID',
  'object_messageActionPhoneCall_param_reason_type_PhoneCallDiscardReason' => 'Reason',
  'object_messageActionPhoneCall_param_duration_type_int' => 'Duration',
  'object_messageActionScreenshotTaken' => 'Message action screenshot taken',
  'object_messageActionCustomAction' => 'Message action custom action',
  'object_messageActionCustomAction_param_message_type_string' => 'Message',
  'object_dialog' => 'Dialog',
  'object_dialog_param_pinned_type_true' => 'Pinned?',
  'object_dialog_param_peer_type_Peer' => 'Peer',
  'object_dialog_param_top_message_type_int' => 'Top message',
  'object_dialog_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
  'object_dialog_param_read_outbox_max_id_type_int' => 'Read outbox max ID',
  'object_dialog_param_unread_count_type_int' => 'Unread count',
  'object_dialog_param_unread_mentions_count_type_int' => 'Unread mentions count',
  'object_dialog_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
  'object_dialog_param_pts_type_int' => 'Pts',
  'object_dialog_param_draft_type_DraftMessage' => 'Draft',
  'object_photoEmpty' => 'Empty photo',
  'object_photoEmpty_param_id_type_long' => 'ID',
  'object_photo' => 'Photo',
  'object_photo_param_has_stickers_type_true' => 'Has stickers?',
  'object_photo_param_id_type_long' => 'ID',
  'object_photo_param_access_hash_type_long' => 'Access hash',
  'object_photo_param_date_type_int' => 'Date',
  'object_photo_param_sizes_type_Vector t' => 'Sizes',
  'object_photoSizeEmpty' => 'Empty photo size',
  'object_photoSizeEmpty_param_type_type_string' => 'Type',
  'object_photoSize' => 'Photo size',
  'object_photoSize_param_type_type_string' => 'Type',
  'object_photoSize_param_location_type_FileLocation' => 'Location',
  'object_photoSize_param_w_type_int' => 'Width',
  'object_photoSize_param_h_type_int' => 'Height',
  'object_photoSize_param_size_type_int' => 'Size',
  'object_photoCachedSize' => 'Photo cached size',
  'object_photoCachedSize_param_type_type_string' => 'Type',
  'object_photoCachedSize_param_location_type_FileLocation' => 'Location',
  'object_photoCachedSize_param_w_type_int' => 'Width',
  'object_photoCachedSize_param_h_type_int' => 'Height',
  'object_photoCachedSize_param_bytes_type_bytes' => 'Bytes',
  'object_geoPointEmpty' => 'Empty geo point',
  'object_geoPoint' => 'Geo point',
  'object_geoPoint_param_long_type_double' => 'Long',
  'object_geoPoint_param_lat_type_double' => 'Lat',
  'object_auth.checkedPhone' => 'Checked phone',
  'object_auth.checkedPhone_param_phone_registered_type_Bool' => 'Phone registered?',
  'object_auth.sentCode' => 'Sent code',
  'object_auth.sentCode_param_phone_registered_type_true' => 'Phone registered?',
  'object_auth.sentCode_param_type_type_auth.SentCodeType' => 'Type',
  'object_auth.sentCode_param_phone_code_hash_type_string' => 'Phone code hash',
  'object_auth.sentCode_param_next_type_type_auth.CodeType' => 'Next type',
  'object_auth.sentCode_param_timeout_type_int' => 'Timeout',
  'object_auth.authorization' => 'Authorization',
  'object_auth.authorization_param_tmp_sessions_type_int' => 'Temporary sessions',
  'object_auth.authorization_param_user_type_User' => 'User',
  'object_auth.exportedAuthorization' => 'Exported authorization',
  'object_auth.exportedAuthorization_param_id_type_int' => 'ID',
  'object_auth.exportedAuthorization_param_bytes_type_bytes' => 'Bytes',
  'object_inputNotifyPeer' => 'Notify peer',
  'object_inputNotifyPeer_param_peer_type_InputPeer' => 'Peer',
  'object_inputNotifyUsers' => 'Notify users',
  'object_inputNotifyChats' => 'Notify chats',
  'object_inputNotifyAll' => 'Notify all',
  'object_inputPeerNotifyEventsEmpty' => 'Empty input peer notify events',
  'object_inputPeerNotifyEventsAll' => 'Peer notify events all',
  'object_inputPeerNotifySettings' => 'Peer notify settings',
  'object_inputPeerNotifySettings_param_show_previews_type_true' => 'Show previews?',
  'object_inputPeerNotifySettings_param_silent_type_true' => 'Silent?',
  'object_inputPeerNotifySettings_param_mute_until_type_int' => 'Mute until',
  'object_inputPeerNotifySettings_param_sound_type_string' => 'Sound',
  'object_peerNotifyEventsEmpty' => 'Empty peer notify events',
  'object_peerNotifyEventsAll' => 'Peer notify events all',
  'object_peerNotifySettingsEmpty' => 'Empty peer notify settings',
  'object_peerNotifySettings' => 'Peer notify settings',
  'object_peerNotifySettings_param_show_previews_type_true' => 'Show previews?',
  'object_peerNotifySettings_param_silent_type_true' => 'Silent?',
  'object_peerNotifySettings_param_mute_until_type_int' => 'Mute until',
  'object_peerNotifySettings_param_sound_type_string' => 'Sound',
  'object_peerSettings' => 'Peer settings',
  'object_peerSettings_param_report_spam_type_true' => 'Report spam?',
  'object_wallPaper' => 'Wall paper',
  'object_wallPaper_param_id_type_int' => 'ID',
  'object_wallPaper_param_title_type_string' => 'Title',
  'object_wallPaper_param_sizes_type_Vector t' => 'Sizes',
  'object_wallPaper_param_color_type_int' => 'Color',
  'object_wallPaperSolid' => 'Wall paper solid',
  'object_wallPaperSolid_param_id_type_int' => 'ID',
  'object_wallPaperSolid_param_title_type_string' => 'Title',
  'object_wallPaperSolid_param_bg_color_type_int' => 'Bg color',
  'object_wallPaperSolid_param_color_type_int' => 'Color',
  'object_inputReportReasonSpam' => 'Report reason spam',
  'object_inputReportReasonViolence' => 'Report reason violence',
  'object_inputReportReasonPornography' => 'Report reason pornography',
  'object_inputReportReasonOther' => 'Report reason other',
  'object_inputReportReasonOther_param_text_type_string' => 'Text',
  'object_userFull' => 'User full',
  'object_userFull_param_blocked_type_true' => 'Blocked?',
  'object_userFull_param_phone_calls_available_type_true' => 'Phone calls available?',
  'object_userFull_param_phone_calls_private_type_true' => 'Phone calls private?',
  'object_userFull_param_user_type_User' => 'User',
  'object_userFull_param_about_type_string' => 'About',
  'object_userFull_param_link_type_contacts.Link' => 'Link',
  'object_userFull_param_profile_photo_type_Photo' => 'Profile photo',
  'object_userFull_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
  'object_userFull_param_bot_info_type_BotInfo' => 'Bot info',
  'object_userFull_param_common_chats_count_type_int' => 'Common chats count',
  'object_contact' => 'Contact',
  'object_contact_param_user_id_type_int' => 'User ID',
  'object_contact_param_mutual_type_Bool' => 'Mutual?',
  'object_importedContact' => 'Imported contact',
  'object_importedContact_param_user_id_type_int' => 'User ID',
  'object_importedContact_param_client_id_type_long' => 'Client ID',
  'object_contactBlocked' => 'Contact blocked',
  'object_contactBlocked_param_user_id_type_int' => 'User ID',
  'object_contactBlocked_param_date_type_int' => 'Date',
  'object_contactStatus' => 'Contact status',
  'object_contactStatus_param_user_id_type_int' => 'User ID',
  'object_contactStatus_param_status_type_UserStatus' => 'Status',
  'object_contacts.link' => 'Link',
  'object_contacts.link_param_my_link_type_ContactLink' => 'My link',
  'object_contacts.link_param_foreign_link_type_ContactLink' => 'Foreign link',
  'object_contacts.link_param_user_type_User' => 'User',
  'object_contacts.contactsNotModified' => 'Contacts not modified',
  'object_contacts.contacts' => 'Contacts',
  'object_contacts.contacts_param_contacts_type_Vector t' => 'Contacts',
  'object_contacts.contacts_param_saved_count_type_int' => 'Saved count',
  'object_contacts.contacts_param_users_type_Vector t' => 'Users',
  'object_contacts.importedContacts' => 'Imported contacts',
  'object_contacts.importedContacts_param_imported_type_Vector t' => 'Imported',
  'object_contacts.importedContacts_param_popular_invites_type_Vector t' => 'Popular invites',
  'object_contacts.importedContacts_param_retry_contacts_type_Vector t' => 'Retry importing contacts whose client IDs appear here',
  'object_contacts.importedContacts_param_users_type_Vector t' => 'Users',
  'object_contacts.blocked' => 'Blocked',
  'object_contacts.blocked_param_blocked_type_Vector t' => 'Blocked',
  'object_contacts.blocked_param_users_type_Vector t' => 'Users',
  'object_contacts.blockedSlice' => 'Blocked slice',
  'object_contacts.blockedSlice_param_count_type_int' => 'Count',
  'object_contacts.blockedSlice_param_blocked_type_Vector t' => 'Blocked',
  'object_contacts.blockedSlice_param_users_type_Vector t' => 'Users',
  'object_messages.dialogs' => 'Dialogs',
  'object_messages.dialogs_param_dialogs_type_Vector t' => 'Dialogs',
  'object_messages.dialogs_param_messages_type_Vector t' => 'Messages',
  'object_messages.dialogs_param_chats_type_Vector t' => 'Chats',
  'object_messages.dialogs_param_users_type_Vector t' => 'Users',
  'object_messages.dialogsSlice' => 'Dialogs slice',
  'object_messages.dialogsSlice_param_count_type_int' => 'Count',
  'object_messages.dialogsSlice_param_dialogs_type_Vector t' => 'Dialogs',
  'object_messages.dialogsSlice_param_messages_type_Vector t' => 'Messages',
  'object_messages.dialogsSlice_param_chats_type_Vector t' => 'Chats',
  'object_messages.dialogsSlice_param_users_type_Vector t' => 'Users',
  'object_messages.messages' => 'Messages',
  'object_messages.messages_param_messages_type_Vector t' => 'Messages',
  'object_messages.messages_param_chats_type_Vector t' => 'Chats',
  'object_messages.messages_param_users_type_Vector t' => 'Users',
  'object_messages.messagesSlice' => 'Messages slice',
  'object_messages.messagesSlice_param_count_type_int' => 'Count',
  'object_messages.messagesSlice_param_messages_type_Vector t' => 'Messages',
  'object_messages.messagesSlice_param_chats_type_Vector t' => 'Chats',
  'object_messages.messagesSlice_param_users_type_Vector t' => 'Users',
  'object_messages.channelMessages' => 'Channel messages',
  'object_messages.channelMessages_param_pts_type_int' => 'Pts',
  'object_messages.channelMessages_param_count_type_int' => 'Count',
  'object_messages.channelMessages_param_messages_type_Vector t' => 'Messages',
  'object_messages.channelMessages_param_chats_type_Vector t' => 'Chats',
  'object_messages.channelMessages_param_users_type_Vector t' => 'Users',
  'object_messages.messagesNotModified' => 'Messages not modified',
  'object_messages.messagesNotModified_param_count_type_int' => 'Count',
  'object_messages.chats' => 'Chats',
  'object_messages.chats_param_chats_type_Vector t' => 'Chats',
  'object_messages.chatsSlice' => 'Chats slice',
  'object_messages.chatsSlice_param_count_type_int' => 'Count',
  'object_messages.chatsSlice_param_chats_type_Vector t' => 'Chats',
  'object_messages.chatFull' => 'Chat full',
  'object_messages.chatFull_param_full_chat_type_ChatFull' => 'Full chat',
  'object_messages.chatFull_param_chats_type_Vector t' => 'Chats',
  'object_messages.chatFull_param_users_type_Vector t' => 'Users',
  'object_messages.affectedHistory' => 'Affected history',
  'object_messages.affectedHistory_param_pts_type_int' => 'Pts',
  'object_messages.affectedHistory_param_pts_count_type_int' => 'Pts count',
  'object_messages.affectedHistory_param_offset_type_int' => 'Offset',
  'object_inputMessagesFilterEmpty' => 'Empty input messages filter',
  'object_inputMessagesFilterPhotos' => 'Messages filter photos',
  'object_inputMessagesFilterVideo' => 'Messages filter video',
  'object_inputMessagesFilterPhotoVideo' => 'Messages filter photo video',
  'object_inputMessagesFilterDocument' => 'Messages filter document',
  'object_inputMessagesFilterUrl' => 'Messages filter URL',
  'object_inputMessagesFilterGif' => 'Messages filter gif',
  'object_inputMessagesFilterVoice' => 'Messages filter voice',
  'object_inputMessagesFilterMusic' => 'Messages filter music',
  'object_inputMessagesFilterChatPhotos' => 'Messages filter chat photos',
  'object_inputMessagesFilterPhoneCalls' => 'Messages filter phone calls',
  'object_inputMessagesFilterPhoneCalls_param_missed_type_true' => 'Missed?',
  'object_inputMessagesFilterRoundVoice' => 'Messages filter round voice',
  'object_inputMessagesFilterRoundVideo' => 'Messages filter round video',
  'object_inputMessagesFilterMyMentions' => 'Messages filter my mentions',
  'object_inputMessagesFilterGeo' => 'Messages filter geo',
  'object_inputMessagesFilterContacts' => 'Messages filter contacts',
  'object_updateNewMessage' => 'Update new message',
  'object_updateNewMessage_param_message_type_Message' => 'Message',
  'object_updateNewMessage_param_pts_type_int' => 'Pts',
  'object_updateNewMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateMessageID' => 'Update message ID',
  'object_updateMessageID_param_id_type_int' => 'ID',
  'object_updateDeleteMessages' => 'Update delete messages',
  'object_updateDeleteMessages_param_messages_type_Vector t' => 'Messages',
  'object_updateDeleteMessages_param_pts_type_int' => 'Pts',
  'object_updateDeleteMessages_param_pts_count_type_int' => 'Pts count',
  'object_updateUserTyping' => 'Update user typing',
  'object_updateUserTyping_param_user_id_type_int' => 'User ID',
  'object_updateUserTyping_param_action_type_SendMessageAction' => 'Action',
  'object_updateChatUserTyping' => 'Update chat user typing',
  'object_updateChatUserTyping_param_chat_id_type_int' => 'Chat ID',
  'object_updateChatUserTyping_param_user_id_type_int' => 'User ID',
  'object_updateChatUserTyping_param_action_type_SendMessageAction' => 'Action',
  'object_updateChatParticipants' => 'Update chat participants',
  'object_updateChatParticipants_param_participants_type_ChatParticipants' => 'Participants',
  'object_updateUserName' => 'Update user name',
  'object_updateUserName_param_user_id_type_int' => 'User ID',
  'object_updateUserName_param_first_name_type_string' => 'First name',
  'object_updateUserName_param_last_name_type_string' => 'Last name',
  'object_updateUserName_param_username_type_string' => 'Username',
  'object_updateUserPhoto' => 'Update user photo',
  'object_updateUserPhoto_param_user_id_type_int' => 'User ID',
  'object_updateUserPhoto_param_date_type_int' => 'Date',
  'object_updateUserPhoto_param_photo_type_UserProfilePhoto' => 'Photo',
  'object_updateUserPhoto_param_previous_type_Bool' => 'Previous?',
  'object_updateContactRegistered' => 'Update contact registered',
  'object_updateContactRegistered_param_user_id_type_int' => 'User ID',
  'object_updateContactRegistered_param_date_type_int' => 'Date',
  'object_updateContactLink' => 'Update contact link',
  'object_updateContactLink_param_user_id_type_int' => 'User ID',
  'object_updateContactLink_param_my_link_type_ContactLink' => 'My link',
  'object_updateContactLink_param_foreign_link_type_ContactLink' => 'Foreign link',
  'object_updateNewEncryptedMessage' => 'Update new encrypted message',
  'object_updateNewEncryptedMessage_param_message_type_EncryptedMessage' => 'Message',
  'object_updateNewEncryptedMessage_param_qts_type_int' => 'Qts',
  'object_updateEncryptedChatTyping' => 'Update encrypted chat typing',
  'object_updateEncryptedChatTyping_param_chat_id_type_int' => 'Chat ID',
  'object_updateEncryption' => 'Update encryption',
  'object_updateEncryption_param_chat_type_EncryptedChat' => 'Chat',
  'object_updateEncryption_param_date_type_int' => 'Date',
  'object_updateEncryptedMessagesRead' => 'Update encrypted messages read',
  'object_updateEncryptedMessagesRead_param_chat_id_type_int' => 'Chat ID',
  'object_updateEncryptedMessagesRead_param_max_date_type_int' => 'Max date',
  'object_updateEncryptedMessagesRead_param_date_type_int' => 'Date',
  'object_updateChatParticipantAdd' => 'Update chat participant add',
  'object_updateChatParticipantAdd_param_chat_id_type_int' => 'Chat ID',
  'object_updateChatParticipantAdd_param_user_id_type_int' => 'User ID',
  'object_updateChatParticipantAdd_param_inviter_id_type_int' => 'Inviter ID',
  'object_updateChatParticipantAdd_param_date_type_int' => 'Date',
  'object_updateChatParticipantAdd_param_version_type_int' => 'Version',
  'object_updateChatParticipantDelete' => 'Update chat participant delete',
  'object_updateChatParticipantDelete_param_chat_id_type_int' => 'Chat ID',
  'object_updateChatParticipantDelete_param_user_id_type_int' => 'User ID',
  'object_updateChatParticipantDelete_param_version_type_int' => 'Version',
  'object_updateDcOptions' => 'Update DC options',
  'object_updateDcOptions_param_dc_options_type_Vector t' => 'DC options',
  'object_updateUserBlocked' => 'Update user blocked',
  'object_updateUserBlocked_param_user_id_type_int' => 'User ID',
  'object_updateUserBlocked_param_blocked_type_Bool' => 'Blocked?',
  'object_updateNotifySettings' => 'Update notify settings',
  'object_updateNotifySettings_param_peer_type_NotifyPeer' => 'Peer',
  'object_updateNotifySettings_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
  'object_updateServiceNotification' => 'Update service notification',
  'object_updateServiceNotification_param_popup_type_true' => 'Popup?',
  'object_updateServiceNotification_param_inbox_date_type_int' => 'Inbox date',
  'object_updateServiceNotification_param_type_type_string' => 'Type',
  'object_updateServiceNotification_param_message_type_string' => 'Message',
  'object_updateServiceNotification_param_media_type_MessageMedia' => 'Media',
  'object_updateServiceNotification_param_entities_type_Vector t' => 'Entities',
  'object_updatePrivacy' => 'Update privacy',
  'object_updatePrivacy_param_key_type_PrivacyKey' => 'Key',
  'object_updatePrivacy_param_rules_type_Vector t' => 'Rules',
  'object_updateUserPhone' => 'Update user phone',
  'object_updateUserPhone_param_user_id_type_int' => 'User ID',
  'object_updateUserPhone_param_phone_type_string' => 'Phone',
  'object_updateReadHistoryInbox' => 'Update read history inbox',
  'object_updateReadHistoryInbox_param_peer_type_Peer' => 'Peer',
  'object_updateReadHistoryInbox_param_max_id_type_int' => 'Max ID',
  'object_updateReadHistoryInbox_param_pts_type_int' => 'Pts',
  'object_updateReadHistoryInbox_param_pts_count_type_int' => 'Pts count',
  'object_updateReadHistoryOutbox' => 'Update read history outbox',
  'object_updateReadHistoryOutbox_param_peer_type_Peer' => 'Peer',
  'object_updateReadHistoryOutbox_param_max_id_type_int' => 'Max ID',
  'object_updateReadHistoryOutbox_param_pts_type_int' => 'Pts',
  'object_updateReadHistoryOutbox_param_pts_count_type_int' => 'Pts count',
  'object_updateWebPage' => 'Update web page',
  'object_updateWebPage_param_webpage_type_WebPage' => 'Webpage',
  'object_updateWebPage_param_pts_type_int' => 'Pts',
  'object_updateWebPage_param_pts_count_type_int' => 'Pts count',
  'object_updateReadMessagesContents' => 'Update read messages contents',
  'object_updateReadMessagesContents_param_messages_type_Vector t' => 'Messages',
  'object_updateReadMessagesContents_param_pts_type_int' => 'Pts',
  'object_updateReadMessagesContents_param_pts_count_type_int' => 'Pts count',
  'object_updateChannelTooLong' => 'Update channel too long',
  'object_updateChannelTooLong_param_channel_id_type_int' => 'Channel ID',
  'object_updateChannelTooLong_param_pts_type_int' => 'Pts',
  'object_updateChannel' => 'Update channel',
  'object_updateChannel_param_channel_id_type_int' => 'Channel ID',
  'object_updateNewChannelMessage' => 'Update new channel message',
  'object_updateNewChannelMessage_param_message_type_Message' => 'Message',
  'object_updateNewChannelMessage_param_pts_type_int' => 'Pts',
  'object_updateNewChannelMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateReadChannelInbox' => 'Update read channel inbox',
  'object_updateReadChannelInbox_param_channel_id_type_int' => 'Channel ID',
  'object_updateReadChannelInbox_param_max_id_type_int' => 'Max ID',
  'object_updateDeleteChannelMessages' => 'Update delete channel messages',
  'object_updateDeleteChannelMessages_param_channel_id_type_int' => 'Channel ID',
  'object_updateDeleteChannelMessages_param_messages_type_Vector t' => 'Messages',
  'object_updateDeleteChannelMessages_param_pts_type_int' => 'Pts',
  'object_updateDeleteChannelMessages_param_pts_count_type_int' => 'Pts count',
  'object_updateChannelMessageViews' => 'Update channel message views',
  'object_updateChannelMessageViews_param_channel_id_type_int' => 'Channel ID',
  'object_updateChannelMessageViews_param_id_type_int' => 'ID',
  'object_updateChannelMessageViews_param_views_type_int' => 'Views',
  'object_updateChatAdmins' => 'Update chat admins',
  'object_updateChatAdmins_param_chat_id_type_int' => 'Chat ID',
  'object_updateChatAdmins_param_enabled_type_Bool' => 'Enabled?',
  'object_updateChatAdmins_param_version_type_int' => 'Version',
  'object_updateChatParticipantAdmin' => 'Update chat participant admin',
  'object_updateChatParticipantAdmin_param_chat_id_type_int' => 'Chat ID',
  'object_updateChatParticipantAdmin_param_user_id_type_int' => 'User ID',
  'object_updateChatParticipantAdmin_param_is_admin_type_Bool' => 'Is admin?',
  'object_updateChatParticipantAdmin_param_version_type_int' => 'Version',
  'object_updateNewStickerSet' => 'Update new sticker set',
  'object_updateNewStickerSet_param_stickerset_type_messages.StickerSet' => 'Stickerset',
  'object_updateStickerSetsOrder' => 'Update sticker sets order',
  'object_updateStickerSetsOrder_param_masks_type_true' => 'Masks?',
  'object_updateStickerSetsOrder_param_order_type_Vector t' => 'Order',
  'object_updateStickerSets' => 'Update sticker sets',
  'object_updateSavedGifs' => 'Update saved gifs',
  'object_updateBotInlineQuery' => 'Update bot inline query',
  'object_updateBotInlineQuery_param_query_id_type_long' => 'Query ID',
  'object_updateBotInlineQuery_param_user_id_type_int' => 'User ID',
  'object_updateBotInlineQuery_param_query_type_string' => 'Query',
  'object_updateBotInlineQuery_param_geo_type_GeoPoint' => 'Geo',
  'object_updateBotInlineQuery_param_offset_type_string' => 'Offset',
  'object_updateBotInlineSend' => 'Update bot inline send',
  'object_updateBotInlineSend_param_user_id_type_int' => 'User ID',
  'object_updateBotInlineSend_param_query_type_string' => 'Query',
  'object_updateBotInlineSend_param_geo_type_GeoPoint' => 'Geo',
  'object_updateBotInlineSend_param_id_type_string' => 'ID',
  'object_updateBotInlineSend_param_msg_id_type_InputBotInlineMessageID' => 'Msg ID',
  'object_updateEditChannelMessage' => 'Update edit channel message',
  'object_updateEditChannelMessage_param_message_type_Message' => 'Message',
  'object_updateEditChannelMessage_param_pts_type_int' => 'Pts',
  'object_updateEditChannelMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateChannelPinnedMessage' => 'Update channel pinned message',
  'object_updateChannelPinnedMessage_param_channel_id_type_int' => 'Channel ID',
  'object_updateChannelPinnedMessage_param_id_type_int' => 'ID',
  'object_updateBotCallbackQuery' => 'Update bot callback query',
  'object_updateBotCallbackQuery_param_query_id_type_long' => 'Query ID',
  'object_updateBotCallbackQuery_param_user_id_type_int' => 'User ID',
  'object_updateBotCallbackQuery_param_peer_type_Peer' => 'Peer',
  'object_updateBotCallbackQuery_param_msg_id_type_int' => 'Msg ID',
  'object_updateBotCallbackQuery_param_chat_instance_type_long' => 'Chat instance',
  'object_updateBotCallbackQuery_param_data_type_bytes' => 'Data',
  'object_updateBotCallbackQuery_param_game_short_name_type_string' => 'Game short name',
  'object_updateEditMessage' => 'Update edit message',
  'object_updateEditMessage_param_message_type_Message' => 'Message',
  'object_updateEditMessage_param_pts_type_int' => 'Pts',
  'object_updateEditMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateInlineBotCallbackQuery' => 'Update inline bot callback query',
  'object_updateInlineBotCallbackQuery_param_query_id_type_long' => 'Query ID',
  'object_updateInlineBotCallbackQuery_param_user_id_type_int' => 'User ID',
  'object_updateInlineBotCallbackQuery_param_msg_id_type_InputBotInlineMessageID' => 'Msg ID',
  'object_updateInlineBotCallbackQuery_param_chat_instance_type_long' => 'Chat instance',
  'object_updateInlineBotCallbackQuery_param_data_type_bytes' => 'Data',
  'object_updateInlineBotCallbackQuery_param_game_short_name_type_string' => 'Game short name',
  'object_updateReadChannelOutbox' => 'Update read channel outbox',
  'object_updateReadChannelOutbox_param_channel_id_type_int' => 'Channel ID',
  'object_updateReadChannelOutbox_param_max_id_type_int' => 'Max ID',
  'object_updateDraftMessage' => 'Update draft message',
  'object_updateDraftMessage_param_peer_type_Peer' => 'Peer',
  'object_updateDraftMessage_param_draft_type_DraftMessage' => 'Draft',
  'object_updateReadFeaturedStickers' => 'Update read featured stickers',
  'object_updateRecentStickers' => 'Update recent stickers',
  'object_updateConfig' => 'Update config',
  'object_updatePtsChanged' => 'Update pts changed',
  'object_updateChannelWebPage' => 'Update channel web page',
  'object_updateChannelWebPage_param_channel_id_type_int' => 'Channel ID',
  'object_updateChannelWebPage_param_webpage_type_WebPage' => 'Webpage',
  'object_updateChannelWebPage_param_pts_type_int' => 'Pts',
  'object_updateChannelWebPage_param_pts_count_type_int' => 'Pts count',
  'object_updateDialogPinned' => 'Update dialog pinned',
  'object_updateDialogPinned_param_pinned_type_true' => 'Pinned?',
  'object_updateDialogPinned_param_peer_type_Peer' => 'Peer',
  'object_updatePinnedDialogs' => 'Update pinned dialogs',
  'object_updatePinnedDialogs_param_order_type_Vector t' => 'Order',
  'object_updateBotWebhookJSON' => 'Update bot webhook json',
  'object_updateBotWebhookJSON_param_data_type_DataJSON' => 'Data',
  'object_updateBotWebhookJSONQuery' => 'Update bot webhook json query',
  'object_updateBotWebhookJSONQuery_param_query_id_type_long' => 'Query ID',
  'object_updateBotWebhookJSONQuery_param_data_type_DataJSON' => 'Data',
  'object_updateBotWebhookJSONQuery_param_timeout_type_int' => 'Timeout',
  'object_updateBotShippingQuery' => 'Update bot shipping query',
  'object_updateBotShippingQuery_param_query_id_type_long' => 'Query ID',
  'object_updateBotShippingQuery_param_user_id_type_int' => 'User ID',
  'object_updateBotShippingQuery_param_payload_type_bytes' => 'Payload',
  'object_updateBotShippingQuery_param_shipping_address_type_PostAddress' => 'Shipping address',
  'object_updateBotPrecheckoutQuery' => 'Update bot precheckout query',
  'object_updateBotPrecheckoutQuery_param_query_id_type_long' => 'Query ID',
  'object_updateBotPrecheckoutQuery_param_user_id_type_int' => 'User ID',
  'object_updateBotPrecheckoutQuery_param_payload_type_bytes' => 'Payload',
  'object_updateBotPrecheckoutQuery_param_info_type_PaymentRequestedInfo' => 'Info',
  'object_updateBotPrecheckoutQuery_param_shipping_option_id_type_string' => 'Shipping option ID',
  'object_updateBotPrecheckoutQuery_param_currency_type_string' => 'Currency',
  'object_updateBotPrecheckoutQuery_param_total_amount_type_long' => 'Total amount',
  'object_updatePhoneCall' => 'Update phone call',
  'object_updatePhoneCall_param_phone_call_type_PhoneCall' => 'Phone call',
  'object_updateLangPackTooLong' => 'Update lang pack too long',
  'object_updateLangPack' => 'Update lang pack',
  'object_updateLangPack_param_difference_type_LangPackDifference' => 'Difference',
  'object_updateFavedStickers' => 'Update faved stickers',
  'object_updateChannelReadMessagesContents' => 'Update channel read messages contents',
  'object_updateChannelReadMessagesContents_param_channel_id_type_int' => 'Channel ID',
  'object_updateChannelReadMessagesContents_param_messages_type_Vector t' => 'Messages',
  'object_updateContactsReset' => 'Update contacts reset',
  'object_updateChannelAvailableMessages' => 'Update channel available messages',
  'object_updateChannelAvailableMessages_param_channel_id_type_int' => 'Channel ID',
  'object_updateChannelAvailableMessages_param_available_min_id_type_int' => 'Available min ID',
  'object_updates.state' => 'State',
  'object_updates.state_param_pts_type_int' => 'Pts',
  'object_updates.state_param_qts_type_int' => 'Qts',
  'object_updates.state_param_date_type_int' => 'Date',
  'object_updates.state_param_seq_type_int' => 'Seq',
  'object_updates.state_param_unread_count_type_int' => 'Unread count',
  'object_updates.differenceEmpty' => 'Empty difference',
  'object_updates.differenceEmpty_param_date_type_int' => 'Date',
  'object_updates.differenceEmpty_param_seq_type_int' => 'Seq',
  'object_updates.difference' => 'Difference',
  'object_updates.difference_param_new_messages_type_Vector t' => 'New messages',
  'object_updates.difference_param_new_encrypted_messages_type_Vector t' => 'New encrypted messages',
  'object_updates.difference_param_other_updates_type_Vector t' => 'Other updates',
  'object_updates.difference_param_chats_type_Vector t' => 'Chats',
  'object_updates.difference_param_users_type_Vector t' => 'Users',
  'object_updates.difference_param_state_type_updates.State' => 'State',
  'object_updates.differenceSlice' => 'Difference slice',
  'object_updates.differenceSlice_param_new_messages_type_Vector t' => 'New messages',
  'object_updates.differenceSlice_param_new_encrypted_messages_type_Vector t' => 'New encrypted messages',
  'object_updates.differenceSlice_param_other_updates_type_Vector t' => 'Other updates',
  'object_updates.differenceSlice_param_chats_type_Vector t' => 'Chats',
  'object_updates.differenceSlice_param_users_type_Vector t' => 'Users',
  'object_updates.differenceSlice_param_intermediate_state_type_updates.State' => 'Intermediate state',
  'object_updates.differenceTooLong' => 'Difference too long',
  'object_updates.differenceTooLong_param_pts_type_int' => 'Pts',
  'object_updatesTooLong' => 'Updates too long',
  'object_updateShortMessage' => 'Update short message',
  'object_updateShortMessage_param_out_type_true' => 'Out?',
  'object_updateShortMessage_param_mentioned_type_true' => 'Mentioned?',
  'object_updateShortMessage_param_media_unread_type_true' => 'Media unread?',
  'object_updateShortMessage_param_silent_type_true' => 'Silent?',
  'object_updateShortMessage_param_id_type_int' => 'ID',
  'object_updateShortMessage_param_user_id_type_int' => 'User ID',
  'object_updateShortMessage_param_message_type_string' => 'Message',
  'object_updateShortMessage_param_pts_type_int' => 'Pts',
  'object_updateShortMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateShortMessage_param_date_type_int' => 'Date',
  'object_updateShortMessage_param_fwd_from_type_MessageFwdHeader' => 'Fwd from',
  'object_updateShortMessage_param_via_bot_id_type_int' => 'Via bot ID',
  'object_updateShortMessage_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
  'object_updateShortMessage_param_entities_type_Vector t' => 'Entities',
  'object_updateShortChatMessage' => 'Update short chat message',
  'object_updateShortChatMessage_param_out_type_true' => 'Out?',
  'object_updateShortChatMessage_param_mentioned_type_true' => 'Mentioned?',
  'object_updateShortChatMessage_param_media_unread_type_true' => 'Media unread?',
  'object_updateShortChatMessage_param_silent_type_true' => 'Silent?',
  'object_updateShortChatMessage_param_id_type_int' => 'ID',
  'object_updateShortChatMessage_param_from_id_type_int' => 'From ID',
  'object_updateShortChatMessage_param_chat_id_type_int' => 'Chat ID',
  'object_updateShortChatMessage_param_message_type_string' => 'Message',
  'object_updateShortChatMessage_param_pts_type_int' => 'Pts',
  'object_updateShortChatMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateShortChatMessage_param_date_type_int' => 'Date',
  'object_updateShortChatMessage_param_fwd_from_type_MessageFwdHeader' => 'Fwd from',
  'object_updateShortChatMessage_param_via_bot_id_type_int' => 'Via bot ID',
  'object_updateShortChatMessage_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
  'object_updateShortChatMessage_param_entities_type_Vector t' => 'Entities',
  'object_updateShort' => 'Update short',
  'object_updateShort_param_update_type_Update' => 'Update',
  'object_updateShort_param_date_type_int' => 'Date',
  'object_updatesCombined' => 'Updates combined',
  'object_updatesCombined_param_updates_type_Vector t' => 'Updates',
  'object_updatesCombined_param_users_type_Vector t' => 'Users',
  'object_updatesCombined_param_chats_type_Vector t' => 'Chats',
  'object_updatesCombined_param_date_type_int' => 'Date',
  'object_updatesCombined_param_seq_start_type_int' => 'Seq start',
  'object_updatesCombined_param_seq_type_int' => 'Seq',
  'object_updates' => 'Updates',
  'object_updates_param_updates_type_Vector t' => 'Updates',
  'object_updates_param_users_type_Vector t' => 'Users',
  'object_updates_param_chats_type_Vector t' => 'Chats',
  'object_updates_param_date_type_int' => 'Date',
  'object_updates_param_seq_type_int' => 'Seq',
  'object_updateShortSentMessage' => 'Update short sent message',
  'object_updateShortSentMessage_param_out_type_true' => 'Out?',
  'object_updateShortSentMessage_param_id_type_int' => 'ID',
  'object_updateShortSentMessage_param_pts_type_int' => 'Pts',
  'object_updateShortSentMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateShortSentMessage_param_date_type_int' => 'Date',
  'object_updateShortSentMessage_param_media_type_MessageMedia' => 'Media',
  'object_updateShortSentMessage_param_entities_type_Vector t' => 'Entities',
  'object_photos.photos' => 'Photos',
  'object_photos.photos_param_photos_type_Vector t' => 'Photos',
  'object_photos.photos_param_users_type_Vector t' => 'Users',
  'object_photos.photosSlice' => 'Photos slice',
  'object_photos.photosSlice_param_count_type_int' => 'Count',
  'object_photos.photosSlice_param_photos_type_Vector t' => 'Photos',
  'object_photos.photosSlice_param_users_type_Vector t' => 'Users',
  'object_photos.photo' => 'Photo',
  'object_photos.photo_param_photo_type_Photo' => 'Photo',
  'object_photos.photo_param_users_type_Vector t' => 'Users',
  'object_upload.file' => 'File',
  'object_upload.file_param_type_type_storage.FileType' => 'Type',
  'object_upload.file_param_mtime_type_int' => 'Mtime',
  'object_upload.file_param_bytes_type_bytes' => 'Bytes',
  'object_upload.fileCdnRedirect' => 'File cdn redirect',
  'object_upload.fileCdnRedirect_param_dc_id_type_int' => 'DC ID',
  'object_upload.fileCdnRedirect_param_file_token_type_bytes' => 'File token',
  'object_upload.fileCdnRedirect_param_encryption_key_type_bytes' => 'Encryption key',
  'object_upload.fileCdnRedirect_param_encryption_iv_type_bytes' => 'Encryption iv',
  'object_upload.fileCdnRedirect_param_cdn_file_hashes_type_Vector t' => 'Cdn file hashes',
  'object_dcOption' => 'DC option',
  'object_dcOption_param_ipv6_type_true' => 'Ipv6?',
  'object_dcOption_param_media_only_type_true' => 'Media only?',
  'object_dcOption_param_tcpo_only_type_true' => 'Tcpo only?',
  'object_dcOption_param_cdn_type_true' => 'Cdn?',
  'object_dcOption_param_static_type_true' => 'Static?',
  'object_dcOption_param_id_type_int' => 'ID',
  'object_dcOption_param_ip_address_type_string' => 'Ip address',
  'object_dcOption_param_port_type_int' => 'Port',
  'object_config' => 'Config',
  'object_config_param_phonecalls_enabled_type_true' => 'Phonecalls enabled?',
  'object_config_param_default_p2p_contacts_type_true' => 'Default p2p contacts?',
  'object_config_param_date_type_int' => 'Date',
  'object_config_param_expires_type_int' => 'Expires',
  'object_config_param_test_mode_type_Bool' => 'Test mode?',
  'object_config_param_this_dc_type_int' => 'This DC',
  'object_config_param_dc_options_type_Vector t' => 'DC options',
  'object_config_param_chat_size_max_type_int' => 'Chat size max',
  'object_config_param_megagroup_size_max_type_int' => 'Megagroup size max',
  'object_config_param_forwarded_count_max_type_int' => 'Forwarded count max',
  'object_config_param_online_update_period_ms_type_int' => 'Online update period ms',
  'object_config_param_offline_blur_timeout_ms_type_int' => 'Offline blur timeout ms',
  'object_config_param_offline_idle_timeout_ms_type_int' => 'Offline IDle timeout ms',
  'object_config_param_online_cloud_timeout_ms_type_int' => 'Online cloud timeout ms',
  'object_config_param_notify_cloud_delay_ms_type_int' => 'Notify cloud delay ms',
  'object_config_param_notify_default_delay_ms_type_int' => 'Notify default delay ms',
  'object_config_param_chat_big_size_type_int' => 'Chat big size',
  'object_config_param_push_chat_period_ms_type_int' => 'Push chat period ms',
  'object_config_param_push_chat_limit_type_int' => 'Push chat limit',
  'object_config_param_saved_gifs_limit_type_int' => 'Saved gifs limit',
  'object_config_param_edit_time_limit_type_int' => 'Edit time limit',
  'object_config_param_rating_e_decay_type_int' => 'Rating e decay',
  'object_config_param_stickers_recent_limit_type_int' => 'Stickers recent limit',
  'object_config_param_stickers_faved_limit_type_int' => 'Stickers faved limit',
  'object_config_param_channels_read_media_period_type_int' => 'Channels read media period',
  'object_config_param_tmp_sessions_type_int' => 'Tmp sessions',
  'object_config_param_pinned_dialogs_count_max_type_int' => 'Pinned dialogs count max',
  'object_config_param_call_receive_timeout_ms_type_int' => 'Call receive timeout ms',
  'object_config_param_call_ring_timeout_ms_type_int' => 'Call ring timeout ms',
  'object_config_param_call_connect_timeout_ms_type_int' => 'Call connect timeout ms',
  'object_config_param_call_packet_timeout_ms_type_int' => 'Call packet timeout ms',
  'object_config_param_me_url_prefix_type_string' => 'Me URL prefix',
  'object_config_param_suggested_lang_code_type_string' => 'Suggested lang code',
  'object_config_param_lang_pack_version_type_int' => 'Lang pack version',
  'object_config_param_disabled_features_type_Vector t' => 'Disabled features',
  'object_nearestDc' => 'Nearest DC',
  'object_nearestDc_param_country_type_string' => 'Country',
  'object_nearestDc_param_this_dc_type_int' => 'This DC',
  'object_nearestDc_param_nearest_dc_type_int' => 'Nearest DC',
  'object_help.appUpdate' => 'App update',
  'object_help.appUpdate_param_id_type_int' => 'ID',
  'object_help.appUpdate_param_critical_type_Bool' => 'Critical?',
  'object_help.appUpdate_param_url_type_string' => 'URL',
  'object_help.appUpdate_param_text_type_string' => 'Text',
  'object_help.noAppUpdate' => 'No app update',
  'object_help.inviteText' => 'Invite text',
  'object_help.inviteText_param_message_type_string' => 'Message',
  'object_encryptedChatEmpty' => 'Empty encrypted chat',
  'object_encryptedChatEmpty_param_id_type_int' => 'ID',
  'object_encryptedChatWaiting' => 'Encrypted chat waiting',
  'object_encryptedChatWaiting_param_id_type_int' => 'ID',
  'object_encryptedChatWaiting_param_access_hash_type_long' => 'Access hash',
  'object_encryptedChatWaiting_param_date_type_int' => 'Date',
  'object_encryptedChatWaiting_param_admin_id_type_int' => 'Admin ID',
  'object_encryptedChatWaiting_param_participant_id_type_int' => 'Participant ID',
  'object_encryptedChatRequested' => 'Encrypted chat requested',
  'object_encryptedChatRequested_param_id_type_int' => 'ID',
  'object_encryptedChatRequested_param_access_hash_type_long' => 'Access hash',
  'object_encryptedChatRequested_param_date_type_int' => 'Date',
  'object_encryptedChatRequested_param_admin_id_type_int' => 'Admin ID',
  'object_encryptedChatRequested_param_participant_id_type_int' => 'Participant ID',
  'object_encryptedChatRequested_param_g_a_type_bytes' => 'G a',
  'object_encryptedChat' => 'Encrypted chat',
  'object_encryptedChat_param_id_type_int' => 'ID',
  'object_encryptedChat_param_access_hash_type_long' => 'Access hash',
  'object_encryptedChat_param_date_type_int' => 'Date',
  'object_encryptedChat_param_admin_id_type_int' => 'Admin ID',
  'object_encryptedChat_param_participant_id_type_int' => 'Participant ID',
  'object_encryptedChat_param_g_a_or_b_type_bytes' => 'G a or b',
  'object_encryptedChat_param_key_fingerprint_type_long' => 'Key fingerprint',
  'object_encryptedChatDiscarded' => 'Encrypted chat discarded',
  'object_encryptedChatDiscarded_param_id_type_int' => 'ID',
  'object_inputEncryptedChat' => 'Encrypted chat',
  'object_inputEncryptedChat_param_chat_id_type_int' => 'Chat ID',
  'object_inputEncryptedChat_param_access_hash_type_long' => 'Access hash',
  'object_encryptedFileEmpty' => 'Empty encrypted file',
  'object_encryptedFile' => 'Encrypted file',
  'object_encryptedFile_param_id_type_long' => 'ID',
  'object_encryptedFile_param_access_hash_type_long' => 'Access hash',
  'object_encryptedFile_param_size_type_int' => 'Size',
  'object_encryptedFile_param_dc_id_type_int' => 'DC ID',
  'object_encryptedFile_param_key_fingerprint_type_int' => 'Key fingerprint',
  'object_inputEncryptedFileEmpty' => 'Empty input encrypted file',
  'object_inputEncryptedFileUploaded' => 'Encrypted file uploaded',
  'object_inputEncryptedFileUploaded_param_id_type_long' => 'ID',
  'object_inputEncryptedFileUploaded_param_parts_type_int' => 'Parts',
  'object_inputEncryptedFileUploaded_param_md5_checksum_type_string' => 'Md5 checksum',
  'object_inputEncryptedFileUploaded_param_key_fingerprint_type_int' => 'Key fingerprint',
  'object_inputEncryptedFile' => 'Encrypted file',
  'object_inputEncryptedFile_param_id_type_long' => 'ID',
  'object_inputEncryptedFile_param_access_hash_type_long' => 'Access hash',
  'object_inputEncryptedFileBigUploaded' => 'Encrypted file big uploaded',
  'object_inputEncryptedFileBigUploaded_param_id_type_long' => 'ID',
  'object_inputEncryptedFileBigUploaded_param_parts_type_int' => 'Parts',
  'object_inputEncryptedFileBigUploaded_param_key_fingerprint_type_int' => 'Key fingerprint',
  'object_encryptedMessage' => 'Encrypted message',
  'object_encryptedMessage_param_chat_id_type_int' => 'Chat ID',
  'object_encryptedMessage_param_date_type_int' => 'Date',
  'object_encryptedMessage_param_decrypted_message_type_DecryptedMessage' => 'Decrypted message',
  'object_encryptedMessage_param_file_type_EncryptedFile' => 'File',
  'object_encryptedMessageService' => 'Encrypted message service',
  'object_encryptedMessageService_param_chat_id_type_int' => 'Chat ID',
  'object_encryptedMessageService_param_date_type_int' => 'Date',
  'object_encryptedMessageService_param_decrypted_message_type_DecryptedMessage' => 'Decrypted message',
  'object_messages.dhConfigNotModified' => 'Dh config not modified',
  'object_messages.dhConfigNotModified_param_random_type_bytes' => 'Random',
  'object_messages.dhConfig' => 'Dh config',
  'object_messages.dhConfig_param_g_type_int' => 'G',
  'object_messages.dhConfig_param_p_type_bytes' => 'P',
  'object_messages.dhConfig_param_version_type_int' => 'Version',
  'object_messages.dhConfig_param_random_type_bytes' => 'Random',
  'object_messages.sentEncryptedMessage' => 'Sent encrypted message',
  'object_messages.sentEncryptedMessage_param_date_type_int' => 'Date',
  'object_messages.sentEncryptedFile' => 'Sent encrypted file',
  'object_messages.sentEncryptedFile_param_date_type_int' => 'Date',
  'object_messages.sentEncryptedFile_param_file_type_EncryptedFile' => 'File',
  'object_inputDocumentEmpty' => 'Empty input document',
  'object_inputDocument' => 'Document',
  'object_inputDocument_param_id_type_long' => 'ID',
  'object_inputDocument_param_access_hash_type_long' => 'Access hash',
  'object_documentEmpty' => 'Empty document',
  'object_documentEmpty_param_id_type_long' => 'ID',
  'object_document' => 'Document',
  'object_document_param_id_type_long' => 'ID',
  'object_document_param_access_hash_type_long' => 'Access hash',
  'object_document_param_date_type_int' => 'Date',
  'object_document_param_mime_type_type_string' => 'Mime type',
  'object_document_param_size_type_int' => 'Size',
  'object_document_param_thumb_type_PhotoSize' => 'Thumbnail',
  'object_document_param_dc_id_type_int' => 'DC ID',
  'object_document_param_version_type_int' => 'Version',
  'object_document_param_attributes_type_Vector t' => 'Attributes',
  'object_help.support' => 'Support',
  'object_help.support_param_phone_number_type_string' => 'Phone number',
  'object_help.support_param_user_type_User' => 'User',
  'object_notifyPeer' => 'Notify peer',
  'object_notifyPeer_param_peer_type_Peer' => 'Peer',
  'object_notifyUsers' => 'Notify users',
  'object_notifyChats' => 'Notify chats',
  'object_notifyAll' => 'Notify all',
  'object_sendMessageTypingAction' => 'Send message typing action',
  'object_sendMessageCancelAction' => 'Send message cancel action',
  'object_sendMessageRecordVideoAction' => 'Send message record video action',
  'object_sendMessageUploadVideoAction' => 'Send message upload video action',
  'object_sendMessageUploadVideoAction_param_progress_type_int' => 'Progress',
  'object_sendMessageRecordAudioAction' => 'Send message record audio action',
  'object_sendMessageUploadAudioAction' => 'Send message upload audio action',
  'object_sendMessageUploadAudioAction_param_progress_type_int' => 'Progress',
  'object_sendMessageUploadPhotoAction' => 'Send message upload photo action',
  'object_sendMessageUploadPhotoAction_param_progress_type_int' => 'Progress',
  'object_sendMessageUploadDocumentAction' => 'Send message upload document action',
  'object_sendMessageUploadDocumentAction_param_progress_type_int' => 'Progress',
  'object_sendMessageGeoLocationAction' => 'Send message geo location action',
  'object_sendMessageChooseContactAction' => 'Send message choose contact action',
  'object_sendMessageGamePlayAction' => 'Send message game play action',
  'object_sendMessageRecordRoundAction' => 'Send message record round action',
  'object_sendMessageUploadRoundAction' => 'Send message upload round action',
  'object_sendMessageUploadRoundAction_param_progress_type_int' => 'Progress',
  'object_contacts.found' => 'Found',
  'object_contacts.found_param_my_results_type_Vector t' => 'My results',
  'object_contacts.found_param_results_type_Vector t' => 'Results',
  'object_contacts.found_param_chats_type_Vector t' => 'Chats',
  'object_contacts.found_param_users_type_Vector t' => 'Users',
  'object_inputPrivacyKeyStatusTimestamp' => 'Privacy key status timestamp',
  'object_inputPrivacyKeyChatInvite' => 'Privacy key chat invite',
  'object_inputPrivacyKeyPhoneCall' => 'Privacy key phone call',
  'object_privacyKeyStatusTimestamp' => 'Privacy key status timestamp',
  'object_privacyKeyPhoneCall' => 'Privacy key phone call',
  'object_inputPrivacyValueAllowContacts' => 'Privacy value allow contacts',
  'object_inputPrivacyValueAllowAll' => 'Privacy value allow all',
  'object_inputPrivacyValueAllowUsers' => 'Privacy value allow users',
  'object_inputPrivacyValueAllowUsers_param_users_type_Vector t' => 'Users',
  'object_inputPrivacyValueDisallowContacts' => 'Privacy value disallow contacts',
  'object_inputPrivacyValueDisallowAll' => 'Privacy value disallow all',
  'object_inputPrivacyValueDisallowUsers' => 'Privacy value disallow users',
  'object_inputPrivacyValueDisallowUsers_param_users_type_Vector t' => 'Users',
  'object_privacyValueAllowContacts' => 'Privacy value allow contacts',
  'object_privacyValueAllowAll' => 'Privacy value allow all',
  'object_privacyValueAllowUsers' => 'Privacy value allow users',
  'object_privacyValueAllowUsers_param_users_type_Vector t' => 'Users',
  'object_privacyValueDisallowContacts' => 'Privacy value disallow contacts',
  'object_privacyValueDisallowAll' => 'Privacy value disallow all',
  'object_privacyValueDisallowUsers' => 'Privacy value disallow users',
  'object_privacyValueDisallowUsers_param_users_type_Vector t' => 'Users',
  'object_account.privacyRules' => 'Privacy rules',
  'object_account.privacyRules_param_rules_type_Vector t' => 'Rules',
  'object_account.privacyRules_param_users_type_Vector t' => 'Users',
  'object_accountDaysTTL' => 'Account TTL in days',
  'object_accountDaysTTL_param_days_type_int' => 'Days',
  'object_documentAttributeImageSize' => 'Document attribute image size',
  'object_documentAttributeImageSize_param_w_type_int' => 'Width',
  'object_documentAttributeImageSize_param_h_type_int' => 'Height',
  'object_documentAttributeAnimated' => 'Document attribute animated',
  'object_documentAttributeSticker' => 'Document attribute sticker',
  'object_documentAttributeSticker_param_mask_type_true' => 'Mask?',
  'object_documentAttributeSticker_param_alt_type_string' => 'Alt',
  'object_documentAttributeSticker_param_stickerset_type_InputStickerSet' => 'Stickerset',
  'object_documentAttributeSticker_param_mask_coords_type_MaskCoords' => 'Mask coords',
  'object_documentAttributeVideo' => 'Document attribute video',
  'object_documentAttributeVideo_param_round_message_type_true' => 'Round message?',
  'object_documentAttributeVideo_param_supports_streaming_type_true' => 'Supports streaming?',
  'object_documentAttributeVideo_param_duration_type_int' => 'Duration',
  'object_documentAttributeVideo_param_w_type_int' => 'Width',
  'object_documentAttributeVideo_param_h_type_int' => 'Height',
  'object_documentAttributeAudio' => 'Document attribute audio',
  'object_documentAttributeAudio_param_voice_type_true' => 'Voice?',
  'object_documentAttributeAudio_param_duration_type_int' => 'Duration',
  'object_documentAttributeAudio_param_title_type_string' => 'Title',
  'object_documentAttributeAudio_param_performer_type_string' => 'Performer',
  'object_documentAttributeAudio_param_waveform_type_bytes' => 'Waveform',
  'object_documentAttributeFilename' => 'Document attribute filename',
  'object_documentAttributeFilename_param_file_name_type_string' => 'File name',
  'object_documentAttributeHasStickers' => 'Document attribute has stickers',
  'object_messages.stickersNotModified' => 'Stickers not modified',
  'object_messages.stickers' => 'Stickers',
  'object_messages.stickers_param_hash_type_string' => 'Hash',
  'object_messages.stickers_param_stickers_type_Vector t' => 'Stickers',
  'object_stickerPack' => 'Sticker pack',
  'object_stickerPack_param_emoticon_type_string' => 'Emoticon',
  'object_stickerPack_param_documents_type_Vector t' => 'Documents',
  'object_messages.allStickersNotModified' => 'All stickers not modified',
  'object_messages.allStickers' => 'All stickers',
  'object_messages.allStickers_param_hash_type_int' => 'Hash',
  'object_messages.allStickers_param_sets_type_Vector t' => 'Sets',
  'object_disabledFeature' => 'Disabled feature',
  'object_disabledFeature_param_feature_type_string' => 'Feature',
  'object_disabledFeature_param_description_type_string' => 'Description',
  'object_messages.affectedMessages' => 'Affected messages',
  'object_messages.affectedMessages_param_pts_type_int' => 'Pts',
  'object_messages.affectedMessages_param_pts_count_type_int' => 'Pts count',
  'object_contactLinkUnknown' => 'Contact link unknown',
  'object_contactLinkNone' => 'Contact link none',
  'object_contactLinkHasPhone' => 'Contact link has phone',
  'object_contactLinkContact' => 'Contact link contact',
  'object_webPageEmpty' => 'Empty web page',
  'object_webPageEmpty_param_id_type_long' => 'ID',
  'object_webPagePending' => 'Web page pending',
  'object_webPagePending_param_id_type_long' => 'ID',
  'object_webPagePending_param_date_type_int' => 'Date',
  'object_webPage' => 'Web page',
  'object_webPage_param_id_type_long' => 'ID',
  'object_webPage_param_url_type_string' => 'URL',
  'object_webPage_param_display_url_type_string' => 'Display URL',
  'object_webPage_param_hash_type_int' => 'Hash',
  'object_webPage_param_type_type_string' => 'Type',
  'object_webPage_param_site_name_type_string' => 'Site name',
  'object_webPage_param_title_type_string' => 'Title',
  'object_webPage_param_description_type_string' => 'Description',
  'object_webPage_param_photo_type_Photo' => 'Photo',
  'object_webPage_param_embed_url_type_string' => 'Embed URL',
  'object_webPage_param_embed_type_type_string' => 'Embed type',
  'object_webPage_param_embed_width_type_int' => 'Embed width',
  'object_webPage_param_embed_height_type_int' => 'Embed height',
  'object_webPage_param_duration_type_int' => 'Duration',
  'object_webPage_param_author_type_string' => 'Author',
  'object_webPage_param_document_type_Document' => 'Document',
  'object_webPage_param_cached_page_type_Page' => 'Cached page',
  'object_webPageNotModified' => 'Web page not modified',
  'object_authorization' => 'Authorization',
  'object_authorization_param_hash_type_long' => 'Hash',
  'object_authorization_param_device_model_type_string' => 'Device model',
  'object_authorization_param_platform_type_string' => 'Platform',
  'object_authorization_param_system_version_type_string' => 'System version',
  'object_authorization_param_api_id_type_int' => 'Api ID',
  'object_authorization_param_app_name_type_string' => 'App name',
  'object_authorization_param_app_version_type_string' => 'App version',
  'object_authorization_param_date_created_type_int' => 'Date created',
  'object_authorization_param_date_active_type_int' => 'Date active',
  'object_authorization_param_ip_type_string' => 'Ip',
  'object_authorization_param_country_type_string' => 'Country',
  'object_authorization_param_region_type_string' => 'Region',
  'object_account.authorizations' => 'Authorized clients for this account',
  'object_account.authorizations_param_authorizations_type_Vector t' => 'Authorizations',
  'object_account.noPassword' => 'No password',
  'object_account.noPassword_param_new_salt_type_bytes' => 'New salt',
  'object_account.noPassword_param_email_unconfirmed_pattern_type_string' => 'Email unconfirmed pattern',
  'object_account.password' => 'Password',
  'object_account.password_param_current_salt_type_bytes' => 'Current salt',
  'object_account.password_param_new_salt_type_bytes' => 'New salt',
  'object_account.password_param_hint_type_string' => 'Hint',
  'object_account.password_param_has_recovery_type_Bool' => 'Has recovery?',
  'object_account.password_param_email_unconfirmed_pattern_type_string' => 'Email unconfirmed pattern',
  'object_account.passwordSettings' => 'Password settings',
  'object_account.passwordSettings_param_email_type_string' => 'Email',
  'object_account.passwordInputSettings' => '2FA password settings',
  'object_account.passwordInputSettings_param_new_salt_type_bytes' => '`$new_salt = $MadelineProto->account->getPassword()[\'new_salt\'].$MadelineProto->random(8);`',
  'object_account.passwordInputSettings_param_new_password_hash_type_bytes' => '`hash(\'sha256\', $new_salt.$new_password.$new_salt, true)`',
  'object_account.passwordInputSettings_param_hint_type_string' => 'Hint',
  'object_account.passwordInputSettings_param_email_type_string' => 'Email',
  'object_auth.passwordRecovery' => 'Password recovery',
  'object_auth.passwordRecovery_param_email_pattern_type_string' => 'Email pattern',
  'object_receivedNotifyMessage' => 'Received notify message',
  'object_receivedNotifyMessage_param_id_type_int' => 'ID',
  'object_chatInviteEmpty' => 'Empty chat invite',
  'object_chatInviteExported' => 'Exported chat invite',
  'object_chatInviteExported_param_link_type_string' => 'Link',
  'object_chatInviteAlready' => 'Invite of a chat of which I am already member ',
  'object_chatInviteAlready_param_chat_type_Chat' => 'Chat',
  'object_chatInvite' => 'Chat invite',
  'object_chatInvite_param_channel_type_true' => 'Channel?',
  'object_chatInvite_param_broadcast_type_true' => 'Broadcast?',
  'object_chatInvite_param_public_type_true' => 'Public?',
  'object_chatInvite_param_megagroup_type_true' => 'Megagroup?',
  'object_chatInvite_param_title_type_string' => 'Title',
  'object_chatInvite_param_photo_type_ChatPhoto' => 'Photo',
  'object_chatInvite_param_participants_count_type_int' => 'Participants count',
  'object_chatInvite_param_participants_type_Vector t' => 'Participants',
  'object_inputStickerSetEmpty' => 'Empty input sticker set',
  'object_inputStickerSetID' => 'Sticker set ID',
  'object_inputStickerSetID_param_id_type_long' => 'ID',
  'object_inputStickerSetID_param_access_hash_type_long' => 'Access hash',
  'object_inputStickerSetShortName' => 'Sticker set short name',
  'object_inputStickerSetShortName_param_short_name_type_string' => 'Short name',
  'object_stickerSet' => 'Sticker set',
  'object_stickerSet_param_installed_type_true' => 'Installed?',
  'object_stickerSet_param_archived_type_true' => 'Archived?',
  'object_stickerSet_param_official_type_true' => 'Official?',
  'object_stickerSet_param_masks_type_true' => 'Masks?',
  'object_stickerSet_param_id_type_long' => 'ID',
  'object_stickerSet_param_access_hash_type_long' => 'Access hash',
  'object_stickerSet_param_title_type_string' => 'Title',
  'object_stickerSet_param_short_name_type_string' => 'Short name',
  'object_stickerSet_param_count_type_int' => 'Count',
  'object_stickerSet_param_hash_type_int' => 'Hash',
  'object_messages.stickerSet' => 'Sticker set',
  'object_messages.stickerSet_param_set_type_StickerSet' => 'Set',
  'object_messages.stickerSet_param_packs_type_Vector t' => 'Packs',
  'object_messages.stickerSet_param_documents_type_Vector t' => 'Documents',
  'object_botInfo' => 'Bot info',
  'object_botInfo_param_user_id_type_int' => 'User ID',
  'object_botInfo_param_description_type_string' => 'Description',
  'object_botInfo_param_commands_type_Vector t' => 'Commands',
  'object_keyboardButton' => 'Keyboard button',
  'object_keyboardButton_param_text_type_string' => 'Text',
  'object_keyboardButtonUrl' => 'Keyboard button URL',
  'object_keyboardButtonUrl_param_text_type_string' => 'Text',
  'object_keyboardButtonUrl_param_url_type_string' => 'URL',
  'object_keyboardButtonCallback' => 'Keyboard button callback',
  'object_keyboardButtonCallback_param_text_type_string' => 'Text',
  'object_keyboardButtonCallback_param_data_type_bytes' => 'Data',
  'object_keyboardButtonRequestPhone' => 'Keyboard button request phone',
  'object_keyboardButtonRequestPhone_param_text_type_string' => 'Text',
  'object_keyboardButtonRequestGeoLocation' => 'Keyboard button request geo location',
  'object_keyboardButtonRequestGeoLocation_param_text_type_string' => 'Text',
  'object_keyboardButtonSwitchInline' => 'Keyboard button switch inline',
  'object_keyboardButtonSwitchInline_param_same_peer_type_true' => 'Same peer?',
  'object_keyboardButtonSwitchInline_param_text_type_string' => 'Text',
  'object_keyboardButtonSwitchInline_param_query_type_string' => 'Query',
  'object_keyboardButtonGame' => 'Keyboard button game',
  'object_keyboardButtonGame_param_text_type_string' => 'Text',
  'object_keyboardButtonBuy' => 'Keyboard button buy',
  'object_keyboardButtonBuy_param_text_type_string' => 'Text',
  'object_keyboardButtonRow' => 'Keyboard button row',
  'object_keyboardButtonRow_param_buttons_type_Vector t' => 'Buttons',
  'object_replyKeyboardHide' => 'Reply keyboard hide',
  'object_replyKeyboardHide_param_selective_type_true' => 'Selective?',
  'object_replyKeyboardForceReply' => 'Reply keyboard force reply',
  'object_replyKeyboardForceReply_param_single_use_type_true' => 'Single use?',
  'object_replyKeyboardForceReply_param_selective_type_true' => 'Selective?',
  'object_replyKeyboardMarkup' => 'Reply keyboard markup',
  'object_replyKeyboardMarkup_param_resize_type_true' => 'Resize?',
  'object_replyKeyboardMarkup_param_single_use_type_true' => 'Single use?',
  'object_replyKeyboardMarkup_param_selective_type_true' => 'Selective?',
  'object_replyKeyboardMarkup_param_rows_type_Vector t' => 'Rows',
  'object_replyInlineMarkup' => 'Reply inline markup',
  'object_replyInlineMarkup_param_rows_type_Vector t' => 'Rows',
  'object_messageEntityUnknown' => 'Message entity unknown',
  'object_messageEntityUnknown_param_offset_type_int' => 'Offset',
  'object_messageEntityUnknown_param_length_type_int' => 'Length',
  'object_messageEntityMention' => 'Message entity mention',
  'object_messageEntityMention_param_offset_type_int' => 'Offset',
  'object_messageEntityMention_param_length_type_int' => 'Length',
  'object_messageEntityHashtag' => 'Message entity hashtag',
  'object_messageEntityHashtag_param_offset_type_int' => 'Offset',
  'object_messageEntityHashtag_param_length_type_int' => 'Length',
  'object_messageEntityBotCommand' => 'Message entity bot command',
  'object_messageEntityBotCommand_param_offset_type_int' => 'Offset',
  'object_messageEntityBotCommand_param_length_type_int' => 'Length',
  'object_messageEntityUrl' => 'Message entity URL',
  'object_messageEntityUrl_param_offset_type_int' => 'Offset',
  'object_messageEntityUrl_param_length_type_int' => 'Length',
  'object_messageEntityEmail' => 'Message entity email',
  'object_messageEntityEmail_param_offset_type_int' => 'Offset',
  'object_messageEntityEmail_param_length_type_int' => 'Length',
  'object_messageEntityBold' => 'Message entity bold',
  'object_messageEntityBold_param_offset_type_int' => 'Offset',
  'object_messageEntityBold_param_length_type_int' => 'Length',
  'object_messageEntityItalic' => 'Message entity italic',
  'object_messageEntityItalic_param_offset_type_int' => 'Offset',
  'object_messageEntityItalic_param_length_type_int' => 'Length',
  'object_messageEntityCode' => 'Message entity code',
  'object_messageEntityCode_param_offset_type_int' => 'Offset',
  'object_messageEntityCode_param_length_type_int' => 'Length',
  'object_messageEntityPre' => 'Message entity pre',
  'object_messageEntityPre_param_offset_type_int' => 'Offset',
  'object_messageEntityPre_param_length_type_int' => 'Length',
  'object_messageEntityPre_param_language_type_string' => 'Language',
  'object_messageEntityTextUrl' => 'Message entity text URL',
  'object_messageEntityTextUrl_param_offset_type_int' => 'Offset',
  'object_messageEntityTextUrl_param_length_type_int' => 'Length',
  'object_messageEntityTextUrl_param_url_type_string' => 'URL',
  'object_messageEntityMentionName' => 'Message entity mention name',
  'object_messageEntityMentionName_param_offset_type_int' => 'Offset',
  'object_messageEntityMentionName_param_length_type_int' => 'Length',
  'object_messageEntityMentionName_param_user_id_type_int' => 'User ID',
  'object_inputMessageEntityMentionName' => 'Message entity mention name',
  'object_inputMessageEntityMentionName_param_offset_type_int' => 'Offset',
  'object_inputMessageEntityMentionName_param_length_type_int' => 'Length',
  'object_inputMessageEntityMentionName_param_user_id_type_InputUser' => 'User ID',
  'object_inputChannelEmpty' => 'Empty input channel',
  'object_inputChannel' => 'Channel',
  'object_inputChannel_param_channel_id_type_int' => 'Channel ID',
  'object_inputChannel_param_access_hash_type_long' => 'Access hash',
  'object_contacts.resolvedPeer' => 'Resolved peer',
  'object_contacts.resolvedPeer_param_peer_type_Peer' => 'Peer',
  'object_contacts.resolvedPeer_param_chats_type_Vector t' => 'Chats',
  'object_contacts.resolvedPeer_param_users_type_Vector t' => 'Users',
  'object_messageRange' => 'Message range',
  'object_messageRange_param_min_id_type_int' => 'Min ID',
  'object_messageRange_param_max_id_type_int' => 'Max ID',
  'object_updates.channelDifferenceEmpty' => 'Empty channel difference',
  'object_updates.channelDifferenceEmpty_param_final_type_true' => 'Final?',
  'object_updates.channelDifferenceEmpty_param_pts_type_int' => 'Pts',
  'object_updates.channelDifferenceEmpty_param_timeout_type_int' => 'Timeout',
  'object_updates.channelDifferenceTooLong' => 'Channel difference too long',
  'object_updates.channelDifferenceTooLong_param_final_type_true' => 'Final?',
  'object_updates.channelDifferenceTooLong_param_pts_type_int' => 'Pts',
  'object_updates.channelDifferenceTooLong_param_timeout_type_int' => 'Timeout',
  'object_updates.channelDifferenceTooLong_param_top_message_type_int' => 'Top message',
  'object_updates.channelDifferenceTooLong_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
  'object_updates.channelDifferenceTooLong_param_read_outbox_max_id_type_int' => 'Read outbox max ID',
  'object_updates.channelDifferenceTooLong_param_unread_count_type_int' => 'Unread count',
  'object_updates.channelDifferenceTooLong_param_unread_mentions_count_type_int' => 'Unread mentions count',
  'object_updates.channelDifferenceTooLong_param_messages_type_Vector t' => 'Messages',
  'object_updates.channelDifferenceTooLong_param_chats_type_Vector t' => 'Chats',
  'object_updates.channelDifferenceTooLong_param_users_type_Vector t' => 'Users',
  'object_updates.channelDifference' => 'Channel difference',
  'object_updates.channelDifference_param_final_type_true' => 'Final?',
  'object_updates.channelDifference_param_pts_type_int' => 'Pts',
  'object_updates.channelDifference_param_timeout_type_int' => 'Timeout',
  'object_updates.channelDifference_param_new_messages_type_Vector t' => 'New messages',
  'object_updates.channelDifference_param_other_updates_type_Vector t' => 'Other updates',
  'object_updates.channelDifference_param_chats_type_Vector t' => 'Chats',
  'object_updates.channelDifference_param_users_type_Vector t' => 'Users',
  'object_channelMessagesFilterEmpty' => 'Empty channel messages filter',
  'object_channelMessagesFilter' => 'Channel messages filter',
  'object_channelMessagesFilter_param_exclude_new_messages_type_true' => 'Exclude new messages?',
  'object_channelMessagesFilter_param_ranges_type_Vector t' => 'Ranges',
  'object_channelParticipant' => 'Channel participant',
  'object_channelParticipant_param_user_id_type_int' => 'User ID',
  'object_channelParticipant_param_date_type_int' => 'Date',
  'object_channelParticipantSelf' => 'Channel participant self',
  'object_channelParticipantSelf_param_user_id_type_int' => 'User ID',
  'object_channelParticipantSelf_param_inviter_id_type_int' => 'Inviter ID',
  'object_channelParticipantSelf_param_date_type_int' => 'Date',
  'object_channelParticipantCreator' => 'Channel participant creator',
  'object_channelParticipantCreator_param_user_id_type_int' => 'User ID',
  'object_channelParticipantAdmin' => 'Channel participant admin',
  'object_channelParticipantAdmin_param_can_edit_type_true' => 'Can edit?',
  'object_channelParticipantAdmin_param_user_id_type_int' => 'User ID',
  'object_channelParticipantAdmin_param_inviter_id_type_int' => 'Inviter ID',
  'object_channelParticipantAdmin_param_promoted_by_type_int' => 'Promoted by',
  'object_channelParticipantAdmin_param_date_type_int' => 'Date',
  'object_channelParticipantAdmin_param_admin_rights_type_ChannelAdminRights' => 'Admin rights',
  'object_channelParticipantBanned' => 'Channel participant banned',
  'object_channelParticipantBanned_param_left_type_true' => 'Left?',
  'object_channelParticipantBanned_param_user_id_type_int' => 'User ID',
  'object_channelParticipantBanned_param_kicked_by_type_int' => 'Kicked by',
  'object_channelParticipantBanned_param_date_type_int' => 'Date',
  'object_channelParticipantBanned_param_banned_rights_type_ChannelBannedRights' => 'Banned rights',
  'object_channelParticipantsRecent' => 'Channel participants recent',
  'object_channelParticipantsAdmins' => 'Channel participants admins',
  'object_channelParticipantsKicked' => 'Channel participants kicked',
  'object_channelParticipantsKicked_param_q_type_string' => 'Query',
  'object_channelParticipantsBots' => 'Channel participants bots',
  'object_channelParticipantsBanned' => 'Channel participants banned',
  'object_channelParticipantsBanned_param_q_type_string' => 'Query',
  'object_channelParticipantsSearch' => 'Channel participants search',
  'object_channelParticipantsSearch_param_q_type_string' => 'Query',
  'object_channels.channelParticipants' => 'Channel participants',
  'object_channels.channelParticipants_param_count_type_int' => 'Count',
  'object_channels.channelParticipants_param_participants_type_Vector t' => 'Participants',
  'object_channels.channelParticipants_param_users_type_Vector t' => 'Users',
  'object_channels.channelParticipantsNotModified' => 'Channel participants not modified',
  'object_channels.channelParticipant' => 'Channel participant',
  'object_channels.channelParticipant_param_participant_type_ChannelParticipant' => 'Participant',
  'object_channels.channelParticipant_param_users_type_Vector t' => 'Users',
  'object_help.termsOfService' => 'Terms of service',
  'object_help.termsOfService_param_text_type_string' => 'Text',
  'object_foundGif' => 'Found gif',
  'object_foundGif_param_url_type_string' => 'URL',
  'object_foundGif_param_thumb_url_type_string' => 'Thumbnail URL',
  'object_foundGif_param_content_url_type_string' => 'Content URL',
  'object_foundGif_param_content_type_type_string' => 'Content type',
  'object_foundGif_param_w_type_int' => 'Width',
  'object_foundGif_param_h_type_int' => 'Height',
  'object_foundGifCached' => 'Found gif cached',
  'object_foundGifCached_param_url_type_string' => 'URL',
  'object_foundGifCached_param_photo_type_Photo' => 'Photo',
  'object_foundGifCached_param_document_type_Document' => 'Document',
  'object_messages.foundGifs' => 'Found gifs',
  'object_messages.foundGifs_param_next_offset_type_int' => 'Next offset',
  'object_messages.foundGifs_param_results_type_Vector t' => 'Results',
  'object_messages.savedGifsNotModified' => 'Saved gifs not modified',
  'object_messages.savedGifs' => 'Saved gifs',
  'object_messages.savedGifs_param_hash_type_int' => 'Hash',
  'object_messages.savedGifs_param_gifs_type_Vector t' => 'Gifs',
  'object_inputBotInlineMessageMediaAuto' => 'Bot inline message media auto',
  'object_inputBotInlineMessageMediaAuto_param_message_type_string' => 'Message',
  'object_inputBotInlineMessageMediaAuto_param_entities_type_Vector t' => 'Entities',
  'object_inputBotInlineMessageMediaAuto_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_inputBotInlineMessageText' => 'Bot inline message text',
  'object_inputBotInlineMessageText_param_no_webpage_type_true' => 'No webpage?',
  'object_inputBotInlineMessageText_param_message_type_string' => 'Message',
  'object_inputBotInlineMessageText_param_entities_type_Vector t' => 'Entities',
  'object_inputBotInlineMessageText_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_inputBotInlineMessageMediaGeo' => 'Bot inline message media geo',
  'object_inputBotInlineMessageMediaGeo_param_geo_point_type_InputGeoPoint' => 'Geo point',
  'object_inputBotInlineMessageMediaGeo_param_period_type_int' => 'Period',
  'object_inputBotInlineMessageMediaGeo_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_inputBotInlineMessageMediaVenue' => 'Bot inline message media venue',
  'object_inputBotInlineMessageMediaVenue_param_geo_point_type_InputGeoPoint' => 'Geo point',
  'object_inputBotInlineMessageMediaVenue_param_title_type_string' => 'Title',
  'object_inputBotInlineMessageMediaVenue_param_address_type_string' => 'Address',
  'object_inputBotInlineMessageMediaVenue_param_provider_type_string' => 'Provider',
  'object_inputBotInlineMessageMediaVenue_param_venue_id_type_string' => 'Venue ID',
  'object_inputBotInlineMessageMediaVenue_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_inputBotInlineMessageMediaContact' => 'Bot inline message media contact',
  'object_inputBotInlineMessageMediaContact_param_phone_number_type_string' => 'Phone number',
  'object_inputBotInlineMessageMediaContact_param_first_name_type_string' => 'First name',
  'object_inputBotInlineMessageMediaContact_param_last_name_type_string' => 'Last name',
  'object_inputBotInlineMessageMediaContact_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_inputBotInlineMessageGame' => 'Bot inline message game',
  'object_inputBotInlineMessageGame_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_inputBotInlineResult' => 'Bot inline result',
  'object_inputBotInlineResult_param_id_type_string' => 'ID',
  'object_inputBotInlineResult_param_type_type_string' => 'Type',
  'object_inputBotInlineResult_param_title_type_string' => 'Title',
  'object_inputBotInlineResult_param_description_type_string' => 'Description',
  'object_inputBotInlineResult_param_url_type_string' => 'URL',
  'object_inputBotInlineResult_param_thumb_url_type_string' => 'Thumbnail URL',
  'object_inputBotInlineResult_param_content_url_type_string' => 'Content URL',
  'object_inputBotInlineResult_param_content_type_type_string' => 'Content type',
  'object_inputBotInlineResult_param_w_type_int' => 'Width',
  'object_inputBotInlineResult_param_h_type_int' => 'Height',
  'object_inputBotInlineResult_param_duration_type_int' => 'Duration',
  'object_inputBotInlineResult_param_send_message_type_InputBotInlineMessage' => 'Message to send',
  'object_inputBotInlineResultPhoto' => 'Bot inline result photo',
  'object_inputBotInlineResultPhoto_param_id_type_string' => 'ID',
  'object_inputBotInlineResultPhoto_param_type_type_string' => 'Type',
  'object_inputBotInlineResultPhoto_param_photo_type_InputPhoto' => 'Photo',
  'object_inputBotInlineResultPhoto_param_send_message_type_InputBotInlineMessage' => 'Message to send',
  'object_inputBotInlineResultDocument' => 'Bot inline result document',
  'object_inputBotInlineResultDocument_param_id_type_string' => 'ID',
  'object_inputBotInlineResultDocument_param_type_type_string' => 'Type',
  'object_inputBotInlineResultDocument_param_title_type_string' => 'Title',
  'object_inputBotInlineResultDocument_param_description_type_string' => 'Description',
  'object_inputBotInlineResultDocument_param_document_type_InputDocument' => 'Document',
  'object_inputBotInlineResultDocument_param_send_message_type_InputBotInlineMessage' => 'Message to send',
  'object_inputBotInlineResultGame' => 'Bot inline result game',
  'object_inputBotInlineResultGame_param_id_type_string' => 'ID',
  'object_inputBotInlineResultGame_param_short_name_type_string' => 'Short name',
  'object_inputBotInlineResultGame_param_send_message_type_InputBotInlineMessage' => 'Message to send',
  'object_botInlineMessageMediaAuto' => 'Bot inline message media auto',
  'object_botInlineMessageMediaAuto_param_message_type_string' => 'Message',
  'object_botInlineMessageMediaAuto_param_entities_type_Vector t' => 'Entities',
  'object_botInlineMessageMediaAuto_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_botInlineMessageText' => 'Bot inline message text',
  'object_botInlineMessageText_param_no_webpage_type_true' => 'No webpage?',
  'object_botInlineMessageText_param_message_type_string' => 'Message',
  'object_botInlineMessageText_param_entities_type_Vector t' => 'Entities',
  'object_botInlineMessageText_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_botInlineMessageMediaGeo' => 'Bot inline message media geo',
  'object_botInlineMessageMediaGeo_param_geo_type_GeoPoint' => 'Geo',
  'object_botInlineMessageMediaGeo_param_period_type_int' => 'Period',
  'object_botInlineMessageMediaGeo_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_botInlineMessageMediaVenue' => 'Bot inline message media venue',
  'object_botInlineMessageMediaVenue_param_geo_type_GeoPoint' => 'Geo',
  'object_botInlineMessageMediaVenue_param_title_type_string' => 'Title',
  'object_botInlineMessageMediaVenue_param_address_type_string' => 'Address',
  'object_botInlineMessageMediaVenue_param_provider_type_string' => 'Provider',
  'object_botInlineMessageMediaVenue_param_venue_id_type_string' => 'Venue ID',
  'object_botInlineMessageMediaVenue_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_botInlineMessageMediaContact' => 'Bot inline message media contact',
  'object_botInlineMessageMediaContact_param_phone_number_type_string' => 'Phone number',
  'object_botInlineMessageMediaContact_param_first_name_type_string' => 'First name',
  'object_botInlineMessageMediaContact_param_last_name_type_string' => 'Last name',
  'object_botInlineMessageMediaContact_param_reply_markup_type_ReplyMarkup' => 'Reply markup',
  'object_botInlineResult' => 'Bot inline result',
  'object_botInlineResult_param_id_type_string' => 'ID',
  'object_botInlineResult_param_type_type_string' => 'Type',
  'object_botInlineResult_param_title_type_string' => 'Title',
  'object_botInlineResult_param_description_type_string' => 'Description',
  'object_botInlineResult_param_url_type_string' => 'URL',
  'object_botInlineResult_param_thumb_url_type_string' => 'Thumbnail URL',
  'object_botInlineResult_param_content_url_type_string' => 'Content URL',
  'object_botInlineResult_param_content_type_type_string' => 'Content type',
  'object_botInlineResult_param_w_type_int' => 'Width',
  'object_botInlineResult_param_h_type_int' => 'Height',
  'object_botInlineResult_param_duration_type_int' => 'Duration',
  'object_botInlineResult_param_send_message_type_BotInlineMessage' => 'Message to send',
  'object_botInlineMediaResult' => 'Bot inline media result',
  'object_botInlineMediaResult_param_id_type_string' => 'ID',
  'object_botInlineMediaResult_param_type_type_string' => 'Type',
  'object_botInlineMediaResult_param_photo_type_Photo' => 'Photo',
  'object_botInlineMediaResult_param_document_type_Document' => 'Document',
  'object_botInlineMediaResult_param_title_type_string' => 'Title',
  'object_botInlineMediaResult_param_description_type_string' => 'Description',
  'object_botInlineMediaResult_param_send_message_type_BotInlineMessage' => 'Send message',
  'object_messages.botResults' => 'Bot results',
  'object_messages.botResults_param_gallery_type_true' => 'Gallery?',
  'object_messages.botResults_param_query_id_type_long' => 'Query ID',
  'object_messages.botResults_param_next_offset_type_string' => 'Next offset',
  'object_messages.botResults_param_switch_pm_type_InlineBotSwitchPM' => 'Switch pm',
  'object_messages.botResults_param_results_type_Vector t' => 'Results',
  'object_messages.botResults_param_cache_time_type_int' => 'Cache time',
  'object_messages.botResults_param_users_type_Vector t' => 'Users',
  'object_exportedMessageLink' => 'Exported message link',
  'object_exportedMessageLink_param_link_type_string' => 'Link',
  'object_exportedMessageLink_param_html_type_string' => 'Html',
  'object_messageFwdHeader' => 'Forwarded message info',
  'object_messageFwdHeader_param_from_id_type_int' => 'From ID',
  'object_messageFwdHeader_param_date_type_int' => 'Date',
  'object_messageFwdHeader_param_channel_id_type_int' => 'Channel ID',
  'object_messageFwdHeader_param_channel_post_type_int' => 'Channel post',
  'object_messageFwdHeader_param_post_author_type_string' => 'Post author',
  'object_messageFwdHeader_param_saved_from_peer_type_Peer' => 'Saved from peer',
  'object_messageFwdHeader_param_saved_from_msg_id_type_int' => 'Saved from msg ID',
  'object_auth.codeTypeSms' => 'Auth code type: SMS',
  'object_auth.codeTypeCall' => 'Auth code type: call',
  'object_auth.codeTypeFlashCall' => 'Auth code type: flash call',
  'object_auth.sentCodeTypeApp' => 'Sent code type app',
  'object_auth.sentCodeTypeApp_param_length_type_int' => 'Length',
  'object_auth.sentCodeTypeSms' => 'Sent code type sms',
  'object_auth.sentCodeTypeSms_param_length_type_int' => 'Length',
  'object_auth.sentCodeTypeCall' => 'Sent code type call',
  'object_auth.sentCodeTypeCall_param_length_type_int' => 'Length',
  'object_auth.sentCodeTypeFlashCall' => 'Sent code type flash call',
  'object_auth.sentCodeTypeFlashCall_param_pattern_type_string' => 'Pattern',
  'object_messages.botCallbackAnswer' => 'Bot callback answer',
  'object_messages.botCallbackAnswer_param_alert_type_true' => 'Alert?',
  'object_messages.botCallbackAnswer_param_has_url_type_true' => 'Has URL?',
  'object_messages.botCallbackAnswer_param_native_ui_type_true' => 'Native ui?',
  'object_messages.botCallbackAnswer_param_message_type_string' => 'Message',
  'object_messages.botCallbackAnswer_param_url_type_string' => 'URL',
  'object_messages.botCallbackAnswer_param_cache_time_type_int' => 'Cache time',
  'object_messages.messageEditData' => 'Message edit data',
  'object_messages.messageEditData_param_caption_type_true' => 'Caption?',
  'object_inputBotInlineMessageID' => 'Bot inline message ID',
  'object_inputBotInlineMessageID_param_dc_id_type_int' => 'DC ID',
  'object_inputBotInlineMessageID_param_id_type_long' => 'ID',
  'object_inputBotInlineMessageID_param_access_hash_type_long' => 'Access hash',
  'object_inlineBotSwitchPM' => 'Inline bot switch pm',
  'object_inlineBotSwitchPM_param_text_type_string' => 'Text',
  'object_inlineBotSwitchPM_param_start_param_type_string' => 'Start param',
  'object_messages.peerDialogs' => 'Peer dialogs',
  'object_messages.peerDialogs_param_dialogs_type_Vector t' => 'Dialogs',
  'object_messages.peerDialogs_param_messages_type_Vector t' => 'Messages',
  'object_messages.peerDialogs_param_chats_type_Vector t' => 'Chats',
  'object_messages.peerDialogs_param_users_type_Vector t' => 'Users',
  'object_messages.peerDialogs_param_state_type_updates.State' => 'State',
  'object_topPeer' => 'Top peer',
  'object_topPeer_param_peer_type_Peer' => 'Peer',
  'object_topPeer_param_rating_type_double' => 'Rating',
  'object_topPeerCategoryBotsPM' => 'Top peer category bots pm',
  'object_topPeerCategoryBotsInline' => 'Top peer category bots inline',
  'object_topPeerCategoryCorrespondents' => 'Top peer category correspondents',
  'object_topPeerCategoryGroups' => 'Top peer category groups',
  'object_topPeerCategoryChannels' => 'Top peer category channels',
  'object_topPeerCategoryPhoneCalls' => 'Top peer category phone calls',
  'object_topPeerCategoryPeers' => 'Top peer category peers',
  'object_topPeerCategoryPeers_param_category_type_TopPeerCategory' => 'Category',
  'object_topPeerCategoryPeers_param_count_type_int' => 'Count',
  'object_topPeerCategoryPeers_param_peers_type_Vector t' => 'Peers',
  'object_contacts.topPeersNotModified' => 'Top peers not modified',
  'object_contacts.topPeers' => 'Top peers',
  'object_contacts.topPeers_param_categories_type_Vector t' => 'Categories',
  'object_contacts.topPeers_param_chats_type_Vector t' => 'Chats',
  'object_contacts.topPeers_param_users_type_Vector t' => 'Users',
  'object_draftMessageEmpty' => 'Empty draft message',
  'object_draftMessage' => 'Draft message',
  'object_draftMessage_param_no_webpage_type_true' => 'No webpage?',
  'object_draftMessage_param_reply_to_msg_id_type_int' => 'Reply to msg ID',
  'object_draftMessage_param_message_type_string' => 'Message',
  'object_draftMessage_param_entities_type_Vector t' => 'Entities',
  'object_draftMessage_param_date_type_int' => 'Date',
  'object_messages.featuredStickersNotModified' => 'Featured stickers not modified',
  'object_messages.featuredStickers' => 'Featured stickers',
  'object_messages.featuredStickers_param_hash_type_int' => 'Hash',
  'object_messages.featuredStickers_param_sets_type_Vector t' => 'Sets',
  'object_messages.featuredStickers_param_unread_type_Vector t' => 'Unread',
  'object_messages.recentStickersNotModified' => 'Recent stickers not modified',
  'object_messages.recentStickers' => 'Recent stickers',
  'object_messages.recentStickers_param_hash_type_int' => 'Hash',
  'object_messages.recentStickers_param_stickers_type_Vector t' => 'Stickers',
  'object_messages.archivedStickers' => 'Archived stickers',
  'object_messages.archivedStickers_param_count_type_int' => 'Count',
  'object_messages.archivedStickers_param_sets_type_Vector t' => 'Sets',
  'object_messages.stickerSetInstallResultSuccess' => 'Sticker set install result success',
  'object_messages.stickerSetInstallResultArchive' => 'Sticker set install result archive',
  'object_messages.stickerSetInstallResultArchive_param_sets_type_Vector t' => 'Sets',
  'object_stickerSetCovered' => 'Sticker set covered',
  'object_stickerSetCovered_param_set_type_StickerSet' => 'Set',
  'object_stickerSetCovered_param_cover_type_Document' => 'Cover',
  'object_stickerSetMultiCovered' => 'Sticker set multi covered',
  'object_stickerSetMultiCovered_param_set_type_StickerSet' => 'Set',
  'object_stickerSetMultiCovered_param_covers_type_Vector t' => 'Covers',
  'object_maskCoords' => 'Mask coords',
  'object_maskCoords_param_n_type_int' => 'N',
  'object_maskCoords_param_x_type_double' => 'X',
  'object_maskCoords_param_y_type_double' => 'Y',
  'object_maskCoords_param_zoom_type_double' => 'Zoom',
  'object_inputStickeredMediaPhoto' => 'Stickered media photo',
  'object_inputStickeredMediaPhoto_param_id_type_InputPhoto' => 'ID',
  'object_inputStickeredMediaDocument' => 'Stickered media document',
  'object_inputStickeredMediaDocument_param_id_type_InputDocument' => 'ID',
  'object_game' => 'Game',
  'object_game_param_id_type_long' => 'ID',
  'object_game_param_access_hash_type_long' => 'Access hash',
  'object_game_param_short_name_type_string' => 'Short name',
  'object_game_param_title_type_string' => 'Title',
  'object_game_param_description_type_string' => 'Description',
  'object_game_param_photo_type_Photo' => 'Photo',
  'object_game_param_document_type_Document' => 'Document',
  'object_inputGameID' => 'Game ID',
  'object_inputGameID_param_id_type_long' => 'ID',
  'object_inputGameID_param_access_hash_type_long' => 'Access hash',
  'object_inputGameShortName' => 'Game short name',
  'object_inputGameShortName_param_bot_id_type_InputUser' => 'Bot ID',
  'object_inputGameShortName_param_short_name_type_string' => 'Short name',
  'object_highScore' => 'High score',
  'object_highScore_param_pos_type_int' => 'Pos',
  'object_highScore_param_user_id_type_int' => 'User ID',
  'object_highScore_param_score_type_int' => 'Score',
  'object_messages.highScores' => 'High scores',
  'object_messages.highScores_param_scores_type_Vector t' => 'Scores',
  'object_messages.highScores_param_users_type_Vector t' => 'Users',
  'object_textEmpty' => 'Empty text',
  'object_textPlain' => 'Text plain',
  'object_textPlain_param_text_type_string' => 'Text',
  'object_textBold' => 'Text bold',
  'object_textBold_param_text_type_RichText' => 'Text',
  'object_textItalic' => 'Text italic',
  'object_textItalic_param_text_type_RichText' => 'Text',
  'object_textUnderline' => 'Text underline',
  'object_textUnderline_param_text_type_RichText' => 'Text',
  'object_textStrike' => 'Text strike',
  'object_textStrike_param_text_type_RichText' => 'Text',
  'object_textFixed' => 'Text fixed',
  'object_textFixed_param_text_type_RichText' => 'Text',
  'object_textUrl' => 'Text URL',
  'object_textUrl_param_text_type_RichText' => 'Text',
  'object_textUrl_param_url_type_string' => 'URL',
  'object_textUrl_param_webpage_id_type_long' => 'Webpage ID',
  'object_textEmail' => 'Text email',
  'object_textEmail_param_text_type_RichText' => 'Text',
  'object_textEmail_param_email_type_string' => 'Email',
  'object_textConcat' => 'Text concat',
  'object_textConcat_param_texts_type_Vector t' => 'Texts',
  'object_pageBlockUnsupported' => 'Page block unsupported',
  'object_pageBlockTitle' => 'Page block title',
  'object_pageBlockTitle_param_text_type_RichText' => 'Text',
  'object_pageBlockSubtitle' => 'Page block subtitle',
  'object_pageBlockSubtitle_param_text_type_RichText' => 'Text',
  'object_pageBlockAuthorDate' => 'Page block author date',
  'object_pageBlockAuthorDate_param_author_type_RichText' => 'Author',
  'object_pageBlockAuthorDate_param_published_date_type_int' => 'Published date',
  'object_pageBlockHeader' => 'Page block header',
  'object_pageBlockHeader_param_text_type_RichText' => 'Text',
  'object_pageBlockSubheader' => 'Page block subheader',
  'object_pageBlockSubheader_param_text_type_RichText' => 'Text',
  'object_pageBlockFooter' => 'Page block footer',
  'object_pageBlockFooter_param_text_type_RichText' => 'Text',
  'object_pageBlockList' => 'Page block list',
  'object_pageBlockList_param_ordered_type_Bool' => 'Ordered?',
  'object_pageBlockList_param_items_type_Vector t' => 'Items',
  'object_pageBlockBlockquote' => 'Page block blockquote',
  'object_pageBlockBlockquote_param_text_type_RichText' => 'Text',
  'object_pageBlockBlockquote_param_caption_type_RichText' => 'Caption',
  'object_pageBlockPullquote' => 'Page block pullquote',
  'object_pageBlockPullquote_param_text_type_RichText' => 'Text',
  'object_pageBlockPullquote_param_caption_type_RichText' => 'Caption',
  'object_pageBlockPhoto' => 'Page block photo',
  'object_pageBlockPhoto_param_photo_id_type_long' => 'Photo ID',
  'object_pageBlockPhoto_param_caption_type_RichText' => 'Caption',
  'object_pageBlockVideo' => 'Page block video',
  'object_pageBlockVideo_param_autoplay_type_true' => 'Autoplay?',
  'object_pageBlockVideo_param_loop_type_true' => 'Loop?',
  'object_pageBlockVideo_param_video_id_type_long' => 'Video ID',
  'object_pageBlockVideo_param_caption_type_RichText' => 'Caption',
  'object_pageBlockEmbed' => 'Page block embed',
  'object_pageBlockEmbed_param_full_width_type_true' => 'Full width?',
  'object_pageBlockEmbed_param_allow_scrolling_type_true' => 'Allow scrolling?',
  'object_pageBlockEmbed_param_url_type_string' => 'URL',
  'object_pageBlockEmbed_param_html_type_string' => 'Html',
  'object_pageBlockEmbed_param_poster_photo_id_type_long' => 'Poster photo ID',
  'object_pageBlockEmbed_param_w_type_int' => 'Width',
  'object_pageBlockEmbed_param_h_type_int' => 'Height',
  'object_pageBlockEmbed_param_caption_type_RichText' => 'Caption',
  'object_pageBlockEmbedPost' => 'Page block embed post',
  'object_pageBlockEmbedPost_param_url_type_string' => 'URL',
  'object_pageBlockEmbedPost_param_webpage_id_type_long' => 'Webpage ID',
  'object_pageBlockEmbedPost_param_author_photo_id_type_long' => 'Author photo ID',
  'object_pageBlockEmbedPost_param_author_type_string' => 'Author',
  'object_pageBlockEmbedPost_param_date_type_int' => 'Date',
  'object_pageBlockEmbedPost_param_blocks_type_Vector t' => 'Blocks',
  'object_pageBlockEmbedPost_param_caption_type_RichText' => 'Caption',
  'object_pageBlockCollage' => 'Page block collage',
  'object_pageBlockCollage_param_items_type_Vector t' => 'Items',
  'object_pageBlockCollage_param_caption_type_RichText' => 'Caption',
  'object_pageBlockSlideshow' => 'Page block slideshow',
  'object_pageBlockSlideshow_param_items_type_Vector t' => 'Items',
  'object_pageBlockSlideshow_param_caption_type_RichText' => 'Caption',
  'object_pageBlockChannel' => 'Page block channel',
  'object_pageBlockChannel_param_channel_type_Chat' => 'Channel',
  'object_pageBlockAudio' => 'Page block audio',
  'object_pageBlockAudio_param_audio_id_type_long' => 'Audio ID',
  'object_pageBlockAudio_param_caption_type_RichText' => 'Caption',
  'object_pagePart' => 'Page part',
  'object_pagePart_param_blocks_type_Vector t' => 'Blocks',
  'object_pagePart_param_photos_type_Vector t' => 'Photos',
  'object_pagePart_param_documents_type_Vector t' => 'Documents',
  'object_pageFull' => 'Page full',
  'object_pageFull_param_blocks_type_Vector t' => 'Blocks',
  'object_pageFull_param_photos_type_Vector t' => 'Photos',
  'object_pageFull_param_documents_type_Vector t' => 'Documents',
  'object_phoneCallDiscardReasonMissed' => 'Phone call discard reason missed',
  'object_phoneCallDiscardReasonDisconnect' => 'Phone call discard reason disconnect',
  'object_phoneCallDiscardReasonHangup' => 'Phone call discard reason hangup',
  'object_phoneCallDiscardReasonBusy' => 'Phone call discard reason busy',
  'object_dataJSON' => 'Data json',
  'object_dataJSON_param_data_type_string' => 'Data',
  'object_labeledPrice' => 'Labeled price',
  'object_labeledPrice_param_label_type_string' => 'Label',
  'object_labeledPrice_param_amount_type_long' => 'Amount',
  'object_invoice' => 'Invoice',
  'object_invoice_param_test_type_true' => 'Test?',
  'object_invoice_param_name_requested_type_true' => 'Name requested?',
  'object_invoice_param_phone_requested_type_true' => 'Phone requested?',
  'object_invoice_param_email_requested_type_true' => 'Email requested?',
  'object_invoice_param_shipping_address_requested_type_true' => 'Shipping address requested?',
  'object_invoice_param_flexible_type_true' => 'Flexible?',
  'object_invoice_param_phone_to_provider_type_true' => 'Phone to provider?',
  'object_invoice_param_email_to_provider_type_true' => 'Email to provider?',
  'object_invoice_param_currency_type_string' => 'Currency',
  'object_invoice_param_prices_type_Vector t' => 'Prices',
  'object_paymentCharge' => 'Payment charge',
  'object_paymentCharge_param_id_type_string' => 'ID',
  'object_paymentCharge_param_provider_charge_id_type_string' => 'Provider charge ID',
  'object_postAddress' => 'Post address',
  'object_postAddress_param_street_line1_type_string' => 'Street line1',
  'object_postAddress_param_street_line2_type_string' => 'Street line2',
  'object_postAddress_param_city_type_string' => 'City',
  'object_postAddress_param_state_type_string' => 'State',
  'object_postAddress_param_country_iso2_type_string' => 'Country iso2',
  'object_postAddress_param_post_code_type_string' => 'Post code',
  'object_paymentRequestedInfo' => 'Payment requested info',
  'object_paymentRequestedInfo_param_name_type_string' => 'Name',
  'object_paymentRequestedInfo_param_phone_type_string' => 'Phone',
  'object_paymentRequestedInfo_param_email_type_string' => 'Email',
  'object_paymentRequestedInfo_param_shipping_address_type_PostAddress' => 'Shipping address',
  'object_paymentSavedCredentialsCard' => 'Payment saved credentials card',
  'object_paymentSavedCredentialsCard_param_id_type_string' => 'ID',
  'object_paymentSavedCredentialsCard_param_title_type_string' => 'Title',
  'object_webDocument' => 'Web document',
  'object_webDocument_param_url_type_string' => 'URL',
  'object_webDocument_param_access_hash_type_long' => 'Access hash',
  'object_webDocument_param_size_type_int' => 'Size',
  'object_webDocument_param_mime_type_type_string' => 'Mime type',
  'object_webDocument_param_attributes_type_Vector t' => 'Attributes',
  'object_webDocument_param_dc_id_type_int' => 'DC ID',
  'object_inputWebDocument' => 'Web document',
  'object_inputWebDocument_param_url_type_string' => 'URL',
  'object_inputWebDocument_param_size_type_int' => 'Size',
  'object_inputWebDocument_param_mime_type_type_string' => 'Mime type',
  'object_inputWebDocument_param_attributes_type_Vector t' => 'Attributes',
  'object_inputWebFileLocation' => 'Web file location',
  'object_inputWebFileLocation_param_url_type_string' => 'URL',
  'object_inputWebFileLocation_param_access_hash_type_long' => 'Access hash',
  'object_upload.webFile' => 'Web file',
  'object_upload.webFile_param_size_type_int' => 'Size',
  'object_upload.webFile_param_mime_type_type_string' => 'Mime type',
  'object_upload.webFile_param_file_type_type_storage.FileType' => 'File type',
  'object_upload.webFile_param_mtime_type_int' => 'Mtime',
  'object_upload.webFile_param_bytes_type_bytes' => 'Bytes',
  'object_payments.paymentForm' => 'Payment form',
  'object_payments.paymentForm_param_can_save_credentials_type_true' => 'Can save credentials?',
  'object_payments.paymentForm_param_password_missing_type_true' => 'Password missing?',
  'object_payments.paymentForm_param_bot_id_type_int' => 'Bot ID',
  'object_payments.paymentForm_param_invoice_type_Invoice' => 'Invoice',
  'object_payments.paymentForm_param_provider_id_type_int' => 'Provider ID',
  'object_payments.paymentForm_param_url_type_string' => 'URL',
  'object_payments.paymentForm_param_native_provider_type_string' => 'Native provider',
  'object_payments.paymentForm_param_native_params_type_DataJSON' => 'Native params',
  'object_payments.paymentForm_param_saved_info_type_PaymentRequestedInfo' => 'Saved info',
  'object_payments.paymentForm_param_saved_credentials_type_PaymentSavedCredentials' => 'Saved credentials',
  'object_payments.paymentForm_param_users_type_Vector t' => 'Users',
  'object_payments.validatedRequestedInfo' => 'Validated requested info',
  'object_payments.validatedRequestedInfo_param_id_type_string' => 'ID',
  'object_payments.validatedRequestedInfo_param_shipping_options_type_Vector t' => 'Shipping options',
  'object_payments.paymentResult' => 'Payment result',
  'object_payments.paymentResult_param_updates_type_Updates' => 'Updates',
  'object_payments.paymentVerficationNeeded' => 'Payment verfication needed',
  'object_payments.paymentVerficationNeeded_param_url_type_string' => 'URL',
  'object_payments.paymentReceipt' => 'Payment receipt',
  'object_payments.paymentReceipt_param_date_type_int' => 'Date',
  'object_payments.paymentReceipt_param_bot_id_type_int' => 'Bot ID',
  'object_payments.paymentReceipt_param_invoice_type_Invoice' => 'Invoice',
  'object_payments.paymentReceipt_param_provider_id_type_int' => 'Provider ID',
  'object_payments.paymentReceipt_param_info_type_PaymentRequestedInfo' => 'Info',
  'object_payments.paymentReceipt_param_shipping_type_ShippingOption' => 'Shipping',
  'object_payments.paymentReceipt_param_currency_type_string' => 'Currency',
  'object_payments.paymentReceipt_param_total_amount_type_long' => 'Total amount',
  'object_payments.paymentReceipt_param_credentials_title_type_string' => 'Credentials title',
  'object_payments.paymentReceipt_param_users_type_Vector t' => 'Users',
  'object_payments.savedInfo' => 'Saved info',
  'object_payments.savedInfo_param_has_saved_credentials_type_true' => 'Has saved credentials?',
  'object_payments.savedInfo_param_saved_info_type_PaymentRequestedInfo' => 'Saved info',
  'object_inputPaymentCredentialsSaved' => 'Payment credentials saved',
  'object_inputPaymentCredentialsSaved_param_id_type_string' => 'ID',
  'object_inputPaymentCredentialsSaved_param_tmp_password_type_bytes' => 'Tmp password',
  'object_inputPaymentCredentials' => 'Payment credentials',
  'object_inputPaymentCredentials_param_save_type_true' => 'Save?',
  'object_inputPaymentCredentials_param_data_type_DataJSON' => 'Data',
  'object_inputPaymentCredentialsApplePay' => 'Payment credentials apple pay',
  'object_inputPaymentCredentialsApplePay_param_payment_data_type_DataJSON' => 'Payment data',
  'object_inputPaymentCredentialsAndroidPay' => 'Payment credentials android pay',
  'object_inputPaymentCredentialsAndroidPay_param_payment_token_type_DataJSON' => 'Payment token',
  'object_inputPaymentCredentialsAndroidPay_param_google_transaction_id_type_string' => 'Google transaction ID',
  'object_account.tmpPassword' => 'Tmp password',
  'object_account.tmpPassword_param_tmp_password_type_bytes' => 'Tmp password',
  'object_account.tmpPassword_param_valid_until_type_int' => 'Valid until',
  'object_shippingOption' => 'Shipping option',
  'object_shippingOption_param_id_type_string' => 'ID',
  'object_shippingOption_param_title_type_string' => 'Title',
  'object_shippingOption_param_prices_type_Vector t' => 'Prices',
  'object_inputStickerSetItem' => 'Sticker set item',
  'object_inputStickerSetItem_param_document_type_InputDocument' => 'Document',
  'object_inputStickerSetItem_param_emoji_type_string' => 'Emoji',
  'object_inputStickerSetItem_param_mask_coords_type_MaskCoords' => 'Mask coords',
  'object_inputPhoneCall' => 'Phone call',
  'object_inputPhoneCall_param_id_type_long' => 'ID',
  'object_inputPhoneCall_param_access_hash_type_long' => 'Access hash',
  'object_phoneCallEmpty' => 'Empty phone call',
  'object_phoneCallEmpty_param_id_type_long' => 'ID',
  'object_phoneCallWaiting' => 'Phone call waiting',
  'object_phoneCallWaiting_param_id_type_long' => 'ID',
  'object_phoneCallWaiting_param_access_hash_type_long' => 'Access hash',
  'object_phoneCallWaiting_param_date_type_int' => 'Date',
  'object_phoneCallWaiting_param_admin_id_type_int' => 'Admin ID',
  'object_phoneCallWaiting_param_participant_id_type_int' => 'Participant ID',
  'object_phoneCallWaiting_param_protocol_type_PhoneCallProtocol' => 'Protocol',
  'object_phoneCallWaiting_param_receive_date_type_int' => 'Receive date',
  'object_phoneCallRequested' => 'Phone call requested',
  'object_phoneCallRequested_param_id_type_long' => 'ID',
  'object_phoneCallRequested_param_access_hash_type_long' => 'Access hash',
  'object_phoneCallRequested_param_date_type_int' => 'Date',
  'object_phoneCallRequested_param_admin_id_type_int' => 'Admin ID',
  'object_phoneCallRequested_param_participant_id_type_int' => 'Participant ID',
  'object_phoneCallRequested_param_g_a_hash_type_bytes' => 'G a hash',
  'object_phoneCallRequested_param_protocol_type_PhoneCallProtocol' => 'Protocol',
  'object_phoneCallAccepted' => 'Phone call accepted',
  'object_phoneCallAccepted_param_id_type_long' => 'ID',
  'object_phoneCallAccepted_param_access_hash_type_long' => 'Access hash',
  'object_phoneCallAccepted_param_date_type_int' => 'Date',
  'object_phoneCallAccepted_param_admin_id_type_int' => 'Admin ID',
  'object_phoneCallAccepted_param_participant_id_type_int' => 'Participant ID',
  'object_phoneCallAccepted_param_g_b_type_bytes' => 'G b',
  'object_phoneCallAccepted_param_protocol_type_PhoneCallProtocol' => 'Protocol',
  'object_phoneCall' => 'Phone call',
  'object_phoneCall_param_id_type_long' => 'ID',
  'object_phoneCall_param_access_hash_type_long' => 'Access hash',
  'object_phoneCall_param_date_type_int' => 'Date',
  'object_phoneCall_param_admin_id_type_int' => 'Admin ID',
  'object_phoneCall_param_participant_id_type_int' => 'Participant ID',
  'object_phoneCall_param_g_a_or_b_type_bytes' => 'G a or b',
  'object_phoneCall_param_key_fingerprint_type_long' => 'Key fingerprint',
  'object_phoneCall_param_protocol_type_PhoneCallProtocol' => 'Protocol',
  'object_phoneCall_param_connection_type_PhoneConnection' => 'Connection',
  'object_phoneCall_param_alternative_connections_type_Vector t' => 'Alternative connections',
  'object_phoneCall_param_start_date_type_int' => 'Start date',
  'object_phoneCallDiscarded' => 'Phone call discarded',
  'object_phoneCallDiscarded_param_need_rating_type_true' => 'Need rating?',
  'object_phoneCallDiscarded_param_need_debug_type_true' => 'Need debug?',
  'object_phoneCallDiscarded_param_id_type_long' => 'ID',
  'object_phoneCallDiscarded_param_reason_type_PhoneCallDiscardReason' => 'Reason',
  'object_phoneCallDiscarded_param_duration_type_int' => 'Duration',
  'object_phoneConnection' => 'Phone connection',
  'object_phoneConnection_param_id_type_long' => 'ID',
  'object_phoneConnection_param_ip_type_string' => 'Ip',
  'object_phoneConnection_param_ipv6_type_string' => 'Ipv6',
  'object_phoneConnection_param_port_type_int' => 'Port',
  'object_phoneConnection_param_peer_tag_type_bytes' => 'Peer tag',
  'object_phoneCallProtocol' => 'Phone call protocol',
  'object_phoneCallProtocol_param_udp_p2p_type_true' => 'Udp p2p?',
  'object_phoneCallProtocol_param_udp_reflector_type_true' => 'Udp reflector?',
  'object_phoneCallProtocol_param_min_layer_type_int' => 'Min layer',
  'object_phoneCallProtocol_param_max_layer_type_int' => 'Max layer',
  'object_phone.phoneCall' => 'Phone call',
  'object_phone.phoneCall_param_phone_call_type_PhoneCall' => 'Phone call',
  'object_phone.phoneCall_param_users_type_Vector t' => 'Users',
  'object_upload.cdnFileReuploadNeeded' => 'Cdn file reupload needed',
  'object_upload.cdnFileReuploadNeeded_param_request_token_type_bytes' => 'Request token',
  'object_upload.cdnFile' => 'Cdn file',
  'object_upload.cdnFile_param_bytes_type_bytes' => 'Bytes',
  'object_cdnPublicKey' => 'Cdn public key',
  'object_cdnPublicKey_param_dc_id_type_int' => 'DC ID',
  'object_cdnPublicKey_param_public_key_type_string' => 'Public key',
  'object_cdnConfig' => 'CDN configuration',
  'object_cdnConfig_param_public_keys_type_Vector t' => 'Public keys',
  'object_langPackString' => 'Lang pack string',
  'object_langPackString_param_key_type_string' => 'Key',
  'object_langPackString_param_value_type_string' => 'Value',
  'object_langPackStringPluralized' => 'Lang pack string pluralized',
  'object_langPackStringPluralized_param_key_type_string' => 'Key',
  'object_langPackStringPluralized_param_zero_value_type_string' => 'Zero value',
  'object_langPackStringPluralized_param_one_value_type_string' => 'One value',
  'object_langPackStringPluralized_param_two_value_type_string' => 'Two value',
  'object_langPackStringPluralized_param_few_value_type_string' => 'Few value',
  'object_langPackStringPluralized_param_many_value_type_string' => 'Many value',
  'object_langPackStringPluralized_param_other_value_type_string' => 'Other value',
  'object_langPackStringDeleted' => 'Lang pack string deleted',
  'object_langPackStringDeleted_param_key_type_string' => 'Key',
  'object_langPackDifference' => 'Lang pack difference',
  'object_langPackDifference_param_lang_code_type_string' => 'Lang code',
  'object_langPackDifference_param_from_version_type_int' => 'From version',
  'object_langPackDifference_param_version_type_int' => 'Version',
  'object_langPackDifference_param_strings_type_Vector t' => 'Strings',
  'object_langPackLanguage' => 'Lang pack language',
  'object_langPackLanguage_param_name_type_string' => 'Name',
  'object_langPackLanguage_param_native_name_type_string' => 'Native name',
  'object_langPackLanguage_param_lang_code_type_string' => 'Lang code',
  'object_channelAdminRights' => 'Admin rights',
  'object_channelAdminRights_param_change_info_type_true' => 'Change info',
  'object_channelAdminRights_param_post_messages_type_true' => 'Post messages',
  'object_channelAdminRights_param_edit_messages_type_true' => 'Edit messages',
  'object_channelAdminRights_param_delete_messages_type_true' => 'Delete messages',
  'object_channelAdminRights_param_ban_users_type_true' => 'Ban users',
  'object_channelAdminRights_param_invite_users_type_true' => 'Invite users',
  'object_channelAdminRights_param_invite_link_type_true' => 'Generate an invite link',
  'object_channelAdminRights_param_pin_messages_type_true' => 'Pin messages',
  'object_channelAdminRights_param_add_admins_type_true' => 'Add other admins',
  'object_channelBannedRights' => 'Banned user rights (when true, the user will NOT be able to do that thing)',
  'object_channelBannedRights_param_view_messages_type_true' => 'Disallow viewing messages',
  'object_channelBannedRights_param_send_messages_type_true' => 'Disallow sending messages',
  'object_channelBannedRights_param_send_media_type_true' => 'Disallow sending media',
  'object_channelBannedRights_param_send_stickers_type_true' => 'Disallow sending stickers',
  'object_channelBannedRights_param_send_gifs_type_true' => 'Disallow sending gifs',
  'object_channelBannedRights_param_send_games_type_true' => 'Disallow sending games',
  'object_channelBannedRights_param_send_inline_type_true' => 'Disallow sending inline keyboards',
  'object_channelBannedRights_param_embed_links_type_true' => 'Disallow embedding links',
  'object_channelBannedRights_param_until_date_type_int' => 'Until date',
  'object_channelAdminLogEventActionChangeTitle' => 'Change title',
  'object_channelAdminLogEventActionChangeTitle_param_prev_value_type_string' => 'Previous value',
  'object_channelAdminLogEventActionChangeTitle_param_new_value_type_string' => 'New value',
  'object_channelAdminLogEventActionChangeAbout' => 'Change about text',
  'object_channelAdminLogEventActionChangeAbout_param_prev_value_type_string' => 'Previous value',
  'object_channelAdminLogEventActionChangeAbout_param_new_value_type_string' => 'New value',
  'object_channelAdminLogEventActionChangeUsername' => 'Change username',
  'object_channelAdminLogEventActionChangeUsername_param_prev_value_type_string' => 'Prev value',
  'object_channelAdminLogEventActionChangeUsername_param_new_value_type_string' => 'New value',
  'object_channelAdminLogEventActionChangePhoto' => 'Change photo',
  'object_channelAdminLogEventActionChangePhoto_param_prev_photo_type_ChatPhoto' => 'Previous photo',
  'object_channelAdminLogEventActionChangePhoto_param_new_photo_type_ChatPhoto' => 'New photo',
  'object_channelAdminLogEventActionToggleInvites' => 'Invite setting toggled',
  'object_channelAdminLogEventActionToggleInvites_param_new_value_type_Bool' => 'New value',
  'object_channelAdminLogEventActionToggleSignatures' => 'Toggle channel signatures',
  'object_channelAdminLogEventActionToggleSignatures_param_new_value_type_Bool' => 'New value?',
  'object_channelAdminLogEventActionUpdatePinned' => 'Message pinned',
  'object_channelAdminLogEventActionUpdatePinned_param_message_type_Message' => 'Message',
  'object_channelAdminLogEventActionEditMessage' => 'Edit message',
  'object_channelAdminLogEventActionEditMessage_param_prev_message_type_Message' => 'Prev message',
  'object_channelAdminLogEventActionEditMessage_param_new_message_type_Message' => 'New message',
  'object_channelAdminLogEventActionDeleteMessage' => 'Delete message',
  'object_channelAdminLogEventActionDeleteMessage_param_message_type_Message' => 'Message',
  'object_channelAdminLogEventActionParticipantJoin' => 'Joined participant',
  'object_channelAdminLogEventActionParticipantLeave' => 'Left participant',
  'object_channelAdminLogEventActionParticipantInvite' => 'Invite participant',
  'object_channelAdminLogEventActionParticipantInvite_param_participant_type_ChannelParticipant' => 'Participant',
  'object_channelAdminLogEventActionParticipantToggleBan' => 'User banned',
  'object_channelAdminLogEventActionParticipantToggleBan_param_prev_participant_type_ChannelParticipant' => 'Prev participant',
  'object_channelAdminLogEventActionParticipantToggleBan_param_new_participant_type_ChannelParticipant' => 'New participant',
  'object_channelAdminLogEventActionParticipantToggleAdmin' => 'Admin toggled',
  'object_channelAdminLogEventActionParticipantToggleAdmin_param_prev_participant_type_ChannelParticipant' => 'Prev participant',
  'object_channelAdminLogEventActionParticipantToggleAdmin_param_new_participant_type_ChannelParticipant' => 'New participant',
  'object_channelAdminLogEventActionChangeStickerSet' => 'Change stickerset',
  'object_channelAdminLogEventActionChangeStickerSet_param_prev_stickerset_type_InputStickerSet' => 'Previous stickerset',
  'object_channelAdminLogEventActionChangeStickerSet_param_new_stickerset_type_InputStickerSet' => 'New stickerset',
  'object_channelAdminLogEventActionTogglePreHistoryHidden' => 'Previous history hidden',
  'object_channelAdminLogEventActionTogglePreHistoryHidden_param_new_value_type_Bool' => 'New value',
  'object_channelAdminLogEvent' => 'Channel admin log event',
  'object_channelAdminLogEvent_param_id_type_long' => 'ID',
  'object_channelAdminLogEvent_param_date_type_int' => 'Date',
  'object_channelAdminLogEvent_param_user_id_type_int' => 'User ID',
  'object_channelAdminLogEvent_param_action_type_ChannelAdminLogEventAction' => 'Action',
  'object_channels.adminLogResults' => 'Admin log results',
  'object_channels.adminLogResults_param_events_type_Vector t' => 'Events',
  'object_channels.adminLogResults_param_chats_type_Vector t' => 'Chats',
  'object_channels.adminLogResults_param_users_type_Vector t' => 'Users',
  'object_channelAdminLogEventsFilter' => 'Event filter',
  'object_channelAdminLogEventsFilter_param_join_type_true' => 'Join users events',
  'object_channelAdminLogEventsFilter_param_leave_type_true' => 'Left users events',
  'object_channelAdminLogEventsFilter_param_invite_type_true' => 'Invite users events',
  'object_channelAdminLogEventsFilter_param_ban_type_true' => 'Ban events',
  'object_channelAdminLogEventsFilter_param_unban_type_true' => 'Unban events',
  'object_channelAdminLogEventsFilter_param_kick_type_true' => 'Kicked users events',
  'object_channelAdminLogEventsFilter_param_unkick_type_true' => 'Unkick events',
  'object_channelAdminLogEventsFilter_param_promote_type_true' => 'Admin promotion events',
  'object_channelAdminLogEventsFilter_param_demote_type_true' => 'Demote admin events',
  'object_channelAdminLogEventsFilter_param_info_type_true' => 'Change info events',
  'object_channelAdminLogEventsFilter_param_settings_type_true' => 'Setting changes',
  'object_channelAdminLogEventsFilter_param_pinned_type_true' => 'Pinned message events',
  'object_channelAdminLogEventsFilter_param_edit_type_true' => 'Edit message events',
  'object_channelAdminLogEventsFilter_param_delete_type_true' => 'Delete message events',
  'object_popularContact' => 'Popular contact',
  'object_popularContact_param_client_id_type_long' => 'Client ID',
  'object_popularContact_param_importers_type_int' => 'Importers',
  'object_cdnFileHash' => 'CDN file hash',
  'object_cdnFileHash_param_offset_type_int' => 'Offset',
  'object_cdnFileHash_param_limit_type_int' => 'Limit',
  'object_cdnFileHash_param_hash_type_bytes' => 'Hash',
  'object_messages.favedStickersNotModified' => 'Faved stickers not modified',
  'object_messages.favedStickers' => 'Faved stickers',
  'object_messages.favedStickers_param_hash_type_int' => 'Hash',
  'object_messages.favedStickers_param_packs_type_Vector t' => 'Packs',
  'object_messages.favedStickers_param_stickers_type_Vector t' => 'Stickers',
  'object_recentMeUrlUnknown' => 'Recent me URL unknown',
  'object_recentMeUrlUnknown_param_url_type_string' => 'URL',
  'object_recentMeUrlUser' => 'Recent me URL user',
  'object_recentMeUrlUser_param_url_type_string' => 'URL',
  'object_recentMeUrlUser_param_user_id_type_int' => 'User ID',
  'object_recentMeUrlChat' => 'Recent me URL chat',
  'object_recentMeUrlChat_param_url_type_string' => 'URL',
  'object_recentMeUrlChat_param_chat_id_type_int' => 'Chat ID',
  'object_recentMeUrlChatInvite' => 'Recent me URL chat invite',
  'object_recentMeUrlChatInvite_param_url_type_string' => 'URL',
  'object_recentMeUrlChatInvite_param_chat_invite_type_ChatInvite' => 'Chat invite',
  'object_recentMeUrlStickerSet' => 'Recent me URL sticker set',
  'object_recentMeUrlStickerSet_param_url_type_string' => 'URL',
  'object_recentMeUrlStickerSet_param_set_type_StickerSetCovered' => 'Set',
  'object_help.recentMeUrls' => 'Recent me URLs',
  'object_help.recentMeUrls_param_urls_type_Vector t' => 'URLs',
  'object_help.recentMeUrls_param_chats_type_Vector t' => 'Chats',
  'object_help.recentMeUrls_param_users_type_Vector t' => 'Users',
  'object_inputSingleMedia' => 'Single media',
  'object_inputSingleMedia_param_media_type_InputMedia' => 'Media',
  'object_inputSingleMedia_param_message_type_string' => 'Message',
  'object_inputSingleMedia_param_entities_type_Vector t' => 'Entities',
  'object_webAuthorization' => 'Web authorization',
  'object_webAuthorization_param_hash_type_long' => 'Hash',
  'object_webAuthorization_param_bot_id_type_int' => 'Bot ID',
  'object_webAuthorization_param_domain_type_string' => 'Domain',
  'object_webAuthorization_param_browser_type_string' => 'Browser',
  'object_webAuthorization_param_platform_type_string' => 'Platform',
  'object_webAuthorization_param_date_created_type_int' => 'Date created',
  'object_webAuthorization_param_date_active_type_int' => 'Date active',
  'object_webAuthorization_param_ip_type_string' => 'Ip',
  'object_webAuthorization_param_region_type_string' => 'Region',
  'object_account.webAuthorizations' => 'Telegram login authorizations',
  'object_account.webAuthorizations_param_authorizations_type_Vector t' => 'Authorizations',
  'object_account.webAuthorizations_param_users_type_Vector t' => 'Users',
  'object_inputMessageID' => 'Message ID',
  'object_inputMessageID_param_id_type_int' => 'ID',
  'object_inputMessageReplyTo' => 'Message reply to',
  'object_inputMessageReplyTo_param_id_type_int' => 'ID',
  'object_inputMessagePinned' => 'Message pinned',
  'object_decryptedDataBlock' => 'Decrypted data block',
  'object_decryptedDataBlock_param_voice_call_id_type_int128' => 'Voice call ID',
  'object_decryptedDataBlock_param_in_seq_no_type_int' => 'In seq no',
  'object_decryptedDataBlock_param_out_seq_no_type_int' => 'Out seq no',
  'object_decryptedDataBlock_param_recent_received_mask_type_int' => 'Recent received mask',
  'object_decryptedDataBlock_param_proto_type_int' => 'Proto',
  'object_decryptedDataBlock_param_extra_type_string' => 'Extra',
  'object_decryptedDataBlock_param_raw_data_type_string' => 'Raw data',
  'object_simpleDataBlock' => 'Simple data block',
  'object_simpleDataBlock_param_raw_data_type_string' => 'Raw data',
  'object_decryptedMessage' => 'Decrypted message',
  'object_decryptedMessage_param_message_type_string' => 'Message',
  'object_decryptedMessage_param_media_type_DecryptedMessageMedia' => 'Media',
  'object_decryptedMessageService' => 'Decrypted message service',
  'object_decryptedMessageService_param_action_type_DecryptedMessageAction' => 'Action',
  'object_decryptedMessageMediaEmpty' => 'Empty decrypted message media',
  'object_decryptedMessageMediaPhoto' => 'Decrypted message media photo',
  'object_decryptedMessageMediaPhoto_param_thumb_type_bytes' => 'Thumbnail',
  'object_decryptedMessageMediaPhoto_param_thumb_w_type_int' => 'Thumbnail width',
  'object_decryptedMessageMediaPhoto_param_thumb_h_type_int' => 'Thumbnail height',
  'object_decryptedMessageMediaPhoto_param_w_type_int' => 'Width',
  'object_decryptedMessageMediaPhoto_param_h_type_int' => 'Height',
  'object_decryptedMessageMediaPhoto_param_size_type_int' => 'Size',
  'object_decryptedMessageMediaPhoto_param_key_type_bytes' => 'Key',
  'object_decryptedMessageMediaPhoto_param_iv_type_bytes' => 'Iv',
  'object_decryptedMessageMediaVideo' => 'Decrypted message media video',
  'object_decryptedMessageMediaVideo_param_thumb_type_bytes' => 'Thumbnail',
  'object_decryptedMessageMediaVideo_param_thumb_w_type_int' => 'Thumbnail width',
  'object_decryptedMessageMediaVideo_param_thumb_h_type_int' => 'Thumbnail height',
  'object_decryptedMessageMediaVideo_param_duration_type_int' => 'Duration',
  'object_decryptedMessageMediaVideo_param_w_type_int' => 'Width',
  'object_decryptedMessageMediaVideo_param_h_type_int' => 'Height',
  'object_decryptedMessageMediaVideo_param_size_type_int' => 'Size',
  'object_decryptedMessageMediaVideo_param_key_type_bytes' => 'Key',
  'object_decryptedMessageMediaVideo_param_iv_type_bytes' => 'Iv',
  'object_decryptedMessageMediaGeoPoint' => 'Decrypted message media geo point',
  'object_decryptedMessageMediaGeoPoint_param_lat_type_double' => 'Lat',
  'object_decryptedMessageMediaGeoPoint_param_long_type_double' => 'Long',
  'object_decryptedMessageMediaContact' => 'Decrypted message media contact',
  'object_decryptedMessageMediaContact_param_phone_number_type_string' => 'Phone number',
  'object_decryptedMessageMediaContact_param_first_name_type_string' => 'First name',
  'object_decryptedMessageMediaContact_param_last_name_type_string' => 'Last name',
  'object_decryptedMessageMediaContact_param_user_id_type_int' => 'User ID',
  'object_decryptedMessageActionSetMessageTTL' => 'Decrypted message action set message ttl',
  'object_decryptedMessageActionSetMessageTTL_param_ttl_seconds_type_int' => 'Ttl seconds',
  'object_decryptedMessageMediaDocument' => 'Decrypted message media document',
  'object_decryptedMessageMediaDocument_param_thumb_type_bytes' => 'Thumbnail',
  'object_decryptedMessageMediaDocument_param_thumb_w_type_int' => 'Thumbnail w',
  'object_decryptedMessageMediaDocument_param_thumb_h_type_int' => 'Thumbnail h',
  'object_decryptedMessageMediaDocument_param_file_name_type_string' => 'File name',
  'object_decryptedMessageMediaDocument_param_mime_type_type_string' => 'Mime type',
  'object_decryptedMessageMediaDocument_param_size_type_int' => 'Size',
  'object_decryptedMessageMediaDocument_param_key_type_bytes' => 'Key',
  'object_decryptedMessageMediaDocument_param_iv_type_bytes' => 'Iv',
  'object_decryptedMessageMediaAudio' => 'Decrypted message media audio',
  'object_decryptedMessageMediaAudio_param_duration_type_int' => 'Duration',
  'object_decryptedMessageMediaAudio_param_size_type_int' => 'Size',
  'object_decryptedMessageMediaAudio_param_key_type_bytes' => 'Key',
  'object_decryptedMessageMediaAudio_param_iv_type_bytes' => 'Iv',
  'object_decryptedMessageActionReadMessages' => 'Decrypted message action read messages',
  'object_decryptedMessageActionReadMessages_param_random_ids_type_Vector t' => 'Random IDs',
  'object_decryptedMessageActionDeleteMessages' => 'Decrypted message action delete messages',
  'object_decryptedMessageActionDeleteMessages_param_random_ids_type_Vector t' => 'Random IDs',
  'object_decryptedMessageActionScreenshotMessages' => 'Decrypted message action screenshot messages',
  'object_decryptedMessageActionScreenshotMessages_param_random_ids_type_Vector t' => 'Random IDs',
  'object_decryptedMessageActionFlushHistory' => 'Decrypted message action flush history',
  'object_decryptedMessage_param_ttl_type_int' => 'Ttl',
  'object_decryptedMessageMediaVideo_param_mime_type_type_string' => 'Mime type',
  'object_decryptedMessageMediaAudio_param_mime_type_type_string' => 'Mime type',
  'object_decryptedMessageLayer' => 'Decrypted message layer',
  'object_decryptedMessageLayer_param_layer_type_int' => 'Layer',
  'object_decryptedMessageLayer_param_in_seq_no_type_int' => 'In seq no',
  'object_decryptedMessageLayer_param_out_seq_no_type_int' => 'Out seq no',
  'object_decryptedMessageLayer_param_message_type_DecryptedMessage' => 'Message',
  'object_decryptedMessageActionResend' => 'Decrypted message action resend',
  'object_decryptedMessageActionResend_param_start_seq_no_type_int' => 'Start seq no',
  'object_decryptedMessageActionResend_param_end_seq_no_type_int' => 'End seq no',
  'object_decryptedMessageActionNotifyLayer' => 'Decrypted message action notify layer',
  'object_decryptedMessageActionNotifyLayer_param_layer_type_int' => 'Layer',
  'object_decryptedMessageActionTyping' => 'Decrypted message action typing',
  'object_decryptedMessageActionTyping_param_action_type_SendMessageAction' => 'Action',
  'object_decryptedMessageActionRequestKey' => 'Decrypted message action request key',
  'object_decryptedMessageActionRequestKey_param_exchange_id_type_long' => 'Exchange ID',
  'object_decryptedMessageActionRequestKey_param_g_a_type_bytes' => 'G a',
  'object_decryptedMessageActionAcceptKey' => 'Decrypted message action accept key',
  'object_decryptedMessageActionAcceptKey_param_exchange_id_type_long' => 'Exchange ID',
  'object_decryptedMessageActionAcceptKey_param_g_b_type_bytes' => 'G b',
  'object_decryptedMessageActionAcceptKey_param_key_fingerprint_type_long' => 'Key fingerprint',
  'object_decryptedMessageActionAbortKey' => 'Decrypted message action abort key',
  'object_decryptedMessageActionAbortKey_param_exchange_id_type_long' => 'Exchange ID',
  'object_decryptedMessageActionCommitKey' => 'Decrypted message action commit key',
  'object_decryptedMessageActionCommitKey_param_exchange_id_type_long' => 'Exchange ID',
  'object_decryptedMessageActionCommitKey_param_key_fingerprint_type_long' => 'Key fingerprint',
  'object_decryptedMessageActionNoop' => 'Decrypted message action noop',
  'object_decryptedMessageMediaExternalDocument' => 'Decrypted message media external document',
  'object_decryptedMessageMediaExternalDocument_param_id_type_long' => 'ID',
  'object_decryptedMessageMediaExternalDocument_param_access_hash_type_long' => 'Access hash',
  'object_decryptedMessageMediaExternalDocument_param_date_type_int' => 'Date',
  'object_decryptedMessageMediaExternalDocument_param_mime_type_type_string' => 'Mime type',
  'object_decryptedMessageMediaExternalDocument_param_size_type_int' => 'Size',
  'object_decryptedMessageMediaExternalDocument_param_thumb_type_PhotoSize' => 'Thumbnail',
  'object_decryptedMessageMediaExternalDocument_param_dc_id_type_int' => 'DC ID',
  'object_decryptedMessageMediaExternalDocument_param_attributes_type_Vector t' => 'Attributes',
  'object_decryptedMessage_param_entities_type_Vector t' => 'Entities',
  'object_decryptedMessage_param_via_bot_name_type_string' => 'Via bot name',
  'object_decryptedMessage_param_reply_to_random_id_type_long' => 'Reply to random ID',
  'object_decryptedMessageMediaPhoto_param_caption_type_string' => 'Caption',
  'object_decryptedMessageMediaVideo_param_caption_type_string' => 'Caption',
  'object_decryptedMessageMediaDocument_param_attributes_type_Vector t' => 'Attributes',
  'object_decryptedMessageMediaDocument_param_caption_type_string' => 'Caption',
  'object_decryptedMessageMediaVenue' => 'Decrypted message media venue',
  'object_decryptedMessageMediaVenue_param_lat_type_double' => 'Lat',
  'object_decryptedMessageMediaVenue_param_long_type_double' => 'Long',
  'object_decryptedMessageMediaVenue_param_title_type_string' => 'Title',
  'object_decryptedMessageMediaVenue_param_address_type_string' => 'Address',
  'object_decryptedMessageMediaVenue_param_provider_type_string' => 'Provider',
  'object_decryptedMessageMediaVenue_param_venue_id_type_string' => 'Venue ID',
  'object_decryptedMessageMediaWebPage' => 'Decrypted message media web page',
  'object_decryptedMessageMediaWebPage_param_url_type_string' => 'URL',
  'object_decryptedMessage_param_grouped_id_type_long' => 'Grouped ID',
  'object_inputPeerContact' => 'Peer contact',
  'object_inputPeerContact_param_user_id_type_int' => 'User ID',
  'object_inputPeerForeign' => 'Peer foreign',
  'object_inputPeerForeign_param_user_id_type_int' => 'User ID',
  'object_inputPeerForeign_param_access_hash_type_long' => 'Access hash',
  'object_inputUserContact' => 'User contact',
  'object_inputUserContact_param_user_id_type_int' => 'User ID',
  'object_inputUserForeign' => 'User foreign',
  'object_inputUserForeign_param_user_id_type_int' => 'User ID',
  'object_inputUserForeign_param_access_hash_type_long' => 'Access hash',
  'object_inputMediaUploadedVideo' => 'Media uploaded video',
  'object_inputMediaUploadedVideo_param_file_type_InputFile' => 'File',
  'object_inputMediaUploadedVideo_param_duration_type_int' => 'Duration',
  'object_inputMediaUploadedVideo_param_w_type_int' => 'Width',
  'object_inputMediaUploadedVideo_param_h_type_int' => 'Height',
  'object_inputMediaUploadedVideo_param_mime_type_type_string' => 'Mime type',
  'object_inputMediaUploadedThumbVideo' => 'Media uploaded thumb video',
  'object_inputMediaUploadedThumbVideo_param_file_type_InputFile' => 'File',
  'object_inputMediaUploadedThumbVideo_param_thumb_type_InputFile' => 'Thumbnail',
  'object_inputMediaUploadedThumbVideo_param_duration_type_int' => 'Duration',
  'object_inputMediaUploadedThumbVideo_param_w_type_int' => 'Width',
  'object_inputMediaUploadedThumbVideo_param_h_type_int' => 'Height',
  'object_inputMediaUploadedThumbVideo_param_mime_type_type_string' => 'Mime type',
  'object_inputMediaVideo' => 'Media video',
  'object_inputMediaVideo_param_id_type_InputVideo' => 'ID',
  'object_inputChatUploadedPhoto_param_crop_type_InputPhotoCrop' => 'Crop',
  'object_inputChatPhoto_param_crop_type_InputPhotoCrop' => 'Crop',
  'object_inputVideoEmpty' => 'Empty input video',
  'object_inputVideo' => 'Video',
  'object_inputVideo_param_id_type_long' => 'ID',
  'object_inputVideo_param_access_hash_type_long' => 'Access hash',
  'object_inputVideoFileLocation' => 'Video file location',
  'object_inputVideoFileLocation_param_id_type_long' => 'ID',
  'object_inputVideoFileLocation_param_access_hash_type_long' => 'Access hash',
  'object_inputPhotoCropAuto' => 'Photo crop auto',
  'object_inputPhotoCrop' => 'Photo crop',
  'object_inputPhotoCrop_param_crop_left_type_double' => 'Crop left',
  'object_inputPhotoCrop_param_crop_top_type_double' => 'Crop top',
  'object_inputPhotoCrop_param_crop_width_type_double' => 'Crop width',
  'object_userSelf' => 'User self',
  'object_userSelf_param_id_type_int' => 'ID',
  'object_userSelf_param_first_name_type_string' => 'First name',
  'object_userSelf_param_last_name_type_string' => 'Last name',
  'object_userSelf_param_username_type_string' => 'Username',
  'object_userSelf_param_phone_type_string' => 'Phone',
  'object_userSelf_param_photo_type_UserProfilePhoto' => 'Photo',
  'object_userSelf_param_status_type_UserStatus' => 'Status',
  'object_userSelf_param_inactive_type_Bool' => 'Inactive?',
  'object_userContact' => 'User contact',
  'object_userContact_param_id_type_int' => 'ID',
  'object_userContact_param_first_name_type_string' => 'First name',
  'object_userContact_param_last_name_type_string' => 'Last name',
  'object_userContact_param_username_type_string' => 'Username',
  'object_userContact_param_access_hash_type_long' => 'Access hash',
  'object_userContact_param_phone_type_string' => 'Phone',
  'object_userContact_param_photo_type_UserProfilePhoto' => 'Photo',
  'object_userContact_param_status_type_UserStatus' => 'Status',
  'object_userRequest' => 'User request',
  'object_userRequest_param_id_type_int' => 'ID',
  'object_userRequest_param_first_name_type_string' => 'First name',
  'object_userRequest_param_last_name_type_string' => 'Last name',
  'object_userRequest_param_username_type_string' => 'Username',
  'object_userRequest_param_access_hash_type_long' => 'Access hash',
  'object_userRequest_param_phone_type_string' => 'Phone',
  'object_userRequest_param_photo_type_UserProfilePhoto' => 'Photo',
  'object_userRequest_param_status_type_UserStatus' => 'Status',
  'object_userForeign' => 'User foreign',
  'object_userForeign_param_id_type_int' => 'ID',
  'object_userForeign_param_first_name_type_string' => 'First name',
  'object_userForeign_param_last_name_type_string' => 'Last name',
  'object_userForeign_param_username_type_string' => 'Username',
  'object_userForeign_param_access_hash_type_long' => 'Access hash',
  'object_userForeign_param_photo_type_UserProfilePhoto' => 'Photo',
  'object_userForeign_param_status_type_UserStatus' => 'Status',
  'object_userDeleted' => 'User deleted',
  'object_userDeleted_param_id_type_int' => 'ID',
  'object_userDeleted_param_first_name_type_string' => 'First name',
  'object_userDeleted_param_last_name_type_string' => 'Last name',
  'object_userDeleted_param_username_type_string' => 'Username',
  'object_userStatusEmpty' => 'Empty user status',
  'object_userStatusOnline' => 'User status online',
  'object_userStatusOnline_param_expires_type_int' => 'Expires',
  'object_userStatusOffline' => 'User status offline',
  'object_userStatusOffline_param_was_online_type_int' => 'Was online',
  'object_chat_param_left_type_Bool' => 'Left?',
  'object_chatForbidden_param_date_type_int' => 'Date',
  'object_chatParticipants_param_admin_id_type_int' => 'Admin ID',
  'object_messageForwarded' => 'Message forwarded',
  'object_messageForwarded_param_id_type_int' => 'ID',
  'object_messageForwarded_param_fwd_from_id_type_int' => 'Forwarded from ID',
  'object_messageForwarded_param_fwd_date_type_int' => 'Forwarded date',
  'object_messageForwarded_param_from_id_type_int' => 'From ID',
  'object_messageForwarded_param_to_id_type_Peer' => 'To ID',
  'object_messageForwarded_param_date_type_int' => 'Date',
  'object_messageForwarded_param_message_type_string' => 'Message',
  'object_messageForwarded_param_media_type_MessageMedia' => 'Media',
  'object_messageMediaVideo' => 'Message media video',
  'object_messageMediaVideo_param_video_type_Video' => 'Video',
  'object_messageMediaUnsupported_param_bytes_type_bytes' => 'Bytes',
  'object_messageActionChatAddUser_param_user_id_type_int' => 'User ID',
  'object_photo_param_user_id_type_int' => 'User ID',
  'object_photo_param_caption_type_string' => 'Caption',
  'object_photo_param_geo_type_GeoPoint' => 'Geo',
  'object_videoEmpty' => 'Empty video',
  'object_videoEmpty_param_id_type_long' => 'ID',
  'object_video' => 'Video',
  'object_video_param_id_type_long' => 'ID',
  'object_video_param_access_hash_type_long' => 'Access hash',
  'object_video_param_user_id_type_int' => 'User ID',
  'object_video_param_date_type_int' => 'Date',
  'object_video_param_caption_type_string' => 'Caption',
  'object_video_param_duration_type_int' => 'Duration',
  'object_video_param_mime_type_type_string' => 'Mime type',
  'object_video_param_size_type_int' => 'Size',
  'object_video_param_thumb_type_PhotoSize' => 'Thumbnail',
  'object_video_param_dc_id_type_int' => 'DC ID',
  'object_video_param_w_type_int' => 'Width',
  'object_video_param_h_type_int' => 'Height',
  'object_auth.checkedPhone_param_phone_invited_type_Bool' => 'Phone invited?',
  'object_auth.sentCode_param_phone_registered_type_Bool' => 'Phone registered?',
  'object_auth.sentCode_param_send_call_timeout_type_int' => 'Send call timeout',
  'object_auth.sentCode_param_is_password_type_Bool' => 'Is password?',
  'object_auth.authorization_param_expires_type_int' => 'Expiration date',
  'object_inputPeerNotifySettings_param_show_previews_type_Bool' => 'Show previews?',
  'object_inputPeerNotifySettings_param_events_mask_type_int' => 'Events mask',
  'object_peerNotifySettings_param_show_previews_type_Bool' => 'Show previews?',
  'object_peerNotifySettings_param_events_mask_type_int' => 'Events mask',
  'object_userFull_param_blocked_type_Bool' => 'Blocked?',
  'object_userFull_param_real_first_name_type_string' => 'Real first name',
  'object_userFull_param_real_last_name_type_string' => 'Real last name',
  'object_contactSuggested' => 'Contact suggested',
  'object_contactSuggested_param_user_id_type_int' => 'User ID',
  'object_contactSuggested_param_mutual_contacts_type_int' => 'Mutual contacts',
  'object_contactStatus_param_expires_type_int' => 'Expires',
  'object_contacts.foreignLinkUnknown' => 'Foreign link unknown',
  'object_contacts.foreignLinkRequested' => 'Foreign link requested',
  'object_contacts.foreignLinkRequested_param_has_phone_type_Bool' => 'Has phone?',
  'object_contacts.foreignLinkMutual' => 'Foreign link mutual',
  'object_contacts.myLinkEmpty' => 'Empty my link',
  'object_contacts.myLinkRequested' => 'My link requested',
  'object_contacts.myLinkRequested_param_contact_type_Bool' => 'Contact?',
  'object_contacts.myLinkContact' => 'My link contact',
  'object_contacts.link_param_my_link_type_contacts.MyLink' => 'My link',
  'object_contacts.link_param_foreign_link_type_contacts.ForeignLink' => 'Foreign link',
  'object_contacts.suggested' => 'Suggested',
  'object_contacts.suggested_param_results_type_Vector t' => 'Results',
  'object_contacts.suggested_param_users_type_Vector t' => 'Users',
  'object_messages.statedMessages' => 'Stated messages',
  'object_messages.statedMessages_param_messages_type_Vector t' => 'Messages',
  'object_messages.statedMessages_param_chats_type_Vector t' => 'Chats',
  'object_messages.statedMessages_param_users_type_Vector t' => 'Users',
  'object_messages.statedMessages_param_pts_type_int' => 'Pts',
  'object_messages.statedMessages_param_seq_type_int' => 'Seq',
  'object_messages.statedMessage' => 'Stated message',
  'object_messages.statedMessage_param_message_type_Message' => 'Message',
  'object_messages.statedMessage_param_chats_type_Vector t' => 'Chats',
  'object_messages.statedMessage_param_users_type_Vector t' => 'Users',
  'object_messages.statedMessage_param_pts_type_int' => 'Pts',
  'object_messages.statedMessage_param_seq_type_int' => 'Seq',
  'object_messages.sentMessage' => 'Sent message',
  'object_messages.sentMessage_param_id_type_int' => 'ID',
  'object_messages.sentMessage_param_date_type_int' => 'Date',
  'object_messages.sentMessage_param_pts_type_int' => 'Pts',
  'object_messages.sentMessage_param_seq_type_int' => 'Seq',
  'object_messages.chats_param_users_type_Vector t' => 'Users',
  'object_messages.affectedHistory_param_seq_type_int' => 'Seq',
  'object_inputMessagesFilterPhotoVideoDocuments' => 'Messages filter photo video documents',
  'object_inputMessagesFilterAudio' => 'Messages filter audio',
  'object_inputMessagesFilterAudioDocuments' => 'Messages filter audio documents',
  'object_updateReadMessages' => 'Update read messages',
  'object_updateReadMessages_param_messages_type_Vector t' => 'Messages',
  'object_updateReadMessages_param_pts_type_int' => 'Pts',
  'object_updateUserStatus' => 'Update user status',
  'object_updateUserStatus_param_user_id_type_int' => 'User ID',
  'object_updateUserStatus_param_status_type_UserStatus' => 'Status',
  'object_updateContactLink_param_my_link_type_contacts.MyLink' => 'My link',
  'object_updateContactLink_param_foreign_link_type_contacts.ForeignLink' => 'Foreign link',
  'object_updateNewAuthorization' => 'Update new authorization',
  'object_updateNewAuthorization_param_auth_key_id_type_long' => 'Auth key ID',
  'object_updateNewAuthorization_param_date_type_int' => 'Date',
  'object_updateNewAuthorization_param_device_type_string' => 'Device',
  'object_updateNewAuthorization_param_location_type_string' => 'Location',
  'object_updateShortMessage_param_from_id_type_int' => 'From ID',
  'object_updateShortMessage_param_seq_type_int' => 'Seq',
  'object_updateShortChatMessage_param_seq_type_int' => 'Seq',
  'object_dcOption_param_hostname_type_string' => 'Hostname',
  'object_config_param_broadcast_size_max_type_int' => 'Broadcast size max',
  'object_messages.statedMessagesLinks' => 'Stated messages links',
  'object_messages.statedMessagesLinks_param_messages_type_Vector t' => 'Messages',
  'object_messages.statedMessagesLinks_param_chats_type_Vector t' => 'Chats',
  'object_messages.statedMessagesLinks_param_users_type_Vector t' => 'Users',
  'object_messages.statedMessagesLinks_param_links_type_Vector t' => 'Links',
  'object_messages.statedMessagesLinks_param_pts_type_int' => 'Pts',
  'object_messages.statedMessagesLinks_param_seq_type_int' => 'Seq',
  'object_messages.statedMessageLink' => 'Stated message link',
  'object_messages.statedMessageLink_param_message_type_Message' => 'Message',
  'object_messages.statedMessageLink_param_chats_type_Vector t' => 'Chats',
  'object_messages.statedMessageLink_param_users_type_Vector t' => 'Users',
  'object_messages.statedMessageLink_param_links_type_Vector t' => 'Links',
  'object_messages.statedMessageLink_param_pts_type_int' => 'Pts',
  'object_messages.statedMessageLink_param_seq_type_int' => 'Seq',
  'object_messages.sentMessageLink' => 'Sent message link',
  'object_messages.sentMessageLink_param_id_type_int' => 'ID',
  'object_messages.sentMessageLink_param_date_type_int' => 'Date',
  'object_messages.sentMessageLink_param_pts_type_int' => 'Pts',
  'object_messages.sentMessageLink_param_seq_type_int' => 'Seq',
  'object_messages.sentMessageLink_param_links_type_Vector t' => 'Links',
  'object_inputMediaUploadedAudio' => 'Media uploaded audio',
  'object_inputMediaUploadedAudio_param_file_type_InputFile' => 'File',
  'object_inputMediaUploadedAudio_param_duration_type_int' => 'Duration',
  'object_inputMediaUploadedAudio_param_mime_type_type_string' => 'Mime type',
  'object_inputMediaAudio' => 'Media audio',
  'object_inputMediaAudio_param_id_type_InputAudio' => 'ID',
  'object_inputMediaUploadedDocument_param_file_name_type_string' => 'File name',
  'object_inputMediaUploadedThumbDocument' => 'Media uploaded thumb document',
  'object_inputMediaUploadedThumbDocument_param_file_type_InputFile' => 'File',
  'object_inputMediaUploadedThumbDocument_param_thumb_type_InputFile' => 'Thumbnail',
  'object_inputMediaUploadedThumbDocument_param_file_name_type_string' => 'File name',
  'object_inputMediaUploadedThumbDocument_param_mime_type_type_string' => 'Mime type',
  'object_messageMediaAudio' => 'Message media audio',
  'object_messageMediaAudio_param_audio_type_Audio' => 'Audio',
  'object_inputAudioEmpty' => 'Empty input audio',
  'object_inputAudio' => 'Audio',
  'object_inputAudio_param_id_type_long' => 'ID',
  'object_inputAudio_param_access_hash_type_long' => 'Access hash',
  'object_inputAudioFileLocation' => 'Audio file location',
  'object_inputAudioFileLocation_param_id_type_long' => 'ID',
  'object_inputAudioFileLocation_param_access_hash_type_long' => 'Access hash',
  'object_audioEmpty' => 'Empty audio',
  'object_audioEmpty_param_id_type_long' => 'ID',
  'object_audio' => 'Audio',
  'object_audio_param_id_type_long' => 'ID',
  'object_audio_param_access_hash_type_long' => 'Access hash',
  'object_audio_param_user_id_type_int' => 'User ID',
  'object_audio_param_date_type_int' => 'Date',
  'object_audio_param_duration_type_int' => 'Duration',
  'object_audio_param_mime_type_type_string' => 'Mime type',
  'object_audio_param_size_type_int' => 'Size',
  'object_audio_param_dc_id_type_int' => 'DC ID',
  'object_document_param_user_id_type_int' => 'User ID',
  'object_document_param_file_name_type_string' => 'File name',
  'object_auth.sentAppCode' => 'Sent app code',
  'object_auth.sentAppCode_param_phone_registered_type_Bool' => 'Phone registered?',
  'object_auth.sentAppCode_param_phone_code_hash_type_string' => 'Phone code hash',
  'object_auth.sentAppCode_param_send_call_timeout_type_int' => 'Send call timeout',
  'object_auth.sentAppCode_param_is_password_type_Bool' => 'Is password?',
  'object_contactFound' => 'Contact found',
  'object_contactFound_param_user_id_type_int' => 'User ID',
  'object_updateServiceNotification_param_popup_type_Bool' => 'Popup?',
  'object_inputMediaUploadedThumbDocument_param_attributes_type_Vector t' => 'Attributes',
  'object_userStatusRecently' => 'User status recently',
  'object_userStatusLastWeek' => 'User status last week',
  'object_userStatusLastMonth' => 'User status last month',
  'object_account.sentChangePhoneCode' => 'Sent change phone code',
  'object_account.sentChangePhoneCode_param_phone_code_hash_type_string' => 'Phone code hash',
  'object_account.sentChangePhoneCode_param_send_call_timeout_type_int' => 'Send call timeout',
  'object_messages.allStickers_param_hash_type_string' => 'Hash',
  'object_messages.allStickers_param_packs_type_Vector t' => 'Packs',
  'object_messages.allStickers_param_documents_type_Vector t' => 'Documents',
  'object_message_param_fwd_from_id_type_int' => 'Forwarded from ID',
  'object_message_param_fwd_date_type_int' => 'Forwarded date',
  'object_chatLocated' => 'Chat located',
  'object_chatLocated_param_chat_id_type_int' => 'Chat ID',
  'object_chatLocated_param_distance_type_int' => 'Distance',
  'object_messages.messageEmpty' => 'Empty message',
  'object_messages.statedMessages_param_pts_count_type_int' => 'Pts count',
  'object_messages.statedMessage_param_pts_count_type_int' => 'Pts count',
  'object_messages.sentMessage_param_pts_count_type_int' => 'Pts count',
  'object_updateReadMessages_param_pts_count_type_int' => 'Pts count',
  'object_updateShortMessage_param_fwd_from_id_type_int' => 'Fwd from ID',
  'object_updateShortMessage_param_fwd_date_type_int' => 'Fwd date',
  'object_updateShortChatMessage_param_fwd_from_id_type_int' => 'Fwd from ID',
  'object_updateShortChatMessage_param_fwd_date_type_int' => 'Fwd date',
  'object_messages.statedMessagesLinks_param_pts_count_type_int' => 'Pts count',
  'object_messages.statedMessageLink_param_pts_count_type_int' => 'Pts count',
  'object_messages.sentMessageLink_param_pts_count_type_int' => 'Pts count',
  'object_inputGeoChat' => 'Geo chat',
  'object_inputGeoChat_param_chat_id_type_int' => 'Chat ID',
  'object_inputGeoChat_param_access_hash_type_long' => 'Access hash',
  'object_inputNotifyGeoChatPeer' => 'Notify geo chat peer',
  'object_inputNotifyGeoChatPeer_param_peer_type_InputGeoChat' => 'Peer',
  'object_geoChat' => 'Geo chat',
  'object_geoChat_param_id_type_int' => 'ID',
  'object_geoChat_param_access_hash_type_long' => 'Access hash',
  'object_geoChat_param_title_type_string' => 'Title',
  'object_geoChat_param_address_type_string' => 'Address',
  'object_geoChat_param_venue_type_string' => 'Venue',
  'object_geoChat_param_geo_type_GeoPoint' => 'Geo',
  'object_geoChat_param_photo_type_ChatPhoto' => 'Photo',
  'object_geoChat_param_participants_count_type_int' => 'Participants count',
  'object_geoChat_param_date_type_int' => 'Date',
  'object_geoChat_param_checked_in_type_Bool' => 'Checked in?',
  'object_geoChat_param_version_type_int' => 'Version',
  'object_geoChatMessageEmpty' => 'Empty geo chat message',
  'object_geoChatMessageEmpty_param_chat_id_type_int' => 'Chat ID',
  'object_geoChatMessageEmpty_param_id_type_int' => 'ID',
  'object_geoChatMessage' => 'Geo chat message',
  'object_geoChatMessage_param_chat_id_type_int' => 'Chat ID',
  'object_geoChatMessage_param_id_type_int' => 'ID',
  'object_geoChatMessage_param_from_id_type_int' => 'From ID',
  'object_geoChatMessage_param_date_type_int' => 'Date',
  'object_geoChatMessage_param_message_type_string' => 'Message',
  'object_geoChatMessage_param_media_type_MessageMedia' => 'Media',
  'object_geoChatMessageService' => 'Geo chat message service',
  'object_geoChatMessageService_param_chat_id_type_int' => 'Chat ID',
  'object_geoChatMessageService_param_id_type_int' => 'ID',
  'object_geoChatMessageService_param_from_id_type_int' => 'From ID',
  'object_geoChatMessageService_param_date_type_int' => 'Date',
  'object_geoChatMessageService_param_action_type_MessageAction' => 'Action',
  'object_geochats.statedMessage' => 'Stated message',
  'object_geochats.statedMessage_param_message_type_GeoChatMessage' => 'Message',
  'object_geochats.statedMessage_param_chats_type_Vector t' => 'Chats',
  'object_geochats.statedMessage_param_users_type_Vector t' => 'Users',
  'object_geochats.statedMessage_param_seq_type_int' => 'Seq',
  'object_geochats.located' => 'Located',
  'object_geochats.located_param_results_type_Vector t' => 'Results',
  'object_geochats.located_param_messages_type_Vector t' => 'Messages',
  'object_geochats.located_param_chats_type_Vector t' => 'Chats',
  'object_geochats.located_param_users_type_Vector t' => 'Users',
  'object_geochats.messages' => 'Messages',
  'object_geochats.messages_param_messages_type_Vector t' => 'Messages',
  'object_geochats.messages_param_chats_type_Vector t' => 'Chats',
  'object_geochats.messages_param_users_type_Vector t' => 'Users',
  'object_geochats.messagesSlice' => 'Messages slice',
  'object_geochats.messagesSlice_param_count_type_int' => 'Count',
  'object_geochats.messagesSlice_param_messages_type_Vector t' => 'Messages',
  'object_geochats.messagesSlice_param_chats_type_Vector t' => 'Chats',
  'object_geochats.messagesSlice_param_users_type_Vector t' => 'Users',
  'object_messageActionGeoChatCreate' => 'Message action geo chat create',
  'object_messageActionGeoChatCreate_param_title_type_string' => 'Title',
  'object_messageActionGeoChatCreate_param_address_type_string' => 'Address',
  'object_messageActionGeoChatCheckin' => 'Message action geo chat checkin',
  'object_updateNewGeoChatMessage' => 'Update new geo chat message',
  'object_updateNewGeoChatMessage_param_message_type_GeoChatMessage' => 'Message',
  'object_messages.sentMessage_param_media_type_MessageMedia' => 'Media',
  'object_messages.sentMessageLink_param_media_type_MessageMedia' => 'Media',
  'object_inputMediaUploadedPhoto_param_caption_type_string' => 'Caption',
  'object_inputMediaPhoto_param_caption_type_string' => 'Caption',
  'object_inputMediaUploadedVideo_param_caption_type_string' => 'Caption',
  'object_inputMediaUploadedThumbVideo_param_caption_type_string' => 'Caption',
  'object_inputMediaVideo_param_caption_type_string' => 'Caption',
  'object_messageMediaPhoto_param_caption_type_string' => 'Caption',
  'object_messageMediaVideo_param_caption_type_string' => 'Caption',
  'object_botCommand' => 'Bot command',
  'object_botCommand_param_command_type_string' => 'Command',
  'object_botCommand_param_description_type_string' => 'Description',
  'object_botInfoEmpty' => 'Empty bot info',
  'object_botInfo_param_version_type_int' => 'Version',
  'object_botInfo_param_share_text_type_string' => 'Share text',
  'object_help.appChangelogEmpty' => 'Empty app changelog',
  'object_help.appChangelog' => 'App changelog',
  'object_help.appChangelog_param_text_type_string' => 'Text',
  'object_message_param_fwd_from_id_type_Peer' => 'Forwarded from ID',
  'object_updateShortMessage_param_fwd_from_id_type_Peer' => 'Fwd from ID',
  'object_updateShortChatMessage_param_fwd_from_id_type_Peer' => 'Fwd from ID',
  'object_channelFull_param_unread_important_count_type_int' => 'Unread important count',
  'object_dialogChannel' => 'Dialog channel',
  'object_dialogChannel_param_peer_type_Peer' => 'Peer',
  'object_dialogChannel_param_top_message_type_int' => 'Top message',
  'object_dialogChannel_param_top_important_message_type_int' => 'Top important message',
  'object_dialogChannel_param_read_inbox_max_id_type_int' => 'Read inbox max ID',
  'object_dialogChannel_param_unread_count_type_int' => 'Unread count',
  'object_dialogChannel_param_unread_important_count_type_int' => 'Unread important count',
  'object_dialogChannel_param_notify_settings_type_PeerNotifySettings' => 'Notify settings',
  'object_dialogChannel_param_pts_type_int' => 'Pts',
  'object_messageGroup' => 'Message group',
  'object_messageGroup_param_min_id_type_int' => 'Min ID',
  'object_messageGroup_param_max_id_type_int' => 'Max ID',
  'object_messageGroup_param_count_type_int' => 'Count',
  'object_messageGroup_param_date_type_int' => 'Date',
  'object_messages.channelMessages_param_collapsed_type_Vector t' => 'Collapsed',
  'object_updateChannelGroup' => 'Update channel group',
  'object_updateChannelGroup_param_channel_id_type_int' => 'Channel ID',
  'object_updateChannelGroup_param_group_type_MessageGroup' => 'Group',
  'object_updates.channelDifferenceTooLong_param_top_important_message_type_int' => 'Top important message',
  'object_updates.channelDifferenceTooLong_param_unread_important_count_type_int' => 'Unread important count',
  'object_channelMessagesFilterCollapsed' => 'Channel messages filter collapsed',
  'object_channelParticipantModerator' => 'Channel participant moderator',
  'object_channelParticipantModerator_param_user_id_type_int' => 'User ID',
  'object_channelParticipantModerator_param_inviter_id_type_int' => 'Inviter ID',
  'object_channelParticipantModerator_param_date_type_int' => 'Date',
  'object_channelParticipantEditor' => 'Channel participant editor',
  'object_channelParticipantEditor_param_user_id_type_int' => 'User ID',
  'object_channelParticipantEditor_param_inviter_id_type_int' => 'Inviter ID',
  'object_channelParticipantEditor_param_date_type_int' => 'Date',
  'object_channelParticipantKicked' => 'Channel participant kicked',
  'object_channelParticipantKicked_param_user_id_type_int' => 'User ID',
  'object_channelParticipantKicked_param_kicked_by_type_int' => 'Kicked by',
  'object_channelParticipantKicked_param_date_type_int' => 'Date',
  'object_channelRoleEmpty' => 'Empty channel role',
  'object_channelRoleModerator' => 'Channel role moderator',
  'object_channelRoleEditor' => 'Channel role editor',
  'object_inputChatEmpty' => 'Empty input chat',
  'object_inputChat' => 'Chat',
  'object_inputChat_param_chat_id_type_int' => 'Chat ID',
  'object_updateReadChannelInbox_param_peer_type_Peer' => 'Peer',
  'object_updateDeleteChannelMessages_param_peer_type_Peer' => 'Peer',
  'object_message_param_unread_type_true' => 'Unread?',
  'object_messageService_param_unread_type_true' => 'Unread?',
  'object_updateShortMessage_param_unread_type_true' => 'Unread?',
  'object_updateShortChatMessage_param_unread_type_true' => 'Unread?',
  'object_stickerSet_param_disabled_type_true' => 'Disabled?',
  'object_updateShortSentMessage_param_unread_type_true' => 'Unread?',
  'object_channel_param_kicked_type_true' => 'Kicked?',
  'object_channel_param_moderator_type_true' => 'Moderator?',
  'object_channelMessagesFilter_param_important_only_type_true' => 'Important only?',
  'object_messageActionChatDeactivate' => 'Message action chat deactivate',
  'object_messageActionChatActivate' => 'Message action chat activate',
  'object_user_param_restiction_reason_type_string' => 'Restiction reason',
  'object_channel_param_restiction_reason_type_string' => 'Restiction reason',
  'object_webPageExternal' => 'Web page external',
  'object_webPageExternal_param_url_type_string' => 'URL',
  'object_webPageExternal_param_display_url_type_string' => 'Display URL',
  'object_webPageExternal_param_type_type_string' => 'Type',
  'object_webPageExternal_param_title_type_string' => 'Title',
  'object_webPageExternal_param_description_type_string' => 'Description',
  'object_webPageExternal_param_thumb_url_type_string' => 'Thumbnail URL',
  'object_webPageExternal_param_content_url_type_string' => 'Content URL',
  'object_webPageExternal_param_w_type_int' => 'Width',
  'object_webPageExternal_param_h_type_int' => 'Height',
  'object_webPageExternal_param_duration_type_int' => 'Duration',
  'object_foundGif_param_webpage_type_WebPage' => 'Webpage',
  'object_inputMediaUploadedDocument_param_caption_type_string' => 'Caption',
  'object_inputMediaUploadedThumbDocument_param_caption_type_string' => 'Caption',
  'object_inputMediaDocument_param_caption_type_string' => 'Caption',
  'object_messageMediaDocument_param_caption_type_string' => 'Caption',
  'object_inputBotInlineMessageMediaAuto_param_caption_type_string' => 'Caption',
  'object_botInlineMessageMediaAuto_param_caption_type_string' => 'Caption',
  'object_botInlineMediaResultDocument' => 'Bot inline media result document',
  'object_botInlineMediaResultDocument_param_id_type_string' => 'ID',
  'object_botInlineMediaResultDocument_param_type_type_string' => 'Type',
  'object_botInlineMediaResultDocument_param_document_type_Document' => 'Document',
  'object_botInlineMediaResultDocument_param_send_message_type_BotInlineMessage' => 'Send message',
  'object_botInlineMediaResultPhoto' => 'Bot inline media result photo',
  'object_botInlineMediaResultPhoto_param_id_type_string' => 'ID',
  'object_botInlineMediaResultPhoto_param_type_type_string' => 'Type',
  'object_botInlineMediaResultPhoto_param_photo_type_Photo' => 'Photo',
  'object_botInlineMediaResultPhoto_param_send_message_type_BotInlineMessage' => 'Send message',
  'object_inputMediaVideo_param_video_type_InputVideo' => 'Video',
  'object_inputMediaAudio_param_audio_type_InputAudio' => 'Audio',
  'object_inputMediaDocument_param_document_id_type_InputDocument' => 'Document ID',
  'object_inputGeoPoint_param_latitude_type_double' => 'Latitude',
  'object_inputGeoPoint_param_longitude_type_double' => 'Longitude',
  'object_geoPoint_param_longitude_type_double' => 'Longitude',
  'object_geoPoint_param_latitude_type_double' => 'Latitude',
  'object_updateNewEncryptedMessage_param_encr_message_type_EncryptedMessage' => 'Encr message',
  'object_updateEncryption_param_encr_chat_type_EncryptedChat' => 'Encr chat',
  'object_updateNotifySettings_param_notify_peer_type_NotifyPeer' => 'Notify peer',
  'object_updateServiceNotification_param_message_text_type_string' => 'Message text',
  'object_updateNewChannelMessage_param_channel_pts_type_int' => 'Channel pts',
  'object_updateNewChannelMessage_param_channel_pts_count_type_int' => 'Channel pts count',
  'object_updateDeleteChannelMessages_param_channel_pts_type_int' => 'Channel pts',
  'object_updateDeleteChannelMessages_param_channel_pts_count_type_int' => 'Channel pts count',
  'object_updates.channelDifferenceEmpty_param_channel_pts_type_int' => 'Channel pts',
  'object_updates.channelDifferenceTooLong_param_channel_pts_type_int' => 'Channel pts',
  'object_updates.channelDifference_param_channel_pts_type_int' => 'Channel pts',
  'object_privacyKeyChatInvite' => 'Privacy key chat invite',
  'object_inputMediaUploadedThumbDocument_param_stickers_type_Vector t' => 'Stickers',
  'object_inputMediaPhotoExternal_param_caption_type_string' => 'Caption',
  'object_inputMediaDocumentExternal_param_caption_type_string' => 'Caption',
  'object_destroy_auth_key_ok' => 'Destroy auth key ok',
  'object_destroy_auth_key_none' => 'Destroy auth key none',
  'object_destroy_auth_key_fail' => 'Destroy auth key fail',
  'object_help.appChangelog_param_message_type_string' => 'Message',
  'object_help.appChangelog_param_media_type_MessageMedia' => 'Media',
  'object_help.appChangelog_param_entities_type_Vector t' => 'Entities',
  'object_pageBlockParagraph' => 'Page block paragraph',
  'object_pageBlockParagraph_param_text_type_RichText' => 'Text',
  'object_pageBlockPreformatted' => 'Page block preformatted',
  'object_pageBlockPreformatted_param_text_type_RichText' => 'Text',
  'object_pageBlockPreformatted_param_language_type_string' => 'Language',
  'object_pageBlockDivider' => 'Page block divider',
  'object_pageBlockAnchor' => 'Page block anchor',
  'object_pageBlockAnchor_param_name_type_string' => 'Name',
  'object_pageBlockCover' => 'Page block cover',
  'object_pageBlockCover_param_cover_type_PageBlock' => 'Cover',
  'object_pagePart_param_videos_type_Vector t' => 'Videos',
  'object_pageFull_param_videos_type_Vector t' => 'Videos',
  'object_phoneCallRequested_param_g_a_type_bytes' => 'G a',
  'object_resPQ_param_pq_type_string' => 'Pq',
  'object_p_q_inner_data_param_pq_type_string' => 'Pq',
  'object_p_q_inner_data_param_p_type_string' => 'P',
  'object_p_q_inner_data_param_q_type_string' => 'Q',
  'object_server_DH_params_ok_param_encrypted_answer_type_string' => 'Encrypted answer',
  'object_server_DH_inner_data_param_dh_prime_type_string' => 'Dh prime',
  'object_server_DH_inner_data_param_g_a_type_string' => 'G a',
  'object_client_DH_inner_data_param_g_b_type_string' => 'G b',
  'object_msgs_state_info_param_info_type_string' => 'Info',
  'object_msgs_all_info_param_info_type_string' => 'Info',
  'object_http_wait' => 'Http wait',
  'object_http_wait_param_max_delay_type_int' => 'Max delay',
  'object_http_wait_param_wait_after_type_int' => 'Wait after',
  'object_http_wait_param_max_wait_type_int' => 'Max wait',
  'object_ipPort' => 'Ip port',
  'object_ipPort_param_ipv4_type_int' => 'Ipv4',
  'object_ipPort_param_port_type_int' => 'Port',
  'object_help.configSimple' => 'Config simple',
  'object_help.configSimple_param_date_type_int' => 'Date',
  'object_help.configSimple_param_expires_type_int' => 'Expires',
  'object_help.configSimple_param_dc_id_type_int' => 'DC ID',
  'object_help.configSimple_param_ip_port_list_type_Vector t' => 'Ip port list',
  'object_inputMessagesFilterMyMentionsUnread' => 'Messages filter my mentions unread',
  'method_initConnection_param_proxy_type_InputClientProxy' => 'The current proxy',
  'method_account.registerDevice_param_secret_type_bytes' => 'Secret',
  'method_account.getAllSecureValues' => 'Get all secure telegram passport values',
  'method_account.getSecureValue' => 'Get secure value for telegram passport',
  'method_account.getSecureValue_param_types_type_Vector t' => 'Get telegram passport secure parameters',
  'method_account.saveSecureValue' => 'Save telegram passport secure value',
  'method_account.saveSecureValue_param_value_type_InputSecureValue' => 'Encrypted value',
  'method_account.saveSecureValue_param_secure_secret_id_type_long' => 'Secret',
  'method_account.deleteSecureValue' => 'Delete secure telegram passport value',
  'method_account.deleteSecureValue_param_types_type_Vector t' => 'The values to delete',
  'method_account.getAuthorizationForm' => 'Bots only: get telegram passport authorization form',
  'method_account.getAuthorizationForm_param_bot_id_type_int' => 'Bot ID',
  'method_account.getAuthorizationForm_param_scope_type_string' => 'Scope',
  'method_account.getAuthorizationForm_param_public_key_type_string' => 'Bot\'s public key',
  'method_account.acceptAuthorization' => 'Accept telegram passport authorization',
  'method_account.acceptAuthorization_param_bot_id_type_int' => 'Bot ID',
  'method_account.acceptAuthorization_param_scope_type_string' => 'Scope',
  'method_account.acceptAuthorization_param_public_key_type_string' => 'The bot\'s RSA public key',
  'method_account.acceptAuthorization_param_value_hashes_type_Vector t' => 'Hashes of the encrypted credentials',
  'method_account.acceptAuthorization_param_credentials_type_SecureCredentialsEncrypted' => 'Encrypted secure credentials',
  'method_account.sendVerifyPhoneCode' => 'Send phone verification code',
  'method_account.sendVerifyPhoneCode_param_allow_flashcall_type_true' => 'Allow phone calls?',
  'method_account.sendVerifyPhoneCode_param_phone_number_type_string' => 'The phone number',
  'method_account.sendVerifyPhoneCode_param_current_number_type_Bool' => 'Is this the current number?',
  'method_account.verifyPhone' => 'Verify phone number',
  'method_account.verifyPhone_param_phone_number_type_string' => 'The phone number',
  'method_account.verifyPhone_param_phone_code_hash_type_string' => 'The phone code hash returned by account.sendVerifyPhoneCode',
  'method_account.verifyPhone_param_phone_code_type_string' => 'The phone code type returned by account.sendVerifyPhoneCode',
  'method_account.sendVerifyEmailCode' => 'Send email verification code',
  'method_account.sendVerifyEmailCode_param_email_type_string' => 'Email',
  'method_account.verifyEmail' => 'Verify email address',
  'method_account.verifyEmail_param_email_type_string' => 'The email address',
  'method_account.verifyEmail_param_code_type_string' => 'The received code',
  'method_users.setSecureValueErrors' => 'Set secure value error for telegram passport',
  'method_users.setSecureValueErrors_param_id_type_InputUser' => 'The user ID',
  'method_users.setSecureValueErrors_param_errors_type_Vector t' => 'The errors',
  'method_messages.search_param_hash_type_int' => 'IDs of messages you already fetched',
  'method_messages.report' => 'Report a message',
  'method_messages.report_param_peer_type_InputPeer' => 'The user that sent the messages',
  'method_messages.report_param_id_type_Vector t' => 'The messages to report',
  'method_messages.report_param_reason_type_ReportReason' => 'The reason why you\'re sending this report',
  'method_messages.getStickers_param_hash_type_int' => 'IDs of previously fetched stickers',
  'method_messages.editMessage_param_media_type_InputMedia' => 'The media to substitute',
  'method_messages.editInlineBotMessage_param_media_type_InputMedia' => 'The media to substitute',
  'method_messages.toggleDialogPin_param_peer_type_InputDialogPeer' => 'The dialog to pin',
  'method_messages.getRecentLocations_param_hash_type_int' => 'IDs of previously fetched locations',
  'method_messages.searchStickerSets' => 'Find a sticker set',
  'method_messages.searchStickerSets_param_exclude_featured_type_true' => 'Exclude featured sticker sets from the search?',
  'method_messages.searchStickerSets_param_q_type_string' => 'The search query',
  'method_messages.searchStickerSets_param_hash_type_int' => 'Ids of stickers you already cached',
  'method_upload.getFileHashes' => 'Get file hashes',
  'method_upload.getFileHashes_param_location_type_InputFileLocation' => 'The file',
  'method_upload.getFileHashes_param_offset_type_int' => 'Offset',
  'method_help.getProxyData' => 'Get information about the current proxy',
  'method_help.getTermsOfServiceUpdate' => 'Get updated TOS',
  'method_help.acceptTermsOfService' => 'Accept telegram\'s TOS',
  'method_help.acceptTermsOfService_param_id_type_DataJSON' => 'TOS',
  'method_help.getDeepLinkInfo' => 'Get deep link info',
  'method_help.getDeepLinkInfo_param_path_type_string' => 'Deep link',
  'object_inputSecureFileLocation' => 'Secure file location',
  'object_inputSecureFileLocation_param_id_type_long' => 'ID',
  'object_inputSecureFileLocation_param_access_hash_type_long' => 'Access hash',
  'object_messageActionBotAllowed' => 'Message action bot allowed',
  'object_messageActionBotAllowed_param_domain_type_string' => 'Domain',
  'object_messageActionSecureValuesSentMe' => 'Message action secure values sent me',
  'object_messageActionSecureValuesSentMe_param_values_type_Vector t' => 'Values',
  'object_messageActionSecureValuesSentMe_param_credentials_type_SecureCredentialsEncrypted' => 'Credentials',
  'object_messageActionSecureValuesSent' => 'Message action secure values sent',
  'object_messageActionSecureValuesSent_param_types_type_Vector t' => 'Types',
  'object_auth.sentCode_param_terms_of_service_type_help.TermsOfService' => 'Terms of service',
  'object_inputPeerNotifySettings_param_silent_type_Bool' => 'Silent?',
  'object_peerNotifySettings_param_silent_type_Bool' => 'Silent?',
  'object_updateDialogPinned_param_peer_type_DialogPeer' => 'Peer',
  'object_upload.fileCdnRedirect_param_file_hashes_type_Vector t' => 'File hashes',
  'object_dcOption_param_secret_type_bytes' => 'Secret',
  'object_config_param_preload_featured_stickers_type_true' => 'Preload featured stickers?',
  'object_config_param_ignore_phone_entities_type_true' => 'Ignore phone entities?',
  'object_config_param_revoke_pm_inbox_type_true' => 'Revoke pm inbox?',
  'object_config_param_blocked_mode_type_true' => 'Blocked mode?',
  'object_config_param_revoke_time_limit_type_int' => 'Revoke time limit',
  'object_config_param_revoke_pm_time_limit_type_int' => 'Revoke pm time limit',
  'object_config_param_autoupdate_url_prefix_type_string' => 'Autoupdate URL prefix',
  'object_messages.stickers_param_hash_type_int' => 'Hash',
  'object_account.noPassword_param_new_secure_salt_type_bytes' => 'New secure salt',
  'object_account.noPassword_param_secure_random_type_bytes' => 'Secure random',
  'object_account.password_param_has_recovery_type_true' => 'Has recovery?',
  'object_account.password_param_has_secure_values_type_true' => 'Has secure values?',
  'object_account.password_param_new_secure_salt_type_bytes' => 'New secure salt',
  'object_account.password_param_secure_random_type_bytes' => 'Secure random',
  'object_account.passwordSettings_param_secure_salt_type_bytes' => 'Secure salt',
  'object_account.passwordSettings_param_secure_secret_type_bytes' => 'Secure secret',
  'object_account.passwordSettings_param_secure_secret_id_type_long' => 'Secure secret ID',
  'object_account.passwordInputSettings_param_new_secure_salt_type_bytes' => 'New secure salt',
  'object_account.passwordInputSettings_param_new_secure_secret_type_bytes' => 'New secure secret',
  'object_account.passwordInputSettings_param_new_secure_secret_id_type_long' => 'New secure secret ID',
  'object_stickerSet_param_installed_date_type_int' => 'Installed date',
  'object_messageEntityPhone' => 'Message entity phone',
  'object_messageEntityPhone_param_offset_type_int' => 'Offset',
  'object_messageEntityPhone_param_length_type_int' => 'Length',
  'object_messageEntityCashtag' => 'Message entity cashtag',
  'object_messageEntityCashtag_param_offset_type_int' => 'Offset',
  'object_messageEntityCashtag_param_length_type_int' => 'Length',
  'object_help.termsOfService_param_popup_type_true' => 'Popup?',
  'object_help.termsOfService_param_id_type_DataJSON' => 'ID',
  'object_help.termsOfService_param_entities_type_Vector t' => 'Entities',
  'object_help.termsOfService_param_min_age_confirm_type_int' => 'Min age confirm',
  'object_inputBotInlineMessageMediaVenue_param_venue_type_type_string' => 'Venue type',
  'object_inputBotInlineResult_param_thumb_type_InputWebDocument' => 'Thumbnail',
  'object_inputBotInlineResult_param_content_type_InputWebDocument' => 'Content',
  'object_botInlineMessageMediaVenue_param_venue_type_type_string' => 'Venue type',
  'object_botInlineResult_param_thumb_type_WebDocument' => 'Thumbnailnail',
  'object_botInlineResult_param_content_type_WebDocument' => 'Content',
  'object_messages.recentStickers_param_packs_type_Vector t' => 'Packs',
  'object_messages.recentStickers_param_dates_type_Vector t' => 'Dates',
  'object_webDocumentNoProxy' => 'Web document no proxy',
  'object_webDocumentNoProxy_param_url_type_string' => 'URL',
  'object_webDocumentNoProxy_param_size_type_int' => 'Size',
  'object_webDocumentNoProxy_param_mime_type_type_string' => 'Mime type',
  'object_webDocumentNoProxy_param_attributes_type_Vector t' => 'Attributes',
  'object_inputWebFileGeoPointLocation' => 'Web file geo point location',
  'object_inputWebFileGeoPointLocation_param_geo_point_type_InputGeoPoint' => 'Geo point',
  'object_inputWebFileGeoPointLocation_param_w_type_int' => 'Width',
  'object_inputWebFileGeoPointLocation_param_h_type_int' => 'Height',
  'object_inputWebFileGeoPointLocation_param_zoom_type_int' => 'Zoom',
  'object_inputWebFileGeoPointLocation_param_scale_type_int' => 'Scale',
  'object_inputWebFileGeoMessageLocation' => 'Web file geo message location',
  'object_inputWebFileGeoMessageLocation_param_peer_type_InputPeer' => 'Peer',
  'object_inputWebFileGeoMessageLocation_param_msg_id_type_int' => 'Msg ID',
  'object_inputWebFileGeoMessageLocation_param_w_type_int' => 'Width',
  'object_inputWebFileGeoMessageLocation_param_h_type_int' => 'Height',
  'object_inputWebFileGeoMessageLocation_param_zoom_type_int' => 'Zoom',
  'object_inputWebFileGeoMessageLocation_param_scale_type_int' => 'Scale',
  'object_channelAdminRights_param_manage_call_type_true' => 'Manage group calls',
  'object_inputDialogPeer' => 'Dialog peer',
  'object_inputDialogPeer_param_peer_type_InputPeer' => 'Peer',
  'object_dialogPeer' => 'Dialog peer',
  'object_dialogPeer_param_peer_type_Peer' => 'Peer',
  'object_messages.foundStickerSetsNotModified' => 'Found sticker sets not modified',
  'object_messages.foundStickerSets' => 'Found sticker sets',
  'object_messages.foundStickerSets_param_hash_type_int' => 'Hash',
  'object_messages.foundStickerSets_param_sets_type_Vector t' => 'Sets',
  'object_fileHash' => 'File hash',
  'object_fileHash_param_offset_type_int' => 'Offset',
  'object_fileHash_param_limit_type_int' => 'Limit',
  'object_fileHash_param_hash_type_bytes' => 'Hash',
  'object_inputClientProxy' => 'Client proxy',
  'object_inputClientProxy_param_address_type_string' => 'Address',
  'object_inputClientProxy_param_port_type_int' => 'Port',
  'object_help.proxyDataEmpty' => 'Empty proxy data',
  'object_help.proxyDataEmpty_param_expires_type_int' => 'Expires',
  'object_help.proxyDataPromo' => 'Proxy data promo',
  'object_help.proxyDataPromo_param_expires_type_int' => 'Expires',
  'object_help.proxyDataPromo_param_peer_type_Peer' => 'Peer',
  'object_help.proxyDataPromo_param_chats_type_Vector t' => 'Chats',
  'object_help.proxyDataPromo_param_users_type_Vector t' => 'Users',
  'object_help.termsOfServiceUpdateEmpty' => 'Empty terms of service update',
  'object_help.termsOfServiceUpdateEmpty_param_expires_type_int' => 'Expires',
  'object_help.termsOfServiceUpdate' => 'Terms of service update',
  'object_help.termsOfServiceUpdate_param_expires_type_int' => 'Expires',
  'object_help.termsOfServiceUpdate_param_terms_of_service_type_help.TermsOfService' => 'Terms of service',
  'object_inputSecureFileUploaded' => 'Secure file uploaded',
  'object_inputSecureFileUploaded_param_id_type_long' => 'ID',
  'object_inputSecureFileUploaded_param_parts_type_int' => 'Parts',
  'object_inputSecureFileUploaded_param_md5_checksum_type_string' => 'Md5 checksum',
  'object_inputSecureFileUploaded_param_file_hash_type_bytes' => 'File hash',
  'object_inputSecureFileUploaded_param_secret_type_bytes' => 'Secret',
  'object_inputSecureFile' => 'Secure file',
  'object_inputSecureFile_param_id_type_long' => 'ID',
  'object_inputSecureFile_param_access_hash_type_long' => 'Access hash',
  'object_secureFileEmpty' => 'Empty secure file',
  'object_secureFile' => 'Secure file',
  'object_secureFile_param_id_type_long' => 'ID',
  'object_secureFile_param_access_hash_type_long' => 'Access hash',
  'object_secureFile_param_size_type_int' => 'Size',
  'object_secureFile_param_dc_id_type_int' => 'DC ID',
  'object_secureFile_param_date_type_int' => 'Date',
  'object_secureFile_param_file_hash_type_bytes' => 'File hash',
  'object_secureFile_param_secret_type_bytes' => 'Secret',
  'object_secureData' => 'Secure data',
  'object_secureData_param_data_type_bytes' => 'Data',
  'object_secureData_param_data_hash_type_bytes' => 'Data hash',
  'object_secureData_param_secret_type_bytes' => 'Secret',
  'object_securePlainPhone' => 'Secure plain phone',
  'object_securePlainPhone_param_phone_type_string' => 'Phone',
  'object_securePlainEmail' => 'Secure plain email',
  'object_securePlainEmail_param_email_type_string' => 'Email',
  'object_secureValueTypePersonalDetails' => 'Secure value type personal details',
  'object_secureValueTypePassport' => 'Secure value type passport',
  'object_secureValueTypeDriverLicense' => 'Secure value type driver license',
  'object_secureValueTypeIdentityCard' => 'Secure value type IDentity card',
  'object_secureValueTypeInternalPassport' => 'Secure value type internal passport',
  'object_secureValueTypeAddress' => 'Secure value type address',
  'object_secureValueTypeUtilityBill' => 'Secure value type utility bill',
  'object_secureValueTypeBankStatement' => 'Secure value type bank statement',
  'object_secureValueTypeRentalAgreement' => 'Secure value type rental agreement',
  'object_secureValueTypePassportRegistration' => 'Secure value type passport registration',
  'object_secureValueTypeTemporaryRegistration' => 'Secure value type temporary registration',
  'object_secureValueTypePhone' => 'Secure value type phone',
  'object_secureValueTypeEmail' => 'Secure value type email',
  'object_secureValue' => 'Secure value',
  'object_secureValue_param_type_type_SecureValueType' => 'Type',
  'object_secureValue_param_data_type_SecureData' => 'Data',
  'object_secureValue_param_front_side_type_SecureFile' => 'Front side',
  'object_secureValue_param_reverse_side_type_SecureFile' => 'Reverse side',
  'object_secureValue_param_selfie_type_SecureFile' => 'Selfie',
  'object_secureValue_param_files_type_Vector t' => 'Files',
  'object_secureValue_param_plain_data_type_SecurePlainData' => 'Plain data',
  'object_secureValue_param_hash_type_bytes' => 'Hash',
  'object_inputSecureValue' => 'Secure value',
  'object_inputSecureValue_param_type_type_SecureValueType' => 'Type',
  'object_inputSecureValue_param_data_type_SecureData' => 'Data',
  'object_inputSecureValue_param_front_side_type_InputSecureFile' => 'Front side',
  'object_inputSecureValue_param_reverse_side_type_InputSecureFile' => 'Reverse side',
  'object_inputSecureValue_param_selfie_type_InputSecureFile' => 'Selfie',
  'object_inputSecureValue_param_files_type_Vector t' => 'Files',
  'object_inputSecureValue_param_plain_data_type_SecurePlainData' => 'Plain data',
  'object_secureValueHash' => 'Secure value hash',
  'object_secureValueHash_param_type_type_SecureValueType' => 'Type',
  'object_secureValueHash_param_hash_type_bytes' => 'Hash',
  'object_secureValueErrorData' => 'Secure value error data',
  'object_secureValueErrorData_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorData_param_data_hash_type_bytes' => 'Data hash',
  'object_secureValueErrorData_param_field_type_string' => 'Field',
  'object_secureValueErrorData_param_text_type_string' => 'Text',
  'object_secureValueErrorFrontSide' => 'Secure value error front side',
  'object_secureValueErrorFrontSide_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorFrontSide_param_file_hash_type_bytes' => 'File hash',
  'object_secureValueErrorFrontSide_param_text_type_string' => 'Text',
  'object_secureValueErrorReverseSide' => 'Secure value error reverse side',
  'object_secureValueErrorReverseSide_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorReverseSide_param_file_hash_type_bytes' => 'File hash',
  'object_secureValueErrorReverseSide_param_text_type_string' => 'Text',
  'object_secureValueErrorSelfie' => 'Secure value error selfie',
  'object_secureValueErrorSelfie_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorSelfie_param_file_hash_type_bytes' => 'File hash',
  'object_secureValueErrorSelfie_param_text_type_string' => 'Text',
  'object_secureValueErrorFile' => 'Secure value error file',
  'object_secureValueErrorFile_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorFile_param_file_hash_type_bytes' => 'File hash',
  'object_secureValueErrorFile_param_text_type_string' => 'Text',
  'object_secureValueErrorFiles' => 'Secure value error files',
  'object_secureValueErrorFiles_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorFiles_param_file_hash_type_Vector t' => 'File hash',
  'object_secureValueErrorFiles_param_text_type_string' => 'Text',
  'object_secureCredentialsEncrypted' => 'Secure credentials encrypted',
  'object_secureCredentialsEncrypted_param_data_type_bytes' => 'Data',
  'object_secureCredentialsEncrypted_param_hash_type_bytes' => 'Hash',
  'object_secureCredentialsEncrypted_param_secret_type_bytes' => 'Secret',
  'object_account.authorizationForm' => 'Telegram passport authorization form',
  'object_account.authorizationForm_param_selfie_required_type_true' => 'Selfie required?',
  'object_account.authorizationForm_param_required_types_type_Vector t' => 'Required types',
  'object_account.authorizationForm_param_values_type_Vector t' => 'Values',
  'object_account.authorizationForm_param_errors_type_Vector t' => 'Errors',
  'object_account.authorizationForm_param_users_type_Vector t' => 'Users',
  'object_account.authorizationForm_param_privacy_policy_url_type_string' => 'Privacy policy URL',
  'object_account.sentEmailCode' => 'Sent email code',
  'object_account.sentEmailCode_param_email_pattern_type_string' => 'Email pattern',
  'object_account.sentEmailCode_param_length_type_int' => 'Length',
  'object_help.deepLinkInfoEmpty' => 'Empty deep link info',
  'object_help.deepLinkInfo' => 'Deep link info',
  'object_help.deepLinkInfo_param_update_app_type_true' => 'Update app?',
  'object_help.deepLinkInfo_param_message_type_string' => 'Message',
  'object_help.deepLinkInfo_param_entities_type_Vector t' => 'Entities',
  'method_invokeWithMessagesRange' => 'Invoke with messages range',
  'method_invokeWithMessagesRange_param_range_type_MessageRange' => 'The range',
  'method_invokeWithMessagesRange_param_query_type_!X' => 'The query',
  'method_invokeWithTakeout' => 'Invoke method from takeout session',
  'method_invokeWithTakeout_param_takeout_id_type_long' => 'The takeout session ID',
  'method_invokeWithTakeout_param_query_type_!X' => 'The query',
  'method_account.initTakeoutSession' => 'Start account exporting session',
  'method_account.initTakeoutSession_param_contacts_type_true' => 'Export contacts?',
  'method_account.initTakeoutSession_param_message_users_type_true' => 'Export users?',
  'method_account.initTakeoutSession_param_message_chats_type_true' => 'Export chats?',
  'method_account.initTakeoutSession_param_message_megagroups_type_true' => 'Export supergroups?',
  'method_account.initTakeoutSession_param_message_channels_type_true' => 'Export channel messages?',
  'method_account.initTakeoutSession_param_files_type_true' => 'Export files?',
  'method_account.initTakeoutSession_param_file_max_size_type_int' => 'Export only files smaller than this size',
  'method_account.finishTakeoutSession' => 'Finish account exporting session',
  'method_account.finishTakeoutSession_param_success_type_true' => 'Did the data export succeed?',
  'method_contacts.getSaved' => 'Get saved contacts',
  'method_messages.getSplitRanges' => 'Get message ranges to fetch',
  'method_channels.getLeftChannels' => 'Get all channels you left',
  'method_channels.getLeftChannels_param_offset_type_int' => 'Offset',
  'object_ipPortSecret' => 'Ip port secret',
  'object_ipPortSecret_param_ipv4_type_int' => 'Ipv4',
  'object_ipPortSecret_param_port_type_int' => 'Port',
  'object_ipPortSecret_param_secret_type_bytes' => 'Secret',
  'object_accessPointRule' => 'Access point rule',
  'object_accessPointRule_param_phone_prefix_rules_type_string' => 'Phone prefix rules',
  'object_accessPointRule_param_dc_id_type_int' => 'DC ID',
  'object_accessPointRule_param_ips_type_vector' => 'Ips',
  'object_help.configSimple_param_rules_type_vector' => 'Rules',
  'object_inputTakeoutFileLocation' => 'Takeout file location',
  'object_savedPhoneContact' => 'Saved phone contact',
  'object_savedPhoneContact_param_phone_type_string' => 'Phone',
  'object_savedPhoneContact_param_first_name_type_string' => 'First name',
  'object_savedPhoneContact_param_last_name_type_string' => 'Last name',
  'object_savedPhoneContact_param_date_type_int' => 'Date',
  'object_account.takeout' => 'Takeout',
  'object_account.takeout_param_id_type_long' => 'ID',
  'method_contacts.toggleTopPeers' => 'Toggle top peers',
  'method_contacts.toggleTopPeers_param_enabled_type_Bool' => 'Enable or disable top peer',
  'method_messages.getDialogs_param_hash_type_int' => 'IDs of previously fetched dialogs',
  'method_messages.markDialogUnread' => 'Mark dialog as unread ',
  'method_messages.markDialogUnread_param_unread_type_true' => 'Should it be marked or unmarked as read',
  'method_messages.markDialogUnread_param_peer_type_InputDialogPeer' => 'The dialog to mark as unread',
  'method_messages.getDialogUnreadMarks' => 'Get dialogs marked as unread manually',
  'object_inputMediaContact_param_vcard_type_string' => 'Vcard',
  'object_messageMediaContact_param_vcard_type_string' => 'Vcard',
  'object_dialog_param_unread_mark_type_true' => 'Unread mark?',
  'object_geoPoint_param_access_hash_type_long' => 'Access hash',
  'object_messages.dialogsNotModified' => 'Dialogs not modified',
  'object_messages.dialogsNotModified_param_count_type_int' => 'Count',
  'object_updateDialogUnreadMark' => 'Update dialog unread mark',
  'object_updateDialogUnreadMark_param_unread_type_true' => 'Unread?',
  'object_updateDialogUnreadMark_param_peer_type_DialogPeer' => 'Peer',
  'object_config_param_dc_txt_domain_name_type_string' => 'DC txt domain name',
  'object_config_param_gif_search_username_type_string' => 'Gif search username',
  'object_config_param_venue_search_username_type_string' => 'Venue search username',
  'object_config_param_img_search_username_type_string' => 'Img search username',
  'object_config_param_static_maps_provider_type_string' => 'Static maps provider',
  'object_config_param_caption_length_max_type_int' => 'Caption length max',
  'object_config_param_message_length_max_type_int' => 'Message length max',
  'object_config_param_webfile_dc_id_type_int' => 'Webfile DC ID',
  'object_inputBotInlineMessageMediaContact_param_vcard_type_string' => 'Vcard',
  'object_botInlineMessageMediaContact_param_vcard_type_string' => 'Vcard',
  'object_contacts.topPeersDisabled' => 'Top peers disabled',
  'object_draftMessageEmpty_param_date_type_int' => 'Date',
  'object_inputWebFileGeoPointLocation_param_access_hash_type_long' => 'Access hash',
  'method_contacts.getContacts_param_hash_type_Vector t' => 'User IDs of previously cached contacts',
  'method_contacts.getTopPeers_param_hash_type_Vector t' => 'Peer IDs of previously cached peers',
  'method_messages.getDialogs_param_hash_type_Vector t' => 'IDs of previously fetched dialogs',
  'method_messages.getHistory_param_hash_type_Vector t' => 'IDs of messages you already fetched',
  'method_messages.search_param_hash_type_Vector t' => 'The IDs of messages you already fetched',
  'method_messages.getStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
  'method_messages.getAllStickers_param_hash_type_Vector t' => 'The hash parameter of the previous result of this method',
  'method_messages.getSavedGifs_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
  'method_messages.getFeaturedStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
  'method_messages.getRecentStickers_param_hash_type_Vector t' => 'IDs the hash parameter of the previous result of this method',
  'method_messages.getMaskStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
  'method_messages.getWebPage_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
  'method_messages.getFavedStickers_param_hash_type_Vector t' => ' the hash parameter of the previous result of this method',
  'method_messages.getRecentLocations_param_hash_type_Vector t' => 'IDs of locations you already fetched',
  'method_messages.searchStickerSets_param_hash_type_Vector t' => 'The IDs of stickersets you already fetched',
  'method_channels.getParticipants_param_hash_type_Vector t' => 'IDs of previously fetched participants',
  'method_auth.checkPassword_param_password_type_InputCheckPasswordSRP' => 'You cannot use this method directly, use the complete_2fa_login method instead (see https://docs.madelineproto.xyz for more info)',
  'method_account.getPasswordSettings_param_password_type_InputCheckPasswordSRP' => 'You cannot use this method directly; use $MadelineProto->update_2fa($params), instead (see https://docs.madelineproto.xyz for more info)',
  'method_account.updatePasswordSettings_param_password_type_InputCheckPasswordSRP' => 'You cannot use this method directly; use $MadelineProto->update_2fa($params), instead (see https://docs.madelineproto.xyz for more info)',
  'method_account.getTmpPassword_param_password_type_InputCheckPasswordSRP' => 'Password',
  'method_account.confirmPasswordEmail' => 'Confirm password recovery using email',
  'method_account.confirmPasswordEmail_param_code_type_string' => 'Code',
  'method_account.resendPasswordEmail' => 'Resend password recovery email',
  'method_account.cancelPasswordEmail' => 'Cancel password recovery email',
  'method_account.getContactSignUpNotification' => 'Contact signup notification setting value',
  'method_account.setContactSignUpNotification' => 'Set contact sign up notification',
  'method_account.setContactSignUpNotification_param_silent_type_Bool' => 'Silent?',
  'method_account.getNotifyExceptions' => 'Get notification exceptions',
  'method_account.getNotifyExceptions_param_compare_sound_type_true' => 'Compare sound?',
  'method_account.getNotifyExceptions_param_peer_type_InputNotifyPeer' => 'Peer',
  'method_contacts.getContactIDs' => 'Get contacts by IDs',
  'method_contacts.getContactIDs_param_hash_type_Vector t' => 'Previously fetched IDs',
  'method_contacts.deleteByPhones' => 'Delete contacts by phones',
  'method_contacts.deleteByPhones_param_phones_type_Vector t' => 'Phones',
  'method_messages.sendInlineBotResult_param_hide_via_type_true' => 'Hide "via @bot"',
  'method_messages.clearAllDrafts' => 'Clear all drafts',
  'method_messages.updatePinnedMessage' => 'Update pinned message (private chat only)',
  'method_messages.updatePinnedMessage_param_silent_type_true' => 'Silent?',
  'method_messages.updatePinnedMessage_param_peer_type_InputPeer' => 'Peer',
  'method_messages.updatePinnedMessage_param_id_type_int' => 'Message ID',
  'method_messages.sendVote' => 'Send vote',
  'method_messages.sendVote_param_peer_type_InputPeer' => 'Peer',
  'method_messages.sendVote_param_msg_id_type_int' => 'Message ID',
  'method_messages.sendVote_param_options_type_Vector t' => 'Options',
  'method_messages.getPollResults' => 'Get poll results',
  'method_messages.getPollResults_param_peer_type_InputPeer' => 'Peer',
  'method_messages.getPollResults_param_msg_id_type_int' => 'Message ID',
  'method_messages.getOnlines' => 'Get online users',
  'method_messages.getOnlines_param_peer_type_InputPeer' => 'Peer',
  'method_messages.getStatsURL' => 'Get stats URL',
  'method_messages.getStatsURL_param_peer_type_InputPeer' => 'Peer',
  'method_help.getAppUpdate_param_source_type_string' => 'Source',
  'method_help.getAppConfig' => 'Get app config',
  'method_help.getPassportConfig' => 'Get passport config',
  'method_help.getPassportConfig_param_hash_type_Vector t' => 'Hash',
  'method_help.getSupportName' => 'Get support name',
  'method_help.getUserInfo' => 'Get user info',
  'method_help.getUserInfo_param_user_id_type_InputUser' => 'User ID',
  'method_help.editUserInfo' => 'Edit user info',
  'method_help.editUserInfo_param_user_id_type_InputUser' => 'User ID',
  'method_help.editUserInfo_param_message_type_string' => 'Message',
  'method_help.editUserInfo_param_entities_type_Vector t' => 'Entities',
  'method_langpack.getLangPack_param_lang_pack_type_string' => 'Lang pack',
  'method_langpack.getStrings_param_lang_pack_type_string' => 'Lang pack',
  'method_langpack.getDifference_param_lang_code_type_string' => 'Lang code',
  'method_langpack.getLanguages_param_lang_pack_type_string' => 'Lang pack',
  'method_langpack.getLanguage' => 'Get language',
  'method_langpack.getLanguage_param_lang_pack_type_string' => 'Lang pack',
  'method_langpack.getLanguage_param_lang_code_type_string' => 'Lang code',
  'object_inputMediaGeoLive_param_stopped_type_true' => 'Stopped?',
  'object_inputMediaPoll' => 'Media poll',
  'object_inputMediaPoll_param_poll_type_Poll' => 'Poll',
  'object_inputPhoto_param_file_reference_type_bytes' => 'File reference',
  'object_inputFileLocation_param_file_reference_type_bytes' => 'File reference',
  'object_inputDocumentFileLocation_param_file_reference_type_bytes' => 'File reference',
  'object_fileLocation_param_file_reference_type_bytes' => 'File reference',
  'object_chatFull_param_pinned_msg_id_type_int' => 'Pinned msg ID',
  'object_channelFull_param_can_view_stats_type_true' => 'Can view stats?',
  'object_channelFull_param_online_count_type_int' => 'Online count',
  'object_message_param_from_scheduled_type_true' => 'From scheduled?',
  'object_messageMediaPoll' => 'Message media poll',
  'object_messageMediaPoll_param_poll_type_Poll' => 'Poll',
  'object_messageMediaPoll_param_results_type_PollResults' => 'Results',
  'object_messageActionContactSignUp' => 'Message action contact sign up',
  'object_photo_param_file_reference_type_bytes' => 'File reference',
  'object_inputNotifyBroadcasts' => 'Notify broadcasts',
  'object_inputReportReasonChildAbuse' => 'Report reason child abuse',
  'object_inputReportReasonCopyright' => 'Report reason copyright',
  'object_userFull_param_can_pin_message_type_true' => 'Can pin message?',
  'object_userFull_param_pinned_msg_id_type_int' => 'Pinned msg ID',
  'object_messages.channelMessages_param_inexact_type_true' => 'Inexact?',
  'object_updateLangPackTooLong_param_lang_code_type_string' => 'Lang code',
  'object_updateUserPinnedMessage' => 'Update user pinned message',
  'object_updateUserPinnedMessage_param_user_id_type_int' => 'User ID',
  'object_updateUserPinnedMessage_param_id_type_int' => 'ID',
  'object_updateChatPinnedMessage' => 'Update chat pinned message',
  'object_updateChatPinnedMessage_param_chat_id_type_int' => 'Chat ID',
  'object_updateChatPinnedMessage_param_id_type_int' => 'ID',
  'object_updateMessagePoll' => 'Update message poll',
  'object_updateMessagePoll_param_poll_id_type_long' => 'Poll ID',
  'object_updateMessagePoll_param_poll_type_Poll' => 'Poll',
  'object_updateMessagePoll_param_results_type_PollResults' => 'Results',
  'object_config_param_pfs_enabled_type_true' => 'Pfs enabled?',
  'object_config_param_base_lang_pack_version_type_int' => 'Base lang pack version',
  'object_help.appUpdate_param_popup_type_true' => 'Popup?',
  'object_help.appUpdate_param_version_type_string' => 'Version',
  'object_help.appUpdate_param_entities_type_Vector t' => 'Entities',
  'object_help.appUpdate_param_document_type_Document' => 'Document',
  'object_inputDocument_param_file_reference_type_bytes' => 'File reference',
  'object_document_param_file_reference_type_bytes' => 'File reference',
  'object_notifyBroadcasts' => 'Notify broadcasts',
  'object_inputPrivacyKeyPhoneP2P' => 'Privacy key phone p2p',
  'object_privacyKeyPhoneP2P' => 'Privacy key phone p2p',
  'object_authorization_param_current_type_true' => 'Current?',
  'object_authorization_param_official_app_type_true' => 'Official app?',
  'object_authorization_param_password_pending_type_true' => 'Password pending?',
  'object_account.password_param_has_password_type_true' => 'Has password?',
  'object_account.password_param_current_algo_type_PasswordKdfAlgo' => 'Current algo',
  'object_account.password_param_srp_B_type_bytes' => 'Srp b',
  'object_account.password_param_srp_id_type_long' => 'Srp ID',
  'object_account.password_param_new_algo_type_PasswordKdfAlgo' => 'New algo',
  'object_account.password_param_new_secure_algo_type_SecurePasswordKdfAlgo' => 'New secure algo',
  'object_account.passwordSettings_param_secure_settings_type_SecureSecretSettings' => 'Secure settings',
  'object_account.passwordInputSettings_param_new_algo_type_PasswordKdfAlgo' => 'New algo',
  'object_account.passwordInputSettings_param_new_secure_settings_type_SecureSecretSettings' => 'New secure settings',
  'object_textSubscript' => 'Text subscript',
  'object_textSubscript_param_text_type_RichText' => 'Text',
  'object_textSuperscript' => 'Text superscript',
  'object_textSuperscript_param_text_type_RichText' => 'Text',
  'object_textMarked' => 'Text marked',
  'object_textMarked_param_text_type_RichText' => 'Text',
  'object_textPhone' => 'Text phone',
  'object_textPhone_param_text_type_RichText' => 'Text',
  'object_textPhone_param_phone_type_string' => 'Phone',
  'object_textImage' => 'Text image',
  'object_textImage_param_document_id_type_long' => 'Document ID',
  'object_textImage_param_w_type_int' => 'Width',
  'object_textImage_param_h_type_int' => 'Height',
  'object_textAnchor' => 'Text anchor',
  'object_textAnchor_param_text_type_RichText' => 'Text',
  'object_textAnchor_param_name_type_string' => 'Name',
  'object_pageBlockPhoto_param_caption_type_PageCaption' => 'Caption',
  'object_pageBlockPhoto_param_url_type_string' => 'URL',
  'object_pageBlockPhoto_param_webpage_id_type_long' => 'Webpage ID',
  'object_pageBlockVideo_param_caption_type_PageCaption' => 'Caption',
  'object_pageBlockEmbed_param_caption_type_PageCaption' => 'Caption',
  'object_pageBlockEmbedPost_param_caption_type_PageCaption' => 'Caption',
  'object_pageBlockCollage_param_caption_type_PageCaption' => 'Caption',
  'object_pageBlockSlideshow_param_caption_type_PageCaption' => 'Caption',
  'object_pageBlockAudio_param_caption_type_PageCaption' => 'Caption',
  'object_pageBlockKicker' => 'Page block kicker',
  'object_pageBlockKicker_param_text_type_RichText' => 'Text',
  'object_pageBlockTable' => 'Page block table',
  'object_pageBlockTable_param_bordered_type_true' => 'Bordered?',
  'object_pageBlockTable_param_striped_type_true' => 'Striped?',
  'object_pageBlockTable_param_title_type_RichText' => 'Title',
  'object_pageBlockTable_param_rows_type_Vector t' => 'Rows',
  'object_pageBlockOrderedList' => 'Page block ordered list',
  'object_pageBlockOrderedList_param_items_type_Vector t' => 'Items',
  'object_pageBlockDetails' => 'Page block details',
  'object_pageBlockDetails_param_open_type_true' => 'Open?',
  'object_pageBlockDetails_param_blocks_type_Vector t' => 'Blocks',
  'object_pageBlockDetails_param_title_type_RichText' => 'Title',
  'object_pageBlockRelatedArticles' => 'Page block related articles',
  'object_pageBlockRelatedArticles_param_title_type_RichText' => 'Title',
  'object_pageBlockRelatedArticles_param_articles_type_Vector t' => 'Articles',
  'object_pageBlockMap' => 'Page block map',
  'object_pageBlockMap_param_geo_type_GeoPoint' => 'Geo',
  'object_pageBlockMap_param_zoom_type_int' => 'Zoom',
  'object_pageBlockMap_param_w_type_int' => 'Width',
  'object_pageBlockMap_param_h_type_int' => 'Height',
  'object_pageBlockMap_param_caption_type_PageCaption' => 'Caption',
  'object_phoneCall_param_p2p_allowed_type_true' => 'P2p allowed?',
  'object_langPackLanguage_param_official_type_true' => 'Official?',
  'object_langPackLanguage_param_rtl_type_true' => 'Rtl?',
  'object_langPackLanguage_param_beta_type_true' => 'Beta?',
  'object_langPackLanguage_param_base_lang_code_type_string' => 'Base lang code',
  'object_langPackLanguage_param_plural_code_type_string' => 'Plural code',
  'object_langPackLanguage_param_strings_count_type_int' => 'Strings count',
  'object_langPackLanguage_param_translated_count_type_int' => 'Translated count',
  'object_langPackLanguage_param_translations_url_type_string' => 'Translations URL',
  'object_secureValue_param_translation_type_Vector t' => 'Translation',
  'object_inputSecureValue_param_translation_type_Vector t' => 'Translation',
  'object_secureValueError' => 'Secure value error',
  'object_secureValueError_param_type_type_SecureValueType' => 'Type',
  'object_secureValueError_param_hash_type_bytes' => 'Hash',
  'object_secureValueError_param_text_type_string' => 'Text',
  'object_secureValueErrorTranslationFile' => 'Secure value error translation file',
  'object_secureValueErrorTranslationFile_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorTranslationFile_param_file_hash_type_bytes' => 'File hash',
  'object_secureValueErrorTranslationFile_param_text_type_string' => 'Text',
  'object_secureValueErrorTranslationFiles' => 'Secure value error translation files',
  'object_secureValueErrorTranslationFiles_param_type_type_SecureValueType' => 'Type',
  'object_secureValueErrorTranslationFiles_param_file_hash_type_Vector t' => 'File hash',
  'object_secureValueErrorTranslationFiles_param_text_type_string' => 'Text',
  'object_passwordKdfAlgoUnknown' => 'Password kdf algo unknown',
  'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow' => 'Password kdf algo sha256sha256pbkdf2hmacsh a512iter100000 sha256 mod pow',
  'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_salt1_type_bytes' => 'Salt1',
  'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_salt2_type_bytes' => 'Salt2',
  'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_g_type_int' => 'G',
  'object_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow_param_p_type_bytes' => 'P',
  'object_securePasswordKdfAlgoUnknown' => 'Secure password kdf algo unknown',
  'object_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000' => 'Secure password kdf algo pbkdf2hmacsh a512iter100000',
  'object_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000_param_salt_type_bytes' => 'Salt',
  'object_securePasswordKdfAlgoSHA512' => 'Secure password kdf algo sha512',
  'object_securePasswordKdfAlgoSHA512_param_salt_type_bytes' => 'Salt',
  'object_secureSecretSettings' => 'Secure secret settings',
  'object_secureSecretSettings_param_secure_algo_type_SecurePasswordKdfAlgo' => 'Secure algo',
  'object_secureSecretSettings_param_secure_secret_type_bytes' => 'Secure secret',
  'object_secureSecretSettings_param_secure_secret_id_type_long' => 'Secure secret ID',
  'object_inputCheckPasswordEmpty' => 'Empty input check password',
  'object_inputCheckPasswordSRP' => 'Check password srp',
  'object_inputCheckPasswordSRP_param_srp_id_type_long' => 'Srp ID',
  'object_inputCheckPasswordSRP_param_A_type_bytes' => 'A',
  'object_inputCheckPasswordSRP_param_M1_type_bytes' => 'M1',
  'object_secureRequiredType' => 'Secure required type',
  'object_secureRequiredType_param_native_names_type_true' => 'Native names?',
  'object_secureRequiredType_param_selfie_required_type_true' => 'Selfie required?',
  'object_secureRequiredType_param_translation_required_type_true' => 'Translation required?',
  'object_secureRequiredType_param_type_type_SecureValueType' => 'Type',
  'object_secureRequiredTypeOneOf' => 'Secure required type one of',
  'object_secureRequiredTypeOneOf_param_types_type_Vector t' => 'Types',
  'object_help.passportConfigNotModified' => 'Passport config not modified',
  'object_help.passportConfig' => 'Passport config',
  'object_help.passportConfig_param_hash_type_int' => 'Hash',
  'object_help.passportConfig_param_countries_langs_type_DataJSON' => 'Countries langs',
  'object_inputAppEvent_param_data_type_JSONValue' => 'Data',
  'object_jsonObjectValue' => 'Json object value',
  'object_jsonObjectValue_param_key_type_string' => 'Key',
  'object_jsonObjectValue_param_value_type_JSONValue' => 'Value',
  'object_jsonNull' => 'Json null',
  'object_jsonBool' => 'Json bool',
  'object_jsonBool_param_value_type_Bool' => 'Value?',
  'object_jsonNumber' => 'Json number',
  'object_jsonNumber_param_value_type_double' => 'Value',
  'object_jsonString' => 'Json string',
  'object_jsonString_param_value_type_string' => 'Value',
  'object_jsonArray' => 'Json array',
  'object_jsonArray_param_value_type_Vector t' => 'Value',
  'object_jsonObject' => 'Json object',
  'object_jsonObject_param_value_type_Vector t' => 'Value',
  'object_pageTableCell' => 'Page table cell',
  'object_pageTableCell_param_header_type_true' => 'Header?',
  'object_pageTableCell_param_align_center_type_true' => 'Align center?',
  'object_pageTableCell_param_align_right_type_true' => 'Align right?',
  'object_pageTableCell_param_valign_middle_type_true' => 'Valign middle?',
  'object_pageTableCell_param_valign_bottom_type_true' => 'Valign bottom?',
  'object_pageTableCell_param_text_type_RichText' => 'Text',
  'object_pageTableCell_param_colspan_type_int' => 'Colspan',
  'object_pageTableCell_param_rowspan_type_int' => 'Rowspan',
  'object_pageTableRow' => 'Page table row',
  'object_pageTableRow_param_cells_type_Vector t' => 'Cells',
  'object_pageCaption' => 'Page caption',
  'object_pageCaption_param_text_type_RichText' => 'Text',
  'object_pageCaption_param_credit_type_RichText' => 'Credit',
  'object_pageListItemText' => 'Page list item text',
  'object_pageListItemText_param_text_type_RichText' => 'Text',
  'object_pageListItemBlocks' => 'Page list item blocks',
  'object_pageListItemBlocks_param_blocks_type_Vector t' => 'Blocks',
  'object_pageListOrderedItemText' => 'Page list ordered item text',
  'object_pageListOrderedItemText_param_num_type_string' => 'Num',
  'object_pageListOrderedItemText_param_text_type_RichText' => 'Text',
  'object_pageListOrderedItemBlocks' => 'Page list ordered item blocks',
  'object_pageListOrderedItemBlocks_param_num_type_string' => 'Num',
  'object_pageListOrderedItemBlocks_param_blocks_type_Vector t' => 'Blocks',
  'object_pageRelatedArticle' => 'Page related article',
  'object_pageRelatedArticle_param_url_type_string' => 'URL',
  'object_pageRelatedArticle_param_webpage_id_type_long' => 'Webpage ID',
  'object_pageRelatedArticle_param_title_type_string' => 'Title',
  'object_pageRelatedArticle_param_description_type_string' => 'Description',
  'object_pageRelatedArticle_param_photo_id_type_long' => 'Photo ID',
  'object_pageRelatedArticle_param_author_type_string' => 'Author',
  'object_pageRelatedArticle_param_published_date_type_int' => 'Published date',
  'object_page' => 'Page',
  'object_page_param_part_type_true' => 'Part?',
  'object_page_param_rtl_type_true' => 'Rtl?',
  'object_page_param_v2_type_true' => 'V2?',
  'object_page_param_url_type_string' => 'URL',
  'object_page_param_blocks_type_Vector t' => 'Blocks',
  'object_page_param_photos_type_Vector t' => 'Photos',
  'object_page_param_documents_type_Vector t' => 'Documents',
  'object_help.supportName' => 'Support name',
  'object_help.supportName_param_name_type_string' => 'Name',
  'object_help.userInfoEmpty' => 'Empty user info',
  'object_help.userInfo' => 'User info',
  'object_help.userInfo_param_message_type_string' => 'Message',
  'object_help.userInfo_param_entities_type_Vector t' => 'Entities',
  'object_help.userInfo_param_author_type_string' => 'Author',
  'object_help.userInfo_param_date_type_int' => 'Date',
  'object_pollAnswer' => 'Poll answer',
  'object_pollAnswer_param_text_type_string' => 'Text',
  'object_pollAnswer_param_option_type_bytes' => 'Option',
  'object_poll' => 'Poll',
  'object_poll_param_id_type_long' => 'ID',
  'object_poll_param_closed_type_true' => 'Closed?',
  'object_poll_param_question_type_string' => 'Question',
  'object_poll_param_answers_type_Vector t' => 'Answers',
  'object_pollAnswerVoters' => 'Poll answer voters',
  'object_pollAnswerVoters_param_chosen_type_true' => 'Chosen?',
  'object_pollAnswerVoters_param_option_type_bytes' => 'Option',
  'object_pollAnswerVoters_param_voters_type_int' => 'Voters',
  'object_pollResults' => 'Poll results',
  'object_pollResults_param_min_type_true' => 'Min?',
  'object_pollResults_param_results_type_Vector t' => 'Results',
  'object_pollResults_param_total_voters_type_int' => 'Total voters',
  'object_chatOnlines' => 'Chat onlines',
  'object_chatOnlines_param_onlines_type_int' => 'Onlines',
  'object_statsURL' => 'Stats URL',
  'object_statsURL_param_url_type_string' => 'URL',
);
}
